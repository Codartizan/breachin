/Users/tshi/.pyenv/versions/3.10.4/bin/python3.10 /Users/tshi/PycharmProjects/breachin/breachin/project_diff/module_diff.py
Modified functions 0 and classes 1:
[]
[('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        class X:')]
Function Removal
[('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '            def __len__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def _add_doc(func, doc):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def _import_module(name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __get__(self, obj, tp):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name, old, new=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def _resolve(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __getattr__(self, attr):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __dir__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def _resolve(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, six_module_name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def _add_module(self, mod, *fullnames):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def _get_module(self, fullname):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def find_module(self, fullname, path=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __get_module(self, fullname):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def load_module(self, fullname):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def is_package(self, fullname):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def get_code(self, fullname):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __dir__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def add_move(move):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def remove_move(name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def advance_iterator(it):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def callable(obj):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def get_unbound_function(unbound):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def create_unbound_method(func, cls):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def get_unbound_function(unbound):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def create_bound_method(func, obj):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def create_unbound_method(func, cls):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        def next(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iterkeys(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def itervalues(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iteritems(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iterlists(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iterkeys(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def itervalues(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iteritems(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def iterlists(d, **kw):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def b(s):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def u(s):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def b(s):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def u(s):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def byte2int(bs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def indexbytes(buf, i):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def assertCountEqual(self, *args, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def assertRaisesRegex(self, *args, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def assertRegex(self, *args, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def reraise(tp, value, tb=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def exec_(_code_, _globs_=None, _locs_=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    exec_("""def reraise(tp, value, tb=None):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    exec_("""def raise_from(value, from_value):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    exec_("""def raise_from(value, from_value):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def raise_from(value, from_value):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def print_(*args, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        def write(data):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def print_(*args, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        def wrapper(f):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def with_metaclass(meta, *bases):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        def __new__(cls, name, this_bases, d):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def add_metaclass(metaclass):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def wrapper(cls):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'def python_2_unicode_compatible(klass):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/admin/templatetags/admin_static.py', 'def static(path):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/admin/bin/compress.py', 'def main():'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/staticfiles/templatetags/staticfiles.py', 'def static(path):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/staticfiles/templatetags/staticfiles.py', 'def do_static(parser, token):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', '    def _check_default(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', '    def check(self, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/postgresql/utils.py', 'def utc_tzinfo_factory(offset):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', '    def as_sql(self, with_limits=True, with_col_aliases=False):')]
Function Addition
[]
Function modification
[]
Function moved
[('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '            def __len__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __getattr__(self, attr):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __init__(self, name):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __dir__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    def __dir__(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/admin/templatetags/admin_static.py', 'def static(path):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/admin/bin/compress.py', 'def main():'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/staticfiles/templatetags/staticfiles.py', 'def static(path):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/staticfiles/templatetags/staticfiles.py', 'def do_static(parser, token):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', '    def _check_default(self):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', '    def check(self, **kwargs):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', '    def as_sql(self, with_limits=True, with_col_aliases=False):')]
Class Removal
[('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        class X:'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class _LazyDescr:'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class MovedModule(_LazyDescr):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class _LazyModule(types.ModuleType):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class MovedAttribute(_LazyDescr):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class _SixMetaPathImporter:'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class _MovedItems(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib_parse(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib_error(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib_request(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib_response(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib_robotparser(_LazyModule):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', 'class Module_six_moves_urllib(types.ModuleType):'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    class Iterator:'), ('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '    class metaclass(meta):'), ('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', 'class CheckFieldDefaultMixin:'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLCompiler(compiler.SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLAggregateCompiler(compiler.SQLAggregateCompiler, SQLCompiler):')]
Class Addition
[]
Class modification
[('/Users/tshi/researchProjs/django/django-2.2/django/utils/six.py', '        class X:')]
Class moved
[('/Users/tshi/researchProjs/django/django-2.2/django/contrib/postgres/fields/mixins.py', 'class CheckFieldDefaultMixin:'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLCompiler(compiler.SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler):'), ('/Users/tshi/researchProjs/django/django-2.2/django/db/backends/oracle/compiler.py', 'class SQLAggregateCompiler(compiler.SQLAggregateCompiler, SQLCompiler):')]

Process finished with exit code 0


/Library/Java/JavaVirtualMachines/jdk-11.0.12.jdk/Contents/Home/bin/java -javaagent:/Users/tshi/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/222.3739.54/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=49493:/Users/tshi/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/222.3739.54/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/tshi/IdeaProjects/breachin/target/classes:/Users/tshi/.m2/repository/com/google/code/gson/gson/2.9.1/gson-2.9.1.jar org.example.App
Remained file changes size: 480
Class  class BlockTranslateNode(Node): in file ('django/templatetags', 'i18n.py') is modified
Class  class GZipMiddleware(MiddlewareMixin): in file ('django/middleware', 'gzip.py') is modified
Class  class SecurityMiddleware(MiddlewareMixin): in file ('django/middleware', 'security.py') is modified
Class +class ModelChoiceIteratorValue: in file ('django/forms', 'models.py') is added
Class  class ModelChoiceIterator: in file ('django/forms', 'models.py') is modified
Class  class ModelChoiceField(ChoiceField): in file ('django/forms', 'models.py') is modified
Class +class DateTimeFormatsIterator: in file ('django/forms', 'fields.py') is added
Class  class DateTimeField(BaseTemporalField): in file ('django/forms', 'fields.py') is modified
Class +class InvalidJSONInput(str): in file ('django/forms', 'fields.py') is added
Class +class JSONString(str): in file ('django/forms', 'fields.py') is added
Class +class JSONField(CharField): in file ('django/forms', 'fields.py') is added
Class  class BaseFormSet: in file ('django/forms', 'formsets.py') is modified
Class  class DeclarativeFieldsMetaclass(MediaDefiningClass): in file ('django/forms', 'forms.py') is modified
Class  class BadSignature(Exception): in file ('django/core', 'signing.py') is modified
Class  class Signer: in file ('django/core', 'signing.py') is modified
Class  class URLValidator(RegexValidator): in file ('django/core', 'validators.py') is modified
Class  class FileExtensionValidator: in file ('django/core', 'validators.py') is modified
Class  class Paginator: in file ('django/core', 'paginator.py') is modified
Class -class QuerySetPaginator(Paginator): in file ('django/core', 'paginator.py') is modified
Class  class Page(collections.abc.Sequence): in file ('django/core', 'paginator.py') is modified
Class  class FieldDoesNotExist(Exception): in file ('django/core', 'exceptions.py') is modified
Class +class RequestAborted(Exception): in file ('django/core', 'exceptions.py') is added
Class +class BadRequest(Exception): in file ('django/core', 'exceptions.py') is modified
Class  class EmptyResultSet(Exception): in file ('django/core', 'exceptions.py') is added
Class +class SynchronousOnlyOperation(Exception): in file ('django/core', 'exceptions.py') is modified
Class +class CacheHandler(BaseConnectionHandler): in file ('django/core/cache', '__init__.py') is modified
Class -class CacheHandler: in file ('django/core/cache', '__init__.py') is modified
Class -class DefaultCacheProxy: in file ('django/core/cache', '__init__.py') is modified
Class  class MemcachedCache(BaseMemcachedCache): in file ('django/core/cache/backends', 'memcached.py') is modified
Class  class PyLibMCCache(BaseMemcachedCache): in file ('django/core/cache/backends', 'memcached.py') is modified
Class +class PyMemcacheCache(BaseMemcachedCache): in file ('django/core/cache/backends', 'memcached.py') is added
Class  class Options: in file ('django/core/cache/backends', 'db.py') is modified
Class +class InvalidCacheKey(ValueError): in file ('django/core/cache/backends', 'base.py') is modified
Class  class BaseCache: in file ('django/core/cache/backends', 'base.py') is modified
Class  class MIMEMixin: in file ('django/core/mail', 'message.py') is modified
Class  class CommandError(Exception): in file ('django/core/management', 'base.py') is modified
Class  class SystemCheckError(CommandError): in file ('django/core/management', 'base.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'createcachetable.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'inspectdb.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'check.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'sqlmigrate.py') is modified
Class  class ProxyModelWarning(Warning): in file ('django/core/management/commands', 'dumpdata.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'test.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'migrate.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'compilemessages.py') is modified
Class  class Command(BaseCommand): in file ('django/core/management/commands', 'testserver.py') is modified
Class  class DjangoSafeDumper(SafeDumper): in file ('django/core/serializers', 'pyyaml.py') is modified
Class  class Serializer(PythonSerializer): in file ('django/core/serializers', 'pyyaml.py') is modified
Class  class StopFutureHandlers(UploadFileException): in file ('django/core/files', 'uploadhandler.py') is modified
Class  class TemporaryFileUploadHandler(FileUploadHandler): in file ('django/core/files', 'uploadhandler.py') is modified
Class  class LimitedStream: in file ('django/core/handlers', 'wsgi.py') is modified
Class  class WSGIServer(simple_server.WSGIServer): in file ('django/core/servers', 'basehttp.py') is modified
Class  class Parser: in file ('django/template', 'base.py') is modified
Class  class FilterExpression: in file ('django/template', 'base.py') is modified
Class  class DebugNode(Node): in file ('django/template', 'defaulttags.py') is modified
Class  class IfEqualNode(Node): in file ('django/template', 'defaulttags.py') is modified
Class  class Origin: in file ('django/template/backends', 'jinja2.py') is modified
Class  class Loader(BaseLoader): in file ('django/template/loaders', 'cached.py') is modified
Class  class ServerFormatter(logging.Formatter): in file ('django/utils', 'log.py') is added
Class -class RemovedInDjango30Warning(DeprecationWarning): in file ('django/utils', 'deprecation.py') is added
Class +class RemovedInDjango41Warning(PendingDeprecationWarning): in file ('django/utils', 'deprecation.py') is modified
Class  class warn_about_renamed_method: in file ('django/utils', 'deprecation.py') is modified
Class  class MiddlewareMixin: in file ('django/utils', 'deprecation.py') is modified
Class  class date(real_date): in file ('django/utils', 'datetime_safe.py') is modified
Class  class cached_property: in file ('django/utils', 'functional.py') is modified
Class +class classproperty: in file ('django/utils', 'functional.py') is added
Class  class Promise: in file ('django/utils', 'functional.py') is modified
Class +class InvalidAlgorithm(ValueError): in file ('django/utils', 'crypto.py') is modified
Class  class ArchiveException(Exception): in file ('django/utils', 'archive.py') is modified
Class  class SafeData: in file ('django/utils', 'safestring.py') is modified
Class -class SafeBytes(bytes, SafeData): in file ('django/utils', 'safestring.py') is deleted
Class +class SafeString(str, SafeData): in file ('django/utils', 'safestring.py') is modified
Class  class BaseReloader: in file ('django/utils', 'autoreload.py') is modified
Class  class OrderedSet: in file ('django/utils', 'datastructures.py') is modified
Class  class Formatter: in file ('django/utils', 'dateformat.py') is modified
Class  class DateFormat(TimeFormat): in file ('django/utils', 'dateformat.py') is modified
Class -class FixedOffset(tzinfo): in file ('django/utils', 'timezone.py') is modified
Class  class classonlymethod(classmethod): in file ('django/utils', 'decorators.py') is modified
Class -class classproperty: in file ('django/utils', 'decorators.py') is modified
Class +class TranslationCatalog: in file ('django/utils/translation', 'trans_real.py') is added
Class  class DjangoTranslation(gettext_module.GNUTranslations): in file ('django/utils/translation', 'trans_real.py') is modified
Class +class MessageSerializer: in file ('django/contrib/messages/storage', 'cookie.py') is modified
Class  class CookieStorage(BaseStorage): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Class  class AccessMixin: in file ('django/contrib/auth', 'mixins.py') is modified
Class  class LoginRequiredMixin(AccessMixin): in file ('django/contrib/auth', 'mixins.py') is modified
Class  class UserAttributeSimilarityValidator: in file ('django/contrib/auth', 'password_validation.py') is modified
Class  class CommonPasswordValidator: in file ('django/contrib/auth', 'password_validation.py') is modified
Class  class NumericPasswordValidator: in file ('django/contrib/auth', 'password_validation.py') is modified
Class  class Meta: in file ('django/contrib/auth', 'models.py') is modified
Class  class Meta: in file ('django/contrib/auth', 'models.py') is modified
Class  class ASCIIUsernameValidator(validators.RegexValidator): in file ('django/contrib/auth', 'validators.py') is modified
Class  class UnicodeUsernameValidator(validators.RegexValidator): in file ('django/contrib/auth', 'validators.py') is modified
Class  class AuthConfig(AppConfig): in file ('django/contrib/auth', 'apps.py') is added
Class  class ReadOnlyPasswordHashWidget(forms.Widget): in file ('django/contrib/auth', 'forms.py') is modified
Class  class UsernameField(forms.CharField): in file ('django/contrib/auth', 'forms.py') is added
Class  class UserCreationForm(forms.ModelForm): in file ('django/contrib/auth', 'forms.py') is modified
Class  class AuthenticationForm(forms.Form): in file ('django/contrib/auth', 'forms.py') is modified
Class  class PasswordResetForm(forms.Form): in file ('django/contrib/auth', 'forms.py') is modified
Class +class BaseBackend: in file ('django/contrib/auth', 'backends.py') is added
Class +class ModelBackend(BaseBackend): in file ('django/contrib/auth', 'backends.py') is modified
Class  class BasePasswordHasher: in file ('django/contrib/auth', 'hashers.py') is modified
Class  class PBKDF2SHA1PasswordHasher(PBKDF2PasswordHasher): in file ('django/contrib/auth', 'hashers.py') is modified
Class  class Command(BaseCommand): in file ('django/contrib/auth/management/commands', 'changepassword.py') is modified
Class  class DeleteProtectedModelForm(base_model_form): in file ('django/contrib/admin', 'options.py') is modified
Class  class InlineModelAdminChecks(BaseModelAdminChecks): in file ('django/contrib/admin', 'checks.py') is modified
Class  class SimpleAdminConfig(AppConfig): in file ('django/contrib/admin', 'apps.py') is modified
Class  class AdminConfig(SimpleAdminConfig): in file ('django/contrib/admin', 'apps.py') is added
Class +class Media: in file ('django/contrib/admin', 'widgets.py') is modified
Class  class AdminURLFieldWidget(forms.URLInput): in file ('django/contrib/admin', 'widgets.py') is modified
Class  class FieldIsAForeignKeyColumnName(Exception): in file ('django/contrib/admin', 'utils.py') is modified
Class  class CSPMiddleware(MiddlewareMixin): in file ('django/contrib/admin', 'tests.py') is modified
Class  class RelatedOnlyFieldListFilter(RelatedFieldListFilter): in file ('django/contrib/admin', 'filters.py') is modified
Class +class EmptyFieldListFilter(FieldListFilter): in file ('django/contrib/admin', 'filters.py') is added
Class  class AutocompleteJsonView(BaseListView): in file ('django/contrib/admin/views', 'autocomplete.py') is modified
Class +class ChangeListSearchForm(forms.Form): in file ('django/contrib/admin/views', 'main.py') is added
Class  class ChangeList: in file ('django/contrib/admin/views', 'main.py') is modified
Class +class StaticFilesHandlerMixin: in file ('django/contrib/staticfiles', 'handlers.py') is modified
Class +class StaticFilesHandler(StaticFilesHandlerMixin, WSGIHandler): in file ('django/contrib/staticfiles', 'handlers.py') is added
Class +class ASGIStaticFilesHandler(StaticFilesHandlerMixin, ASGIHandler): in file ('django/contrib/staticfiles', 'handlers.py') is added
Class -class _MappingCache: in file ('django/contrib/staticfiles', 'storage.py') is deleted
Class -class CachedFilesMixin(HashedFilesMixin): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Class -class CachedStaticFilesStorage(CachedFilesMixin, StaticFilesStorage): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Class  class FlatPagesConfig(AppConfig): in file ('django/contrib/flatpages', 'apps.py') is added
Class  class SitesConfig(AppConfig): in file ('django/contrib/sites', 'apps.py') is added
Class -class PostgresSimpleLookup(Lookup): in file ('django/contrib/postgres', 'lookups.py') is modified
Class +class DataContains(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is added
Class -class DataContains(PostgresSimpleLookup): in file ('django/contrib/postgres', 'lookups.py') is deleted
Class +class ContainedBy(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is added
Class -class ContainedBy(PostgresSimpleLookup): in file ('django/contrib/postgres', 'lookups.py') is deleted
Class +class Overlap(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is added
Class -class Overlap(PostgresSimpleLookup): in file ('django/contrib/postgres', 'lookups.py') is deleted
Class +class HasKey(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is modified
Class +class HasKeys(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is modified
Class  class HasAnyKeys(HasKeys): in file ('django/contrib/postgres', 'lookups.py') is modified
Class  class Unaccent(Transform): in file ('django/contrib/postgres', 'lookups.py') is modified
Class +class TrigramSimilar(PostgresOperatorLookup): in file ('django/contrib/postgres', 'lookups.py') is deleted
Class -class JSONExact(Exact): in file ('django/contrib/postgres', 'lookups.py') is deleted
Class +class BloomExtension(CreateExtension): in file ('django/contrib/postgres', 'operations.py') is added
Class  class BtreeGinExtension(CreateExtension): in file ('django/contrib/postgres', 'operations.py') is modified
Class +class NotInTransactionMixin: in file ('django/contrib/postgres', 'operations.py') is added
Class +class AddIndexConcurrently(NotInTransactionMixin, AddIndex): in file ('django/contrib/postgres', 'operations.py') is added
Class +class RemoveIndexConcurrently(NotInTransactionMixin, RemoveIndex): in file ('django/contrib/postgres', 'operations.py') is added
Class +class CollationOperation(Operation): in file ('django/contrib/postgres', 'operations.py') is modified
Class +class CreateCollation(CollationOperation): in file ('django/contrib/postgres', 'operations.py') is added
Class +class RemoveCollation(CollationOperation): in file ('django/contrib/postgres', 'operations.py') is added
Class +class BloomIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is added
Class  class BrinIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class  class BTreeIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class  class GinIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class  class GistIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class  class HashIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class  class SpGistIndex(PostgresIndex): in file ('django/contrib/postgres', 'indexes.py') is modified
Class +class OpClass(Func): in file ('django/contrib/postgres', 'indexes.py') is added
Class  class SearchVectorExact(Lookup): in file ('django/contrib/postgres', 'search.py') is modified
Class  class SearchVectorField(Field): in file ('django/contrib/postgres', 'search.py') is modified
Class +class SearchConfig(Expression): in file ('django/contrib/postgres', 'search.py') is added
Class  class SearchVectorCombinable: in file ('django/contrib/postgres', 'search.py') is modified
Class  class SearchVector(SearchVectorCombinable, Func): in file ('django/contrib/postgres', 'search.py') is modified
Class +class SearchQuery(SearchQueryCombinable, Func): in file ('django/contrib/postgres', 'search.py') is modified
Class +class SearchHeadline(Func): in file ('django/contrib/postgres', 'search.py') is modified
Class +class RangeWidget(MultiWidget): in file ('django/contrib/postgres/forms', 'ranges.py') is added
Class +class HiddenRangeWidget(RangeWidget): in file ('django/contrib/postgres/forms', 'ranges.py') is added
Class  class BaseRangeField(forms.MultiValueField): in file ('django/contrib/postgres/forms', 'ranges.py') is modified
Class -class FloatRangeField(DecimalRangeField): in file ('django/contrib/postgres/forms', 'ranges.py') is deleted
Class  class DateTimeRangeField(BaseRangeField): in file ('django/contrib/postgres/forms', 'ranges.py') is modified
Class -class RangeWidget(MultiWidget): in file ('django/contrib/postgres/forms', 'ranges.py') is deleted
Class -class InvalidJSONInput(str): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Class -class JSONString(str): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Class -class JSONField(forms.CharField): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Class +class JSONField(BuiltinJSONField): in file ('django/contrib/postgres/forms', 'jsonb.py') is added
Class  class OrderableAggMixin: in file ('django/contrib/postgres/aggregates', 'mixins.py') is modified
Class  class BoolAnd(Aggregate): in file ('django/contrib/postgres/aggregates', 'general.py') is added
Class  class BoolOr(Aggregate): in file ('django/contrib/postgres/aggregates', 'general.py') is added
Class +class JSONBAgg(OrderableAggMixin, Aggregate): in file ('django/contrib/postgres/aggregates', 'general.py') is modified
Class  class StringAgg(OrderableAggMixin, Aggregate): in file ('django/contrib/postgres/aggregates', 'general.py') is modified
Class +class RangeBoundary(models.Expression): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class RangeOperators: in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class  class RangeField(models.Field): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class -class FloatRangeField(RangeField): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Class  class DateTimeRangeField(RangeField): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class +class DateTimeRangeContains(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class +class RangeContainedBy(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class -class FullyLessThan(lookups.PostgresSimpleLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class FullyLessThan(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Class -class FullGreaterThan(lookups.PostgresSimpleLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class FullGreaterThan(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Class -class NotLessThan(lookups.PostgresSimpleLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class NotLessThan(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Class -class NotGreaterThan(lookups.PostgresSimpleLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class NotGreaterThan(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Class -class AdjacentToLookup(lookups.PostgresSimpleLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class AdjacentToLookup(PostgresOperatorLookup): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Class +class LowerInclusive(models.Transform): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class LowerInfinite(models.Transform): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class UpperInclusive(models.Transform): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class +class UpperInfinite(models.Transform): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Class -class JsonAdapter(Json): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class +class JSONField(BuiltinJSONField): in file ('django/contrib/postgres/fields', 'jsonb.py') is added
Class -class JSONField(CheckFieldDefaultMixin, Field): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class +class KeyTransform(BuiltinKeyTransform): in file ('django/contrib/postgres/fields', 'jsonb.py') is modified
Class -class KeyTransform(Transform): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class +class KeyTextTransform(BuiltinKeyTextTransform): in file ('django/contrib/postgres/fields', 'jsonb.py') is modified
Class -class KeyTextTransform(KeyTransform): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformTextLookupMixin: in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformIExact(KeyTransformTextLookupMixin, builtin_lookups.IExact): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformIContains(KeyTransformTextLookupMixin, builtin_lookups.IContains): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformStartsWith(KeyTransformTextLookupMixin, builtin_lookups.StartsWith): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformIStartsWith(KeyTransformTextLookupMixin, builtin_lookups.IStartsWith): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformEndsWith(KeyTransformTextLookupMixin, builtin_lookups.EndsWith): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformIEndsWith(KeyTransformTextLookupMixin, builtin_lookups.IEndsWith): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformRegex(KeyTransformTextLookupMixin, builtin_lookups.Regex): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformIRegex(KeyTransformTextLookupMixin, builtin_lookups.IRegex): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class KeyTransformFactory: in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Class -class ArrayContains(lookups.DataContains): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Class -class ArrayContainedBy(lookups.ContainedBy): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Class -class ArrayExact(Exact): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Class -class ArrayOverlap(lookups.Overlap): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Class +class ArrayRHSMixin: in file ('django/contrib/postgres/fields', 'array.py') is added
Class +class ArrayContains(ArrayRHSMixin, lookups.DataContains): in file ('django/contrib/postgres/fields', 'array.py') is added
Class +class ArrayContainedBy(ArrayRHSMixin, lookups.ContainedBy): in file ('django/contrib/postgres/fields', 'array.py') is added
Class +class ArrayExact(ArrayRHSMixin, Exact): in file ('django/contrib/postgres/fields', 'array.py') is added
Class +class ArrayOverlap(ArrayRHSMixin, lookups.Overlap): in file ('django/contrib/postgres/fields', 'array.py') is modified
Class  class ArrayInLookup(In): in file ('django/contrib/postgres/fields', 'array.py') is modified
Class  class Meta: in file ('django/contrib/redirects', 'models.py') is modified
Class  class RedirectsConfig(AppConfig): in file ('django/contrib/redirects', 'apps.py') is added
Class  class InvalidSessionKey(SuspiciousOperation): in file ('django/contrib/sessions', 'exceptions.py') is modified
Class  class SuspiciousSession(SuspiciousOperation): in file ('django/contrib/sessions', 'exceptions.py') is added
Class +class SessionInterrupted(BadRequest): in file ('django/contrib/sessions', 'exceptions.py') is added
Class  class SessionMiddleware(MiddlewareMixin): in file ('django/contrib/sessions', 'middleware.py') is modified
Class  class Command(BaseCommand): in file ('django/contrib/sessions/management/commands', 'clearsessions.py') is modified
Class  class SiteMapsConfig(AppConfig): in file ('django/contrib/sitemaps', 'apps.py') is added
Class  class ContentTypesConfig(AppConfig): in file ('django/contrib/contenttypes', 'apps.py') is added
Class  class RenameContentType(migrations.RunPython): in file ('django/contrib/contenttypes/management', '__init__.py') is modified
Class  class Command(BaseCommand): in file ('django/contrib/contenttypes/management/commands', 'remove_stale_contenttypes.py') is modified
Class  class GISConfig(AppConfig): in file ('django/contrib/gis', 'apps.py') is added
Class  class LinearRing(LineString): in file ('django/contrib/gis/geos', 'linestring.py') is added
Class  class GEOSGeometryBase(GEOSBase): in file ('django/contrib/gis/geos', 'geometry.py') is modified
Class -class BinConstructor(GEOSFuncFactory): in file ('django/contrib/gis/geos/prototypes', 'geom.py') is deleted
Class -class BinOutput(GEOSFuncFactory): in file ('django/contrib/gis/geos/prototypes', 'geom.py') is deleted
Class  class Field(GDALBase): in file ('django/contrib/gis/gdal', 'field.py') is modified
Class  class OFTInteger(Field): in file ('django/contrib/gis/gdal', 'field.py') is modified
Class +class AxisOrder(IntEnum): in file ('django/contrib/gis/gdal', 'srs.py') is added
Class  class SpatialReference(GDALBase): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Class  class Feature(GDALBase): in file ('django/contrib/gis/gdal', 'feature.py') is modified
Class  class DataSource(GDALBase): in file ('django/contrib/gis/gdal', 'datasource.py') is modified
Class  class Layer(GDALBase): in file ('django/contrib/gis/gdal', 'layer.py') is modified
Class  class Driver(GDALBase): in file ('django/contrib/gis/gdal', 'driver.py') is modified
Class  class OGRGeometry(GDALBase): in file ('django/contrib/gis/gdal', 'geometries.py') is modified
Class  class gdal_char_p(c_char_p): in file ('django/contrib/gis/gdal/prototypes', 'generation.py') is added
Class  class OracleOperations(BaseSpatialOperations, DatabaseOperations): in file ('django/contrib/gis/db/backends/oracle', 'operations.py') is modified
Class  class OracleIntrospection(DatabaseIntrospection): in file ('django/contrib/gis/db/backends/oracle', 'introspection.py') is modified
Class  class DatabaseFeatures(BaseSpatialFeatures, Psycopg2DatabaseFeatures): in file ('django/contrib/gis/db/backends/postgis', 'features.py') is modified
Class  class PostGISOperations(BaseSpatialOperations, DatabaseOperations): in file ('django/contrib/gis/db/backends/postgis', 'operations.py') is modified
Class -class GeoIntrospectionError(Exception): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is deleted
Class  class PostGISIntrospection(DatabaseIntrospection): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is modified
Class  class MySQLOperations(BaseSpatialOperations, DatabaseOperations): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is modified
Class  class DatabaseFeatures(BaseSpatialFeatures, SQLiteDatabaseFeatures): in file ('django/contrib/gis/db/backends/spatialite', 'features.py') is added
Class  class GeoFlexibleFieldLookupDict(FlexibleFieldLookupDict): in file ('django/contrib/gis/db/backends/spatialite', 'introspection.py') is modified
Class  class SpatiaLiteIntrospection(DatabaseIntrospection): in file ('django/contrib/gis/db/backends/spatialite', 'introspection.py') is modified
Class  class SpatialiteSchemaEditor(DatabaseSchemaEditor): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Class  class BaseSpatialFeatures: in file ('django/contrib/gis/db/backends/base', 'features.py') is modified
Class  class OracleToleranceMixin: in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class  class Area(OracleToleranceMixin, GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class  class AsGML(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class -class AsKML(AsGML): in file ('django/contrib/gis/db/models', 'functions.py') is deleted
Class +class AsKML(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is added
Class  class AsSVG(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class +class AsWKB(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is added
Class +class AsWKT(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is added
Class +class BoundingCircle(OracleToleranceMixin, GeomOutputGeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class -class ForceRHR(GeomOutputGeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is deleted
Class  class GeoHash(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class +class GeometryDistance(GeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class  class Intersection(OracleToleranceMixin, GeomOutputGeoFunc): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Class  class RasterBandTransform(Transform): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Class  class RelateLookup(GISLookup): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Class  class DWithinLookup(DistanceLookupBase): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Class -class UnreadablePostError(IOError): in file ('django/http', 'request.py') is modified
Class +class UnreadablePostError(OSError): in file ('django/http', 'request.py') is modified
Class +class MediaType: in file ('django/http', 'request.py') is modified
Class -class BadHeaderError(ValueError): in file ('django/http', 'response.py') is deleted
Class -class HttpResponseBase: in file ('django/http', 'response.py') is modified
Class +class ResponseHeaders(CaseInsensitiveMapping): in file ('django/http', 'response.py') is modified
Class +class BadHeaderError(ValueError): in file ('django/http', 'response.py') is added
Class +class HttpResponseBase: in file ('django/http', 'response.py') is modified
Class  class HttpResponse(HttpResponseBase): in file ('django/http', 'response.py') is modified
Class  class ResolverMatch: in file ('django/urls', 'resolvers.py') is modified
Class -class DefaultConnectionProxy: in file ('django/db', '__init__.py') is modified
Class -class ConnectionDoesNotExist(Exception): in file ('django/db', 'utils.py') is deleted
Class -class ConnectionHandler: in file ('django/db', 'utils.py') is deleted
Class +class ConnectionHandler(BaseConnectionHandler): in file ('django/db', 'utils.py') is modified
Class  class BaseSimpleSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is added
Class +class ChoicesSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is added
Class  class DateTimeSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is modified
Class  class FloatSerializer(BaseSimpleSerializer): in file ('django/db/migrations', 'serializer.py') is modified
Class +class PathLikeSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is added
Class +class PathSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is added
Class  class RegexSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is modified
Class  class UUIDSerializer(BaseSerializer): in file ('django/db/migrations', 'serializer.py') is modified
Class  class Serializer: in file ('django/db/migrations', 'serializer.py') is modified
Class  class AppConfigStub(AppConfig): in file ('django/db/migrations', 'state.py') is modified
Class  class DeleteModel(ModelOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class RenameModel(ModelOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class +class ModelOptionOperation(ModelOperation): in file ('django/db/migrations/operations', 'models.py') is added
Class +class AlterModelTable(ModelOptionOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class -class ModelOptionOperation(ModelOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class AlterTogetherOptionOperation(ModelOptionOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class AlterUniqueTogether(AlterTogetherOptionOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class AlterModelOptions(ModelOptionOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class AlterModelManagers(ModelOptionOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class IndexOperation(Operation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class RemoveIndex(IndexOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class AddConstraint(IndexOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class RemoveConstraint(IndexOperation): in file ('django/db/migrations/operations', 'models.py') is modified
Class  class FieldOperation(Operation): in file ('django/db/migrations/operations', 'fields.py') is modified
Class  class RemoveField(FieldOperation): in file ('django/db/migrations/operations', 'fields.py') is modified
Class  class AlterField(FieldOperation): in file ('django/db/migrations/operations', 'fields.py') is modified
Class  class RenameField(FieldOperation): in file ('django/db/migrations/operations', 'fields.py') is modified
Class -class ModelTuple(namedtuple('ModelTupleBase', ('app_label', 'model_name'))): in file ('django/db/migrations/operations', 'utils.py') is modified
Class  class Operation: in file ('django/db/migrations/operations', 'base.py') is modified
Class  class Reference: in file ('django/db/backends', 'ddl_references.py') is modified
Class +class Expressions(TableColumns): in file ('django/db/backends', 'ddl_references.py') is added
Class  class DatabaseClient(BaseDatabaseClient): in file ('django/db/backends/postgresql', 'client.py') is modified
Class  class DatabaseFeatures(BaseDatabaseFeatures): in file ('django/db/backends/postgresql', 'features.py') is modified
Class  class DatabaseOperations(BaseDatabaseOperations): in file ('django/db/backends/postgresql', 'operations.py') is modified
Class  class DatabaseIntrospection(BaseDatabaseIntrospection): in file ('django/db/backends/postgresql', 'introspection.py') is modified
Class +class CursorDebugWrapper(BaseCursorDebugWrapper): in file ('django/db/backends/postgresql', 'base.py') is added
Class  class DatabaseSchemaEditor(BaseDatabaseSchemaEditor): in file ('django/db/backends/postgresql', 'schema.py') is modified
Class  class DatabaseFeatures(BaseDatabaseFeatures): in file ('django/db/backends/oracle', 'features.py') is modified
Class  class DatabaseOperations(BaseDatabaseOperations): in file ('django/db/backends/oracle', 'operations.py') is modified
Class +class InsertVar: in file ('django/db/backends/oracle', 'utils.py') is modified
Class  class Oracle_datetime(datetime.datetime): in file ('django/db/backends/oracle', 'utils.py') is modified
Class  class BulkInsertMapper: in file ('django/db/backends/oracle', 'utils.py') is modified
Class  class DatabaseIntrospection(BaseDatabaseIntrospection): in file ('django/db/backends/oracle', 'introspection.py') is modified
Class  class DatabaseSchemaEditor(BaseDatabaseSchemaEditor): in file ('django/db/backends/oracle', 'schema.py') is modified
Class  class DatabaseClient(BaseDatabaseClient): in file ('django/db/backends/sqlite3', 'client.py') is modified
Class  class SQLiteCursorWrapper(Database.Cursor): in file ('django/db/backends/sqlite3', 'base.py') is modified
Class  class DatabaseSchemaEditor(BaseDatabaseSchemaEditor): in file ('django/db/backends/sqlite3', 'schema.py') is modified
Class  class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler): in file ('django/db/backends/mysql', 'compiler.py') is modified
Class  class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler): in file ('django/db/backends/mysql', 'compiler.py') is modified
Class  class DatabaseFeatures(BaseDatabaseFeatures): in file ('django/db/backends/mysql', 'features.py') is modified
Class  class DatabaseOperations(BaseDatabaseOperations): in file ('django/db/backends/mysql', 'operations.py') is modified
Class  class DatabaseIntrospection(BaseDatabaseIntrospection): in file ('django/db/backends/mysql', 'introspection.py') is modified
Class  class CursorWrapper: in file ('django/db/backends/mysql', 'base.py') is modified
Class  class DatabaseWrapper(BaseDatabaseWrapper): in file ('django/db/backends/mysql', 'base.py') is modified
Class  class BaseDatabaseClient: in file ('django/db/backends/base', 'client.py') is modified
Class  class BaseDatabaseFeatures: in file ('django/db/backends/base', 'features.py') is modified
Class  class BaseDatabaseOperations: in file ('django/db/backends/base', 'operations.py') is modified
Class  class BaseDatabaseIntrospection: in file ('django/db/backends/base', 'introspection.py') is modified
Class  class ModelSignal(Signal): in file ('django/db/models', 'signals.py') is modified
Class  class BaseIterable: in file ('django/db/models', 'query.py') is modified
Class  class InstanceCheckMeta(type): in file ('django/db/models', 'query.py') is modified
Class  class BaseExpression: in file ('django/db/models', 'expressions.py') is modified
Class +class Expression(BaseExpression, Combinable): in file ('django/db/models', 'expressions.py') is modified
Class -class Expression(BaseExpression, Combinable): in file ('django/db/models', 'expressions.py') is modified
Class  class CombinedExpression(SQLiteNumericMixin, Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class DurationExpression(CombinedExpression): in file ('django/db/models', 'expressions.py') is modified
Class  class F(Combinable): in file ('django/db/models', 'expressions.py') is modified
Class  class OuterRef(F): in file ('django/db/models', 'expressions.py') is modified
Class  class Value(Expression): in file ('django/db/models', 'expressions.py') is modified
Class -class DurationValue(Value): in file ('django/db/models', 'expressions.py') is modified
Class  class RawSQL(Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class Star(Expression): in file ('django/db/models', 'expressions.py') is modified
Class -class Random(Expression): in file ('django/db/models', 'expressions.py') is deleted
Class  class Col(Expression): in file ('django/db/models', 'expressions.py') is modified
Class -class SimpleCol(Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class Ref(Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class ExpressionWrapper(Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class When(Expression): in file ('django/db/models', 'expressions.py') is modified
Class -class Subquery(Expression): in file ('django/db/models', 'expressions.py') is added
Class +class Subquery(BaseExpression, Combinable): in file ('django/db/models', 'expressions.py') is modified
Class  class Exists(Subquery): in file ('django/db/models', 'expressions.py') is modified
Class +class OrderBy(Expression): in file ('django/db/models', 'expressions.py') is modified
Class +class Window(SQLiteNumericMixin, Expression): in file ('django/db/models', 'expressions.py') is modified
Class  class Lookup: in file ('django/db/models', 'lookups.py') is modified
Class  class Transform(RegisterLookupMixin, Func): in file ('django/db/models', 'lookups.py') is modified
Class +class PostgresOperatorLookup(FieldGetDbPrepValueMixin, Lookup): in file ('django/db/models', 'lookups.py') is added
Class  class Exact(FieldGetDbPrepValueMixin, BuiltinLookup): in file ('django/db/models', 'lookups.py') is modified
Class -class YearComparisonLookup(YearLookup): in file ('django/db/models', 'lookups.py') is modified
Class  class YearExact(YearLookup, Exact): in file ('django/db/models', 'lookups.py') is deleted
Class -class YearGt(YearComparisonLookup): in file ('django/db/models', 'lookups.py') is deleted
Class -class YearGte(YearComparisonLookup): in file ('django/db/models', 'lookups.py') is deleted
Class -class YearLt(YearComparisonLookup): in file ('django/db/models', 'lookups.py') is deleted
Class -class YearLte(YearComparisonLookup): in file ('django/db/models', 'lookups.py') is modified
Class +class YearGt(YearLookup, GreaterThan): in file ('django/db/models', 'lookups.py') is added
Class +class YearGte(YearLookup, GreaterThanOrEqual): in file ('django/db/models', 'lookups.py') is added
Class +class YearLt(YearLookup, LessThan): in file ('django/db/models', 'lookups.py') is added
Class +class YearLte(YearLookup, LessThanOrEqual): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDTextMixin: in file ('django/db/models', 'lookups.py') is modified
Class +class UUIDIExact(UUIDTextMixin, IExact): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDContains(UUIDTextMixin, Contains): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDIContains(UUIDTextMixin, IContains): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDStartsWith(UUIDTextMixin, StartsWith): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDIStartsWith(UUIDTextMixin, IStartsWith): in file ('django/db/models', 'lookups.py') is added
Class +class UUIDEndsWith(UUIDTextMixin, EndsWith): in file ('django/db/models', 'lookups.py') is added
Class +class IndexExpression(Func): in file ('django/db/models', 'indexes.py') is modified
Class  class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate): in file ('django/db/models', 'aggregates.py') is added
Class  class Count(Aggregate): in file ('django/db/models', 'aggregates.py') is modified
Class  class Sum(FixDurationInputMixin, Aggregate): in file ('django/db/models', 'aggregates.py') is added
Class  class ProtectedError(IntegrityError): in file ('django/db/models', 'deletion.py') is modified
Class +class RestrictedError(IntegrityError): in file ('django/db/models', 'deletion.py') is modified
Class  class BaseConstraint: in file ('django/db/models', 'constraints.py') is modified
Class  class CheckConstraint(BaseConstraint): in file ('django/db/models', 'constraints.py') is modified
Class +class Deferrable(Enum): in file ('django/db/models', 'constraints.py') is added
Class  class UniqueConstraint(BaseConstraint): in file ('django/db/models', 'constraints.py') is modified
Class -class InvalidQuery(Exception): in file ('django/db/models', 'query_utils.py') is deleted
Class +class InvalidQueryType(type): in file ('django/db/models', 'query_utils.py') is added
Class +class InvalidQuery(Exception, metaclass=InvalidQueryType): in file ('django/db/models', 'query_utils.py') is modified
Class -class QueryWrapper: in file ('django/db/models', 'query_utils.py') is deleted
Class  class Q(tree.Node): in file ('django/db/models', 'query_utils.py') is modified
Class  class Restaurant(models.Model): in file ('django/db/models', 'query_utils.py') is modified
Class  class Deferred: in file ('django/db/models', 'base.py') is modified
Class  class NumericOutputFieldMixin: in file ('django/db/models/functions', 'mixins.py') is modified
Class  class Cast(Func): in file ('django/db/models/functions', 'comparison.py') is modified
Class  class Coalesce(Func): in file ('django/db/models/functions', 'comparison.py') is modified
Class +class Collate(Func): in file ('django/db/models/functions', 'comparison.py') is modified
Class  class Greatest(Func): in file ('django/db/models/functions', 'comparison.py') is modified
Class +class JSONObject(Func): in file ('django/db/models/functions', 'comparison.py') is added
Class +class ArgJoiner: in file ('django/db/models/functions', 'comparison.py') is added
Class -class BytesToCharFieldConversionMixin: in file ('django/db/models/functions', 'text.py') is deleted
Class +class MySQLSHA2Mixin: in file ('django/db/models/functions', 'text.py') is added
Class +class OracleHashMixin: in file ('django/db/models/functions', 'text.py') is added
Class +class PostgreSQLSHAMixin: in file ('django/db/models/functions', 'text.py') is added
Class  class Chr(Transform): in file ('django/db/models/functions', 'text.py') is modified
Class  class Left(Func): in file ('django/db/models/functions', 'text.py') is modified
Class +class LPad(Func): in file ('django/db/models/functions', 'text.py') is modified
Class +class MD5(OracleHashMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class  class Ord(Transform): in file ('django/db/models/functions', 'text.py') is modified
Class +class Repeat(Func): in file ('django/db/models/functions', 'text.py') is modified
Class +class SHA1(OracleHashMixin, PostgreSQLSHAMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class +class SHA224(MySQLSHA2Mixin, PostgreSQLSHAMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class +class SHA256(MySQLSHA2Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class +class SHA384(MySQLSHA2Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class +class SHA512(MySQLSHA2Mixin, OracleHashMixin, PostgreSQLSHAMixin, Transform): in file ('django/db/models/functions', 'text.py') is added
Class  class StrIndex(Func): in file ('django/db/models/functions', 'text.py') is modified
Class  class Substr(Func): in file ('django/db/models/functions', 'text.py') is added
Class +class Random(NumericOutputFieldMixin, Func): in file ('django/db/models/functions', 'math.py') is added
Class  class Round(Transform): in file ('django/db/models/functions', 'math.py') is added
Class +class Sign(Transform): in file ('django/db/models/functions', 'math.py') is added
Class +class ExtractIsoWeekDay(Extract): in file ('django/db/models/functions', 'datetime.py') is modified
Class  class ExtractQuarter(Extract): in file ('django/db/models/functions', 'datetime.py') is modified
Class  class Trunc(TruncBase): in file ('django/db/models/functions', 'datetime.py') is modified
Class  class TruncYear(TruncBase): in file ('django/db/models/functions', 'datetime.py') is modified
Class +class ForeignKeyDeferredAttribute(DeferredAttribute): in file ('django/db/models/fields', 'related_descriptors.py') is added
Class  class ForwardManyToOneDescriptor: in file ('django/db/models/fields', 'related_descriptors.py') is modified
Class -class FileDescriptor: in file ('django/db/models/fields', 'files.py') is added
Class +class FileDescriptor(DeferredAttribute): in file ('django/db/models/fields', 'files.py') is modified
Class  class FileField(Field): in file ('django/db/models/fields', 'files.py') is modified
Class +class CheckFieldDefaultMixin: in file ('django/db/models/fields', 'mixins.py') is added
Class -class AutoField(Field): in file ('django/db/models/fields', '__init__.py') is deleted
Class -class BigAutoField(AutoField): in file ('django/db/models/fields', '__init__.py') is deleted
Class  class BooleanField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class CharField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class CommaSeparatedIntegerField(CharField): in file ('django/db/models/fields', '__init__.py') is modified
Class  class DateField(DateTimeCheckMixin, Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class DateTimeField(DateField): in file ('django/db/models/fields', '__init__.py') is modified
Class  class DecimalField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class FloatField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class IntegerField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class +class SmallIntegerField(IntegerField): in file ('django/db/models/fields', '__init__.py') is added
Class  class IPAddressField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class NullBooleanField(BooleanField): in file ('django/db/models/fields', '__init__.py') is modified
Class  class PositiveIntegerRelDbTypeMixin: in file ('django/db/models/fields', '__init__.py') is modified
Class -class PositiveIntegerField(PositiveIntegerRelDbTypeMixin, IntegerField): in file ('django/db/models/fields', '__init__.py') is modified
Class +class PositiveBigIntegerField(PositiveIntegerRelDbTypeMixin, BigIntegerField): in file ('django/db/models/fields', '__init__.py') is modified
Class +class PositiveIntegerField(PositiveIntegerRelDbTypeMixin, IntegerField): in file ('django/db/models/fields', '__init__.py') is added
Class +class PositiveSmallIntegerField(PositiveIntegerRelDbTypeMixin, SmallIntegerField): in file ('django/db/models/fields', '__init__.py') is modified
Class -class SmallIntegerField(IntegerField): in file ('django/db/models/fields', '__init__.py') is deleted
Class  class TextField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class TimeField(DateTimeCheckMixin, Field): in file ('django/db/models/fields', '__init__.py') is modified
Class  class UUIDField(Field): in file ('django/db/models/fields', '__init__.py') is modified
Class +class AutoFieldMixin: in file ('django/db/models/fields', '__init__.py') is modified
Class +class AutoFieldMeta(type): in file ('django/db/models/fields', '__init__.py') is modified
Class +class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta): in file ('django/db/models/fields', '__init__.py') is added
Class +class BigAutoField(AutoFieldMixin, BigIntegerField): in file ('django/db/models/fields', '__init__.py') is added
Class +class SmallAutoField(AutoFieldMixin, SmallIntegerField): in file ('django/db/models/fields', '__init__.py') is added
Class  class RelatedLookupMixin: in file ('django/db/models/fields', 'related_lookups.py') is modified
Class  class SQLCompiler: in file ('django/db/models/sql', 'compiler.py') is modified
Class  class SQLInsertCompiler(SQLCompiler): in file ('django/db/models/sql', 'compiler.py') is modified
Class  class SQLDeleteCompiler(SQLCompiler): in file ('django/db/models/sql', 'compiler.py') is modified
Class  class SQLUpdateCompiler(SQLCompiler): in file ('django/db/models/sql', 'compiler.py') is modified
Class  class RawQuery: in file ('django/db/models/sql', 'query.py') is modified
Class +class Query(BaseExpression): in file ('django/db/models/sql', 'query.py') is modified
Class  class UpdateQuery(Query): in file ('django/db/models/sql', 'subqueries.py') is modified
Class +class ExceptionCycleWarning(UserWarning): in file ('django/views', 'debug.py') is added
Class  class CallableSettingWrapper: in file ('django/views', 'debug.py') is modified
Class -class ExceptionReporterFilter: in file ('django/views', 'debug.py') is deleted
Class -class SafeExceptionReporterFilter(ExceptionReporterFilter): in file ('django/views', 'debug.py') is added
Class +class SafeExceptionReporterFilter: in file ('django/views', 'debug.py') is modified
Class  class ExceptionReporter: in file ('django/views', 'debug.py') is modified
Class  class Settings: in file ('django/conf', '__init__.py') is modified
Modified classes: 318
Added classes: 116
Deleted classes: 57
Function -def read(fname): in file ('', 'setup.py') is deleted
Function  def fetch(resources=None, languages=None): in file ('scripts', 'manage_translations.py') is modified
Function -def render_to_response(template_name, context=None, content_type=None, status=None, using=None): in file ('django', 'shortcuts.py') is deleted
Function  def render(request, template_name, context=None, content_type=None, status=None, using=None): in file ('django', 'shortcuts.py') is modified
Function  def render_token_list(self, tokens): in file ('django/templatetags', 'i18n.py') is modified
Function  def do_translate(parser, token): in file ('django/templatetags', 'i18n.py') is modified
Function  def do_block_translate(parser, token): in file ('django/templatetags', 'i18n.py') is modified
Function  def get_xframe_options_value(self, request, response): in file ('django/middleware', 'clickjacking.py') is modified
Function -def _salt_cipher_secret(secret): in file ('django/middleware', 'csrf.py') is modified
Function +def _mask_cipher_secret(secret): in file ('django/middleware', 'csrf.py') is modified
Function -def _unsalt_cipher_token(token): in file ('django/middleware', 'csrf.py') is deleted
Function +def _unmask_cipher_token(token): in file ('django/middleware', 'csrf.py') is modified
Function  def get_token(request): in file ('django/middleware', 'csrf.py') is modified
Function  def rotate_token(request): in file ('django/middleware', 'csrf.py') is modified
Function -def _compare_salted_tokens(request_csrf_token, csrf_token): in file ('django/middleware', 'csrf.py') is modified
Function +def _compare_masked_tokens(request_csrf_token, csrf_token): in file ('django/middleware', 'csrf.py') is modified
Function +def __init__(self, get_response): in file ('django/middleware', 'security.py') is modified
Function  def __init__(self, get_response=None): in file ('django/middleware', 'security.py') is modified
Function  def process_request(self, request): in file ('django/middleware', 'security.py') is modified
Function +def __init__(self, get_response): in file ('django/middleware', 'cache.py') is modified
Function  def __init__(self, get_response=None): in file ('django/middleware', 'cache.py') is modified
Function +def __init__(self, get_response): in file ('django/middleware', 'cache.py') is modified
Function  def __init__(self, get_response=None): in file ('django/middleware', 'cache.py') is modified
Function  def process_request(self, request): in file ('django/middleware', 'cache.py') is modified
Function -def __init__(self, get_response=None, cache_timeout=None, **kwargs): in file ('django/middleware', 'cache.py') is modified
Function +def __init__(self, get_response, cache_timeout=None, page_timeout=None, **kwargs): in file ('django/middleware', 'cache.py') is modified
Function +def __init__(self, get_response=None, cache_timeout=None, page_timeout=None, **kwargs): in file ('django/middleware', 'cache.py') is modified
Function  def get_full_path_with_slash(self, request): in file ('django/middleware', 'common.py') is modified
Function  def apply_limit_choices_to_to_formfield(formfield): in file ('django/forms', 'models.py') is modified
Function  def add_fields(self, form, index): in file ('django/forms', 'models.py') is modified
Function +def __init__(self, value, instance): in file ('django/forms', 'models.py') is added
Function +def __str__(self): in file ('django/forms', 'models.py') is added
Function +def __eq__(self, other): in file ('django/forms', 'models.py') is added
Function  def __init__(self, field): in file ('django/forms', 'models.py') is modified
Function  def __init__(self, queryset, **kwargs): in file ('django/forms', 'models.py') is modified
Function  def to_python(self, value): in file ('django/forms', 'models.py') is modified
Function  def __init__(self, *, max_value=None, min_value=None, **kwargs): in file ('django/forms', 'fields.py') is modified
Function  def widget_attrs(self, widget): in file ('django/forms', 'fields.py') is modified
Function +def __iter__(self): in file ('django/forms', 'fields.py') is modified
Function  def strptime(self, value, format): in file ('django/forms', 'fields.py') is modified
Function +def __init__(self, encoder=None, decoder=None, **kwargs): in file ('django/forms', 'fields.py') is added
Function +def to_python(self, value): in file ('django/forms', 'fields.py') is added
Function +def bound_data(self, data, initial): in file ('django/forms', 'fields.py') is added
Function +def prepare_value(self, value): in file ('django/forms', 'fields.py') is added
Function +def has_changed(self, initial, data): in file ('django/forms', 'fields.py') is added
Function +def widget_type(self): in file ('django/forms', 'boundfield.py') is added
Function -def Jinja2(params): in file ('django/forms', 'renderers.py') is modified
Function +def backend(self): in file ('django/forms', 'renderers.py') is added
Function  def __add__(self, other): in file ('django/forms', 'widgets.py') is modified
Function  def __new__(mcs, name, bases, attrs): in file ('django/forms', 'widgets.py') is modified
Function  def get_context(self, name, value, attrs): in file ('django/forms', 'widgets.py') is deleted
Function  def render(self, name, value, attrs=None, renderer=None): in file ('django/forms', 'widgets.py') is modified
Function +def use_required_attribute(self, initial): in file ('django/forms', 'widgets.py') is added
Function -def use_required_attribute(self, initial): in file ('django/forms', 'widgets.py') is deleted
Function  def get_context(self, name, value, attrs): in file ('django/forms', 'widgets.py') is deleted
Function  def value_from_datadict(self, data, files, name): in file ('django/forms', 'widgets.py') is modified
Function  def id_for_label(self, id_, index=None): in file ('django/forms', 'widgets.py') is modified
Function  def __init__(self, widgets, attrs=None): in file ('django/forms', 'widgets.py') is modified
Function  def value_from_datadict(self, data, files, name): in file ('django/forms', 'widgets.py') is modified
Function  def decompress(self, value): in file ('django/forms', 'widgets.py') is modified
Function  def __init__(self, attrs=None, years=None, months=None, empty_label=None): in file ('django/forms', 'widgets.py') is modified
Function +def clean(self): in file ('django/forms', 'formsets.py') is added
Function  def forms(self): in file ('django/forms', 'formsets.py') is deleted
Function  def get_form_kwargs(self, index): in file ('django/forms', 'formsets.py') is modified
Function +def get_ordering_widget(cls): in file ('django/forms', 'formsets.py') is added
Function  def non_form_errors(self): in file ('django/forms', 'formsets.py') is modified
Function  def full_clean(self): in file ('django/forms', 'formsets.py') is modified
Function  def add_fields(self, form, index): in file ('django/forms', 'formsets.py') is modified
Function  def add_prefix(self, index): in file ('django/forms', 'formsets.py') is modified
Function  def __new__(mcs, name, bases, attrs): in file ('django/forms', 'forms.py') is modified
Function -def __prepare__(metacls, name, bases, **kwds): in file ('django/forms', 'forms.py') is deleted
Function  def add_initial_prefix(self, field_name): in file ('django/forms', 'forms.py') is modified
Function  def _html_output(self, normal_row, error_row, row_ender, help_text_html, errors_on_separate_row): in file ('django/forms', 'forms.py') is modified
Function +def copy(self): in file ('django/forms', 'utils.py') is added
Function  def get_json_data(self, escape_html=False): in file ('django/forms', 'utils.py') is modified
Function -def base64_hmac(salt, value, key): in file ('django/core', 'signing.py') is deleted
Function +def base64_hmac(salt, value, key, algorithm='sha1'): in file ('django/core', 'signing.py') is added
Function  def get_cookie_signer(salt='django.core.signing.get_cookie_signer'): in file ('django/core', 'signing.py') is modified
Function  def dumps(obj, key=None, salt='django.core.signing', serializer=JSONSerializer, compress=False): in file ('django/core', 'signing.py') is modified
Function  def loads(s, key=None, salt='django.core.signing', serializer=JSONSerializer, max_age=None): in file ('django/core', 'signing.py') is modified
Function -def __init__(self, key=None, sep=':', salt=None): in file ('django/core', 'signing.py') is modified
Function +def __init__(self, key=None, sep=':', salt=None, algorithm=None): in file ('django/core', 'signing.py') is modified
Function +def _legacy_signature(self, value): in file ('django/core', 'signing.py') is added
Function +def sign_object(self, obj, serializer=JSONSerializer, compress=False): in file ('django/core', 'signing.py') is modified
Function +def unsign_object(self, signed_obj, serializer=JSONSerializer, **kwargs): in file ('django/core', 'signing.py') is added
Function -def _lazy_re_compile(regex, flags=0): in file ('django/core', 'validators.py') is deleted
Function -def _compile(): in file ('django/core', 'validators.py') is deleted
Function  def __init__(self, schemes=None, **kwargs): in file ('django/core', 'validators.py') is modified
Function  def __call__(self, value): in file ('django/core', 'validators.py') is modified
Function -def __init__(self, message=None, code=None, whitelist=None): in file ('django/core', 'validators.py') is modified
Function +def domain_whitelist(self): in file ('django/core', 'validators.py') is added
Function +def domain_whitelist(self, allowlist): in file ('django/core', 'validators.py') is modified
Function +def __init__(self, message=None, code=None, allowlist=None, *, whitelist=None): in file ('django/core', 'validators.py') is modified
Function  def __call__(self, value): in file ('django/core', 'validators.py') is modified
Function  def validate_domain_part(self, domain_part): in file ('django/core', 'validators.py') is modified
Function  def validate_ipv6_address(value): in file ('django/core', 'validators.py') is modified
Function  def validate_ipv46_address(value): in file ('django/core', 'validators.py') is modified
Function  def __call__(self, value): in file ('django/core', 'validators.py') is modified
Function  def __call__(self, value): in file ('django/core', 'validators.py') is modified
Function +def __iter__(self): in file ('django/core', 'paginator.py') is modified
Function  def validate_number(self, number): in file ('django/core', 'paginator.py') is modified
Function -def __init__(self, *args, **kwargs): in file ('django/core', 'paginator.py') is modified
Function +def get_elided_page_range(self, number=1, *, on_each_side=3, on_ends=2): in file ('django/core', 'paginator.py') is modified
Function  def __getitem__(self, index): in file ('django/core', 'paginator.py') is modified
Function +def __eq__(self, other): in file ('django/core', 'exceptions.py') is added
Function +def __hash__(self): in file ('django/core', 'exceptions.py') is added
Function -def _create_cache(backend, **kwargs): in file ('django/core/cache', '__init__.py') is modified
Function +def create_connection(self, alias): in file ('django/core/cache', '__init__.py') is modified
Function -def __init__(self): in file ('django/core/cache', '__init__.py') is deleted
Function -def __getitem__(self, alias): in file ('django/core/cache', '__init__.py') is deleted
Function -def all(self): in file ('django/core/cache', '__init__.py') is deleted
Function +def all(self, initialized_only=False): in file ('django/core/cache', '__init__.py') is added
Function -def __getattr__(self, name): in file ('django/core/cache', '__init__.py') is deleted
Function -def __setattr__(self, name, value): in file ('django/core/cache', '__init__.py') is deleted
Function -def __delattr__(self, name): in file ('django/core/cache', '__init__.py') is deleted
Function -def __contains__(self, key): in file ('django/core/cache', '__init__.py') is deleted
Function -def __eq__(self, other): in file ('django/core/cache', '__init__.py') is deleted
Function  def close_caches(**kwargs): in file ('django/core/cache', '__init__.py') is modified
Function  def make_template_fragment_key(fragment_name, vary_on=None): in file ('django/core/cache', 'utils.py') is deleted
Function +def client_servers(self): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def _cache(self): in file ('django/core/cache/backends', 'memcached.py') is deleted
Function  def get_backend_timeout(self, timeout=DEFAULT_TIMEOUT): in file ('django/core/cache/backends', 'memcached.py') is modified
Function  def add(self, key, value, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def get(self, key, default=None, version=None): in file ('django/core/cache/backends', 'memcached.py') is deleted
Function  def set(self, key, value, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function +def touch(self, key, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def delete(self, key, version=None): in file ('django/core/cache/backends', 'memcached.py') is modified
Function  def get_many(self, keys, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def incr(self, key, delta=1, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def decr(self, key, delta=1, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def delete_many(self, keys, version=None): in file ('django/core/cache/backends', 'memcached.py') is modified
Function  def clear(self): in file ('django/core/cache/backends', 'memcached.py') is modified
Function +def validate_key(self, key): in file ('django/core/cache/backends', 'memcached.py') is modified
Function  def __init__(self, server, params): in file ('django/core/cache/backends', 'memcached.py') is added
Function -def _cache(self): in file ('django/core/cache/backends', 'memcached.py') is deleted
Function -def touch(self, key, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'memcached.py') is deleted
Function +def get(self, key, default=None, version=None): in file ('django/core/cache/backends', 'memcached.py') is modified
Function +def delete(self, key, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function -def _cache(self): in file ('django/core/cache/backends', 'memcached.py') is deleted
Function +def client_servers(self): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def touch(self, key, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'memcached.py') is added
Function +def __init__(self, server, params): in file ('django/core/cache/backends', 'memcached.py') is added
Function  def delete(self, key, version=None): in file ('django/core/cache/backends', 'db.py') is modified
Function  def delete_many(self, keys, version=None): in file ('django/core/cache/backends', 'db.py') is modified
Function  def has_key(self, key, version=None): in file ('django/core/cache/backends', 'db.py') is modified
Function  def delete(self, key, version=None): in file ('django/core/cache/backends', 'filebased.py') is deleted
Function  def has_key(self, key, version=None): in file ('django/core/cache/backends', 'filebased.py') is modified
Function  def _createdir(self): in file ('django/core/cache/backends', 'filebased.py') is modified
Function  def _key_to_file(self, key, version=None): in file ('django/core/cache/backends', 'filebased.py') is modified
Function  def __init__(self, params): in file ('django/core/cache/backends', 'base.py') is modified
Function  def add(self, key, value, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'base.py') is modified
Function  def delete(self, key, version=None): in file ('django/core/cache/backends', 'base.py') is deleted
Function  def incr(self, key, delta=1, version=None): in file ('django/core/cache/backends', 'base.py') is modified
Function  def incr_version(self, key, delta=1, version=None): in file ('django/core/cache/backends', 'base.py') is modified
Function  def close(self, **kwargs): in file ('django/core/cache/backends', 'base.py') is added
Function +def memcache_key_warnings(key): in file ('django/core/cache/backends', 'base.py') is added
Function  def touch(self, key, timeout=DEFAULT_TIMEOUT, version=None): in file ('django/core/cache/backends', 'locmem.py') is added
Function  def delete(self, key, version=None): in file ('django/core/cache/backends', 'locmem.py') is deleted
Function -def split_addr(addr, encoding): in file ('django/core/mail', 'message.py') is deleted
Function  def sanitize_address(addr, encoding): in file ('django/core/mail', 'message.py') is modified
Function  def set_payload(self, payload, charset=None): in file ('django/core/mail', 'message.py') is modified
Function  def get_fqdn(self): in file ('django/core/mail', 'utils.py') is modified
Function +def check_cache_location_not_exposed(app_configs, **kwargs): in file ('django/core/checks', 'caches.py') is added
Function +def check_file_based_cache_is_absolute(app_configs, **kwargs): in file ('django/core/checks', 'caches.py') is added
Function -def my_check(apps, **kwargs): in file ('django/core/checks', 'registry.py') is modified
Function +def my_check(app_configs, **kwargs): in file ('django/core/checks', 'registry.py') is added
Function  def inner(check): in file ('django/core/checks', 'registry.py') is modified
Function -def run_checks(self, app_configs=None, tags=None, include_deployment_checks=False): in file ('django/core/checks', 'registry.py') is modified
Function +def run_checks(self, app_configs=None, tags=None, include_deployment_checks=False, databases=None): in file ('django/core/checks', 'registry.py') is added
Function  def check_all_models(app_configs=None, **kwargs): in file ('django/core/checks', 'model_checks.py') is modified
Function -def check_database_backends(*args, **kwargs): in file ('django/core/checks', 'database.py') is modified
Function +def check_database_backends(databases=None, **kwargs): in file ('django/core/checks', 'database.py') is added
Function  def check_setting_language_code(app_configs, **kwargs): in file ('django/core/checks', 'translation.py') is deleted
Function +def check_setting_languages(app_configs, **kwargs): in file ('django/core/checks', 'translation.py') is added
Function +def check_setting_languages_bidi(app_configs, **kwargs): in file ('django/core/checks', 'translation.py') is added
Function +def check_language_settings_consistent(app_configs, **kwargs): in file ('django/core/checks', 'translation.py') is added
Function +def check_csrf_failure_view(app_configs, **kwargs): in file ('django/core/checks/security', 'csrf.py') is added
Function -def check_xss_filter(app_configs, **kwargs): in file ('django/core/checks/security', 'base.py') is deleted
Function  def check_ssl_redirect(app_configs, **kwargs): in file ('django/core/checks/security', 'base.py') is modified
Function  def check_secret_key(app_configs, **kwargs): in file ('django/core/checks/security', 'base.py') is modified
Function +def check_referrer_policy(app_configs, **kwargs): in file ('django/core/checks/security', 'base.py') is added
Function +def check_default_hashing_algorithm(app_configs, **kwargs): in file ('django/core/checks/security', 'base.py') is added
Function  def supports_color(): in file ('django/core/management', 'color.py') is modified
Function +def vt_codes_enabled_in_windows_registry(): in file ('django/core/management', 'color.py') is added
Function +def get_actions(parser): in file ('django/core/management', '__init__.py') is modified
Function  def handle(self, app_or_project, name, target=None, **options): in file ('django/core/management', 'templates.py') is modified
Function -def validate_name(self, name, app_or_project): in file ('django/core/management', 'templates.py') is modified
Function +def validate_name(self, name, name_or_dir='name'): in file ('django/core/management', 'templates.py') is modified
Function  def get_command_line_option(argv, option): in file ('django/core/management', 'utils.py') is modified
Function +def normalize_path_patterns(patterns): in file ('django/core/management', 'utils.py') is modified
Function +def is_ignored_path(path, ignore_patterns): in file ('django/core/management', 'utils.py') is added
Function +def ignore(pattern): in file ('django/core/management', 'utils.py') is added
Function -def sql_flush(style, connection, only_django=False, reset_sequences=True, allow_cascade=False): in file ('django/core/management', 'sql.py') is modified
Function +def sql_flush(style, connection, reset_sequences=True, allow_cascade=False): in file ('django/core/management', 'sql.py') is modified
Function +def __init__(self, *args, returncode=1, **kwargs): in file ('django/core/management', 'base.py') is added
Function  def _reordered_actions(self, actions): in file ('django/core/management', 'base.py') is modified
Function -def __init__(self, out, style_func=None, ending='\n'): in file ('django/core/management', 'base.py') is modified
Function +def __init__(self, out, ending='\n'): in file ('django/core/management', 'base.py') is modified
Function +def flush(self): in file ('django/core/management', 'base.py') is added
Function -def write(self, msg, style_func=None, ending=None): in file ('django/core/management', 'base.py') is modified
Function +def write(self, msg='', style_func=None, ending=None): in file ('django/core/management', 'base.py') is modified
Function  def get_version(self): in file ('django/core/management', 'base.py') is modified
Function -def _run_checks(self, **kwargs): in file ('django/core/management', 'base.py') is deleted
Function  def handle(self, **options): in file ('django/core/management/commands', 'inspectdb.py') is modified
Function  def normalize_col_name(self, col_name, used_column_names, is_relation): in file ('django/core/management/commands', 'inspectdb.py') is modified
Function  def add_arguments(self, parser): in file ('django/core/management/commands', 'check.py') is modified
Function  def handle(self, *app_labels, **options): in file ('django/core/management/commands', 'check.py') is modified
Function  def handle_merge(self, loader, conflicts): in file ('django/core/management/commands', 'makemigrations.py') is modified
Function -def is_ignored(path, ignore_patterns): in file ('django/core/management/commands', 'makemessages.py') is deleted
Function -def ignore(pattern): in file ('django/core/management/commands', 'makemessages.py') is deleted
Function  def add_arguments(self, parser): in file ('django/core/management/commands', 'shell.py') is modified
Function  def python(self, options): in file ('django/core/management/commands', 'shell.py') is modified
Function  def handle(self, **options): in file ('django/core/management/commands', 'shell.py') is modified
Function  def run_from_argv(self, argv): in file ('django/core/management/commands', 'test.py') is modified
Function  def handle(self, *test_labels, **options): in file ('django/core/management/commands', 'test.py') is modified
Function  def add_arguments(self, parser): in file ('django/core/management/commands', 'dbshell.py') is modified
Function  def handle(self, **options): in file ('django/core/management/commands', 'dbshell.py') is modified
Function  def add_arguments(self, parser): in file ('django/core/management/commands', 'migrate.py') is modified
Function -def _run_checks(self, **kwargs): in file ('django/core/management/commands', 'migrate.py') is deleted
Function  def handle(self, *args, **options): in file ('django/core/management/commands', 'migrate.py') is modified
Function  def sync_apps(self, connection, app_labels): in file ('django/core/management/commands', 'migrate.py') is modified
Function  def describe_operation(operation, backwards): in file ('django/core/management/commands', 'migrate.py') is modified
Function  def has_bom(fn): in file ('django/core/management/commands', 'compilemessages.py') is modified
Function  def handle(self, **options): in file ('django/core/management/commands', 'compilemessages.py') is modified
Function  def add_arguments(self, parser): in file ('django/core/management/commands', 'diffsettings.py') is modified
Function  def handle(self, **options): in file ('django/core/management/commands', 'diffsettings.py') is modified
Function  def end_serialization(self): in file ('django/core/serializers', 'pyyaml.py') is added
Function -def sort_dependencies(app_list): in file ('django/core/serializers', '__init__.py') is modified
Function +def sort_dependencies(app_list, allow_cycles=False): in file ('django/core/serializers', '__init__.py') is added
Function  def start_object(self, obj): in file ('django/core/serializers', 'python.py') is modified
Function  def end_object(self, obj): in file ('django/core/serializers', 'python.py') is modified
Function  def get_dump_object(self, obj): in file ('django/core/serializers', 'python.py') is modified
Function  def handle_fk_field(self, obj, field): in file ('django/core/serializers', 'base.py') is modified
Function  def handle_m2m_field(self, obj, field): in file ('django/core/serializers', 'base.py') is modified
Function  def getvalue(self): in file ('django/core/serializers', 'base.py') is modified
Function  def lock(f, flags): in file ('django/core/files', 'locks.py') is deleted
Function  def unlock(f): in file ('django/core/files', 'locks.py') is deleted
Function +def upload_interrupted(self): in file ('django/core/files', 'uploadhandler.py') is modified
Function +def upload_interrupted(self): in file ('django/core/files', 'uploadhandler.py') is modified
Function +def validate_file_name(name, allow_relative_path=False): in file ('django/core/files', 'utils.py') is added
Function +def get_alternative_name(self, file_root, file_ext): in file ('django/core/files', 'storage.py') is added
Function  def get_available_name(self, name, max_length=None): in file ('django/core/files', 'storage.py') is modified
Function  def generate_filename(self, filename): in file ('django/core/files', 'storage.py') is modified
Function  def path(self, name): in file ('django/core/files', 'storage.py') is modified
Function -def inner(request): in file ('django/core/handlers', 'exception.py') is deleted
Function +def inner(request): in file ('django/core/handlers', 'exception.py') is added
Function +def inner(request): in file ('django/core/handlers', 'exception.py') is added
Function  def response_for_exception(request, exc): in file ('django/core/handlers', 'exception.py') is modified
Function  def get_exception_response(request, resolver, status_code, exception): in file ('django/core/handlers', 'exception.py') is modified
Function -def load_middleware(self): in file ('django/core/handlers', 'base.py') is modified
Function +def load_middleware(self, is_async=False): in file ('django/core/handlers', 'base.py') is modified
Function -def make_view_atomic(self, view): in file ('django/core/handlers', 'base.py') is deleted
Function  def get_response(self, request): in file ('django/core/handlers', 'base.py') is modified
Function +def get_response_async(self, request): in file ('django/core/handlers', 'base.py') is added
Function  def _get_response(self, request): in file ('django/core/handlers', 'base.py') is modified
Function +def _get_response_async(self, request): in file ('django/core/handlers', 'base.py') is added
Function +def resolve_request(self, request): in file ('django/core/handlers', 'base.py') is modified
Function +def check_response(self, response, callback, name=None): in file ('django/core/handlers', 'base.py') is added
Function +def make_view_atomic(self, view): in file ('django/core/handlers', 'base.py') is modified
Function  def is_broken_pipe_error(): in file ('django/core/servers', 'basehttp.py') is deleted
Function  def _make_id(target): in file ('django/dispatch', 'dispatcher.py') is modified
Function  def __init__(self, providing_args=None, use_caching=False): in file ('django/dispatch', 'dispatcher.py') is modified
Function  def dec(func): in file ('django/template', 'library.py') is modified
Function  def dec(func): in file ('django/template', 'library.py') is modified
Function  def add_post_render_callback(self, callback): in file ('django/template', 'response.py') is modified
Function  def title(value): in file ('django/template', 'defaultfilters.py') is deleted
Function  def _property_resolver(arg): in file ('django/template', 'defaultfilters.py') is modified
Function +def resolve(value): in file ('django/template', 'defaultfilters.py') is added
Function  def pluralize(value, arg='s'): in file ('django/template', 'defaultfilters.py') is modified
Function  def __init__(self, tokens, libraries=None, builtins=None, origin=None): in file ('django/template', 'base.py') is modified
Function  def prepend_token(self, token): in file ('django/template', 'base.py') is modified
Function  def delete_first_token(self): in file ('django/template', 'base.py') is modified
Function  def add_library(self, lib): in file ('django/template', 'base.py') is modified
Function  def token_kwargs(bits, parser, support_legacy=False): in file ('django/template', 'base.py') is modified
Function  def render(self, context): in file ('django/template', 'defaulttags.py') is added
Function  def __init__(self, var1, var2, nodelist_true, nodelist_false, negate): in file ('django/template', 'defaulttags.py') is modified
Function  def render(self, context): in file ('django/template', 'defaulttags.py') is added
Function  def do_ifequal(parser, token, negate): in file ('django/template', 'defaulttags.py') is modified
Function  def csrf_input(request): in file ('django/template/backends', 'utils.py') is modified
Function  def __init__(self, engine, loaders): in file ('django/template/loaders', 'cached.py') is modified
Function +def get_dirs(self): in file ('django/template/loaders', 'cached.py') is added
Function  def cache_key(self, template_name, skip=None): in file ('django/template/loaders', 'cached.py') is modified
Function  def reset(self): in file ('django/template/loaders', 'cached.py') is deleted
Function -def upath(path): in file ('django/utils', '_os.py') is deleted
Function -def npath(path): in file ('django/utils', '_os.py') is deleted
Function  def safe_join(base, *paths): in file ('django/utils', '_os.py') is modified
Function +def to_path(value): in file ('django/utils', '_os.py') is added
Function -def stable_topological_sort(l, dependency_graph): in file ('django/utils', 'topological_sort.py') is modified
Function +def stable_topological_sort(nodes, dependency_graph): in file ('django/utils', 'topological_sort.py') is modified
Function  def make_hashable(value): in file ('django/utils', 'hashable.py') is added
Function  def get_version(version=None): in file ('django/utils', 'version.py') is modified
Function  def get_version_tuple(version): in file ('django/utils', 'version.py') is modified
Function -def smart_text(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function +def smart_str(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function -def force_text(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function +def force_str(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function +def smart_text(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function +def force_text(s, encoding='utf-8', strings_only=False, errors='strict'): in file ('django/utils', 'encoding.py') is modified
Function  def iri_to_uri(iri): in file ('django/utils', 'encoding.py') is modified
Function +def punycode(domain): in file ('django/utils', 'encoding.py') is modified
Function  def repercent_broken_unicode(path): in file ('django/utils', 'encoding.py') is modified
Function  def filepath_to_uri(path): in file ('django/utils', 'encoding.py') is modified
Function  def escape_quotes(m): in file ('django/utils', 'jslex.py') is modified
Function -def __init__(self, include_html=False, email_backend=None): in file ('django/utils', 'log.py') is modified
Function +def __init__(self, include_html=False, email_backend=None, reporter_class=None): in file ('django/utils', 'log.py') is modified
Function  def emit(self, record): in file ('django/utils', 'log.py') is modified
Function +def __init__(self, get_response): in file ('django/utils', 'deprecation.py') is modified
Function  def __init__(self, get_response=None): in file ('django/utils', 'deprecation.py') is modified
Function +def _async_check(self): in file ('django/utils', 'deprecation.py') is modified
Function  def __call__(self, request): in file ('django/utils', 'deprecation.py') is added
Function +def __acall__(self, request): in file ('django/utils', 'deprecation.py') is added
Function +def _get_response_none_deprecation(self, get_response): in file ('django/utils', 'deprecation.py') is added
Function -def timesince(d, now=None, reversed=False, time_strings=None): in file ('django/utils', 'timesince.py') is modified
Function +def timesince(d, now=None, reversed=False, time_strings=None, depth=2): in file ('django/utils', 'timesince.py') is added
Function -def timeuntil(d, now=None, time_strings=None): in file ('django/utils', 'timesince.py') is modified
Function +def timeuntil(d, now=None, time_strings=None, depth=2): in file ('django/utils', 'timesince.py') is added
Function  def escape(text): in file ('django/utils', 'html.py') is modified
Function -def unescape(text): in file ('django/utils', 'html.py') is deleted
Function  def trim_punctuation(lead, middle, trail): in file ('django/utils', 'html.py') is modified
Function  def html_safe(klass): in file ('django/utils', 'html.py') is deleted
Function  def patch_cache_control(response, **kwargs): in file ('django/utils', 'cache.py') is modified
Function -def dictvalue(t): in file ('django/utils', 'cache.py') is modified
Function +def dictvalue(*t): in file ('django/utils', 'cache.py') is added
Function  def get_max_age(response): in file ('django/utils', 'cache.py') is modified
Function  def set_response_etag(response): in file ('django/utils', 'cache.py') is modified
Function  def patch_vary_headers(response, newheaders): in file ('django/utils', 'cache.py') is modified
Function  def has_vary_header(response, header_query): in file ('django/utils', 'cache.py') is modified
Function  def _i18n_cache_key_suffix(request, cache_key): in file ('django/utils', 'cache.py') is modified
Function  def _generate_cache_header_key(key_prefix, request): in file ('django/utils', 'cache.py') is modified
Function  def _findall(text, substr): in file ('django/utils', 'datetime_safe.py') is modified
Function +def _get_func_parameters(func, remove_first): in file ('django/utils', 'inspect.py') is added
Function +def _get_callable_parameters(meth_or_func): in file ('django/utils', 'inspect.py') is added
Function  def get_func_args(func): in file ('django/utils', 'inspect.py') is modified
Function  def func_accepts_kwargs(func): in file ('django/utils', 'inspect.py') is added
Function  def method_has_no_args(meth): in file ('django/utils', 'inspect.py') is modified
Function -def func_supports_parameter(func, parameter): in file ('django/utils', 'inspect.py') is deleted
Function +def func_supports_parameter(func, name): in file ('django/utils', 'inspect.py') is added
Function -def curry(_curried_func, *args, **kwargs): in file ('django/utils', 'functional.py') is deleted
Function -def _curried(*moreargs, **morekwargs): in file ('django/utils', 'functional.py') is deleted
Function -def _is_mangled(name): in file ('django/utils', 'functional.py') is deleted
Function  def __init__(self, func, name=None): in file ('django/utils', 'functional.py') is modified
Function  def __set_name__(self, owner, name): in file ('django/utils', 'functional.py') is modified
Function +def __init__(self, method=None): in file ('django/utils', 'functional.py') is added
Function +def __get__(self, instance, cls=None): in file ('django/utils', 'functional.py') is added
Function +def getter(self, method): in file ('django/utils', 'functional.py') is added
Function +def __add__(self, other): in file ('django/utils', 'functional.py') is added
Function +def __radd__(self, other): in file ('django/utils', 'functional.py') is added
Function -def salted_hmac(key_salt, value, secret=None): in file ('django/utils', 'crypto.py') is modified
Function +def salted_hmac(key_salt, value, secret=None, *, algorithm='sha1'): in file ('django/utils', 'crypto.py') is modified
Function +def get_random_string(length, allowed_chars=RANDOM_STRING_CHARS): in file ('django/utils', 'crypto.py') is added
Function +def get_random_string(length=NOT_PROVIDED, allowed_chars=RANDOM_STRING_CHARS): in file ('django/utils', 'crypto.py') is added
Function +def _lazy_re_compile(regex, flags=0): in file ('django/utils', 'regex_helper.py') is modified
Function +def _compile(): in file ('django/utils', 'regex_helper.py') is modified
Function  def urlquote(url, safe='/'): in file ('django/utils', 'http.py') is modified
Function -def cookie_date(epoch_seconds=None): in file ('django/utils', 'http.py') is deleted
Function  def http_date(epoch_seconds=None): in file ('django/utils', 'http.py') is modified
Function  def quote_etag(etag_str): in file ('django/utils', 'http.py') is modified
Function -def is_safe_url(url, allowed_hosts, require_https=False): in file ('django/utils', 'http.py') is modified
Function +def url_has_allowed_host_and_scheme(url, allowed_hosts, require_https=False): in file ('django/utils', 'http.py') is added
Function +def is_safe_url(url, allowed_hosts, require_https=False): in file ('django/utils', 'http.py') is added
Function -def _is_safe_url(url, allowed_hosts, require_https=False): in file ('django/utils', 'http.py') is modified
Function +def _url_has_allowed_host_and_scheme(url, allowed_hosts, require_https=False): in file ('django/utils', 'http.py') is modified
Function -def get_valid_filename(s): in file ('django/utils', 'text.py') is modified
Function +def get_valid_filename(name): in file ('django/utils', 'text.py') is modified
Function  def _replace_entity(match): in file ('django/utils', 'text.py') is modified
Function  def unescape_entities(text): in file ('django/utils', 'text.py') is added
Function  def slugify(value, allow_unicode=False): in file ('django/utils', 'text.py') is modified
Function -def extract(path, to_path=''): in file ('django/utils', 'archive.py') is modified
Function +def extract(path, to_path): in file ('django/utils', 'archive.py') is modified
Function  def __exit__(self, exc_type, exc_value, traceback): in file ('django/utils', 'archive.py') is modified
Function -def extract(self, to_path=''): in file ('django/utils', 'archive.py') is modified
Function +def extract(self, to_path): in file ('django/utils', 'archive.py') is modified
Function  def list(self): in file ('django/utils', 'archive.py') is modified
Function +def target_filename(self, to_path, name): in file ('django/utils', 'archive.py') is added
Function  def extract(self): in file ('django/utils', 'archive.py') is modified
Function -def __add__(self, rhs): in file ('django/utils', 'safestring.py') is deleted
Function  def _safety_decorator(safety_marker, func): in file ('django/utils', 'safestring.py') is modified
Function +def is_django_module(module): in file ('django/utils', 'autoreload.py') is added
Function +def is_django_path(path): in file ('django/utils', 'autoreload.py') is added
Function  def check_errors(fn): in file ('django/utils', 'autoreload.py') is modified
Function  def wrapper(*args, **kwargs): in file ('django/utils', 'autoreload.py') is modified
Function  def raise_last_exception(): in file ('django/utils', 'autoreload.py') is modified
Function  def ensure_echo_on(): in file ('django/utils', 'autoreload.py') is modified
Function  def iter_all_python_module_files(): in file ('django/utils', 'autoreload.py') is modified
Function  def get_child_arguments(): in file ('django/utils', 'autoreload.py') is modified
Function  def watch_dir(self, path, glob): in file ('django/utils', 'autoreload.py') is modified
Function -def watch_file(self, path): in file ('django/utils', 'autoreload.py') is modified
Function  def watched_files(self, include_globs=True): in file ('django/utils', 'autoreload.py') is modified
Function  def tick(self): in file ('django/utils', 'autoreload.py') is modified
Function -def loop_files(self, previous_times, previous_timestamp): in file ('django/utils', 'autoreload.py') is modified
Function +def snapshot_files(self): in file ('django/utils', 'autoreload.py') is modified
Function -def snapshot_files(self): in file ('django/utils', 'autoreload.py') is modified
Function  def __init__(self): in file ('django/utils', 'autoreload.py') is added
Function  def _watch_root(self, root): in file ('django/utils', 'autoreload.py') is modified
Function  def _subscribe(self, directory, name, expression): in file ('django/utils', 'autoreload.py') is modified
Function  def stop(self): in file ('django/utils', 'autoreload.py') is modified
Function  def check_availability(cls): in file ('django/utils', 'autoreload.py') is modified
Function  def __init__(self, iterable=None): in file ('django/utils', 'datastructures.py') is modified
Function  def add(self, item): in file ('django/utils', 'datastructures.py') is modified
Function -def complain(self, *wargs, **kwargs): in file ('django/utils', 'datastructures.py') is modified
Function +def complain(self, *args, **kwargs): in file ('django/utils', 'datastructures.py') is added
Function -def B(self): in file ('django/utils', 'dateformat.py') is modified
Function  def e(self): in file ('django/utils', 'dateformat.py') is modified
Function  def g(self): in file ('django/utils', 'dateformat.py') is deleted
Function  def G(self): in file ('django/utils', 'dateformat.py') is modified
Function -def O(self): in file ('django/utils', 'dateformat.py') is modified
Function +def O(self): in file ('django/utils', 'dateformat.py') is modified
Function -def I(self): in file ('django/utils', 'dateformat.py') is modified
Function +def I(self): in file ('django/utils', 'dateformat.py') is modified
Function -def l(self): in file ('django/utils', 'dateformat.py') is modified
Function +def l(self): in file ('django/utils', 'dateformat.py') is added
Function  def r(self): in file ('django/utils', 'dateformat.py') is added
Function  def S(self): in file ('django/utils', 'dateformat.py') is modified
Function  def W(self): in file ('django/utils', 'dateformat.py') is modified
Function  def y(self): in file ('django/utils', 'dateformat.py') is deleted
Function  def z(self): in file ('django/utils', 'dateformat.py') is modified
Function -def __init__(self, offset=None, name=None): in file ('django/utils', 'timezone.py') is deleted
Function -def utcoffset(self, dt): in file ('django/utils', 'timezone.py') is deleted
Function -def tzname(self, dt): in file ('django/utils', 'timezone.py') is deleted
Function -def dst(self, dt): in file ('django/utils', 'timezone.py') is deleted
Function  def get_fixed_timezone(offset): in file ('django/utils', 'timezone.py') is modified
Function  def get_current_timezone(): in file ('django/utils', 'timezone.py') is modified
Function  def _get_timezone_name(timezone): in file ('django/utils', 'timezone.py') is deleted
Function +def _is_pytz_zone(tz): in file ('django/utils', 'timezone.py') is added
Function +def _datetime_ambiguous_or_imaginary(dt, tz): in file ('django/utils', 'timezone.py') is added
Function  def startElement(self, name, attrs): in file ('django/utils', 'xmlutils.py') is modified
Function -def available_attrs(fn): in file ('django/utils', 'decorators.py') is deleted
Function  def make_middleware_decorator(middleware_class): in file ('django/utils', 'decorators.py') is modified
Function  def _make_decorator(*m_args, **m_kwargs): in file ('django/utils', 'decorators.py') is modified
Function +def _decorator(view_func): in file ('django/utils', 'decorators.py') is modified
Function -def _decorator(view_func): in file ('django/utils', 'decorators.py') is modified
Function  def _wrapped_view(request, *args, **kwargs): in file ('django/utils', 'decorators.py') is modified
Function -def __init__(self, method=None): in file ('django/utils', 'decorators.py') is modified
Function +def sync_and_async_middleware(func): in file ('django/utils', 'decorators.py') is added
Function -def __get__(self, instance, cls=None): in file ('django/utils', 'decorators.py') is deleted
Function -def getter(self, method): in file ('django/utils', 'decorators.py') is deleted
Function +def sync_only_middleware(func): in file ('django/utils', 'decorators.py') is added
Function +def async_only_middleware(func): in file ('django/utils', 'decorators.py') is added
Function +def __init__(self, trans=None): in file ('django/utils/translation', 'trans_real.py') is added
Function +def __getitem__(self, key): in file ('django/utils/translation', 'trans_real.py') is added
Function +def __setitem__(self, key, value): in file ('django/utils/translation', 'trans_real.py') is added
Function +def __contains__(self, key): in file ('django/utils/translation', 'trans_real.py') is added
Function +def items(self): in file ('django/utils/translation', 'trans_real.py') is added
Function +def keys(self): in file ('django/utils/translation', 'trans_real.py') is added
Function +def update(self, trans): in file ('django/utils/translation', 'trans_real.py') is added
Function +def get(self, key, default=None): in file ('django/utils/translation', 'trans_real.py') is added
Function +def plural(self, msgid, num): in file ('django/utils/translation', 'trans_real.py') is added
Function +def ngettext(self, msgid1, msgid2, n): in file ('django/utils/translation', 'trans_real.py') is added
Function  def translation(language): in file ('django/utils/translation', 'trans_real.py') is modified
Function  def get_languages(): in file ('django/utils/translation', 'trans_real.py') is deleted
Function  def watch_for_translation_changes(sender, **kwargs): in file ('django/utils/translation', 'reloader.py') is modified
Function  def translation_file_changed(sender, file_path, **kwargs): in file ('django/utils/translation', 'reloader.py') is modified
Function +def ugettext_noop(message): in file ('django/utils/translation', '__init__.py') is added
Function +def ugettext(message): in file ('django/utils/translation', '__init__.py') is added
Function +def ungettext(singular, plural, number): in file ('django/utils/translation', '__init__.py') is added
Function  def pgettext(context, message): in file ('django/utils/translation', '__init__.py') is modified
Function +def ugettext_lazy(message): in file ('django/utils/translation', '__init__.py') is added
Function  def lazy_number(func, resultclass, number=None, **kwargs): in file ('django/utils/translation', '__init__.py') is modified
Function +def ungettext_lazy(singular, plural, number=None): in file ('django/utils/translation', '__init__.py') is added
Function  def npgettext_lazy(context, singular, plural, number=None): in file ('django/utils/translation', '__init__.py') is modified
Function +def round_away_from_one(value): in file ('django/utils/translation', '__init__.py') is added
Function  def blankout(src, char): in file ('django/utils/translation', 'template.py') is modified
Function  def templatize(src, origin=None): in file ('django/utils/translation', 'template.py') is modified
Function  def add_domain(domain, url, secure=False): in file ('django/contrib/syndication', 'views.py') is modified
Function  def __call__(self, request, *args, **kwargs): in file ('django/contrib/syndication', 'views.py') is modified
Function  def _get(self, *args, **kwargs): in file ('django/contrib/messages/storage', 'session.py') is modified
Function  def serialize_messages(self, messages): in file ('django/contrib/messages/storage', 'session.py') is modified
Function  def process_messages(self, obj): in file ('django/contrib/messages/storage', 'cookie.py') is deleted
Function +def dumps(self, obj): in file ('django/contrib/messages/storage', 'cookie.py') is added
Function +def loads(self, data): in file ('django/contrib/messages/storage', 'cookie.py') is added
Function +def __init__(self, *args, **kwargs): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function  def _get(self, *args, **kwargs): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function  def _store(self, messages, response, remove_oldest=True, *args, **kwargs): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function -def _hash(self, value): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function +def _legacy_hash(self, value): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function  def _decode(self, data): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function +def _legacy_decode(self, data): in file ('django/contrib/messages/storage', 'cookie.py') is modified
Function  def test_func(self): in file ('django/contrib/auth', 'mixins.py') is modified
Function +def exceeds_maximum_length_ratio(password, max_similarity, value): in file ('django/contrib/auth', 'password_validation.py') is modified
Function  def __init__(self, user_attributes=DEFAULT_USER_ATTRIBUTES, max_similarity=0.7): in file ('django/contrib/auth', 'password_validation.py') is added
Function  def __init__(self, password_list_path=DEFAULT_PASSWORD_LIST_PATH): in file ('django/contrib/auth', 'password_validation.py') is modified
Function -def create_superuser(self, username, email, password, **extra_fields): in file ('django/contrib/auth', 'models.py') is modified
Function +def create_superuser(self, username, email=None, password=None, **extra_fields): in file ('django/contrib/auth', 'models.py') is modified
Function +def with_perm(self, perm, is_active=True, include_superusers=True, backend=None, obj=None): in file ('django/contrib/auth', 'models.py') is added
Function -def _user_get_all_permissions(user, obj): in file ('django/contrib/auth', 'models.py') is modified
Function +def _user_get_permissions(user, obj, from_name): in file ('django/contrib/auth', 'models.py') is modified
Function +def get_user_permissions(self, obj=None): in file ('django/contrib/auth', 'models.py') is added
Function  def has_perm(self, perm, obj=None): in file ('django/contrib/auth', 'models.py') is modified
Function +def get_user_permissions(self, obj=None): in file ('django/contrib/auth', 'models.py') is added
Function  def has_perm(self, perm, obj=None): in file ('django/contrib/auth', 'models.py') is modified
Function +def _legacy_get_session_auth_hash(self): in file ('django/contrib/auth', 'base_user.py') is modified
Function  def _clean_credentials(credentials): in file ('django/contrib/auth', '__init__.py') is modified
Function +def __init__(self): in file ('django/contrib/auth', 'tokens.py') is added
Function  def check_token(self, user, token): in file ('django/contrib/auth', 'tokens.py') is modified
Function -def _make_token_with_timestamp(self, user, timestamp): in file ('django/contrib/auth', 'tokens.py') is modified
Function +def _make_token_with_timestamp(self, user, timestamp, legacy=False): in file ('django/contrib/auth', 'tokens.py') is modified
Function  def _make_hash_value(self, user, timestamp): in file ('django/contrib/auth', 'tokens.py') is modified
Function -def _num_days(self, dt): in file ('django/contrib/auth', 'tokens.py') is deleted
Function +def _num_seconds(self, dt): in file ('django/contrib/auth', 'tokens.py') is added
Function -def _today(self): in file ('django/contrib/auth', 'tokens.py') is modified
Function +def _now(self): in file ('django/contrib/auth', 'tokens.py') is added
Function +def _unicode_ci_compare(s1, s2): in file ('django/contrib/auth', 'forms.py') is modified
Function  def __init__(self, *args, **kwargs): in file ('django/contrib/auth', 'forms.py') is deleted
Function -def bound_data(self, data, initial): in file ('django/contrib/auth', 'forms.py') is deleted
Function -def has_changed(self, initial, data): in file ('django/contrib/auth', 'forms.py') is deleted
Function +def widget_attrs(self, widget): in file ('django/contrib/auth', 'forms.py') is added
Function  def __init__(self, *args, **kwargs): in file ('django/contrib/auth', 'forms.py') is deleted
Function  def clean_password2(self): in file ('django/contrib/auth', 'forms.py') is modified
Function  def save(self, commit=True): in file ('django/contrib/auth', 'forms.py') is modified
Function -def clean_password(self): in file ('django/contrib/auth', 'forms.py') is deleted
Function  def __init__(self, user, *args, **kwargs): in file ('django/contrib/auth', 'forms.py') is modified
Function  def clean_password2(self): in file ('django/contrib/auth', 'forms.py') is modified
Function +def authenticate(self, request, **kwargs): in file ('django/contrib/auth', 'backends.py') is added
Function +def get_user(self, user_id): in file ('django/contrib/auth', 'backends.py') is added
Function +def get_user_permissions(self, user_obj, obj=None): in file ('django/contrib/auth', 'backends.py') is added
Function +def get_group_permissions(self, user_obj, obj=None): in file ('django/contrib/auth', 'backends.py') is added
Function +def get_all_permissions(self, user_obj, obj=None): in file ('django/contrib/auth', 'backends.py') is added
Function +def has_perm(self, user_obj, perm, obj=None): in file ('django/contrib/auth', 'backends.py') is added
Function  def authenticate(self, request, username=None, password=None, **kwargs): in file ('django/contrib/auth', 'backends.py') is added
Function  def has_module_perms(self, user_obj, app_label): in file ('django/contrib/auth', 'backends.py') is modified
Function +def with_perm(self, perm, is_active=True, include_superusers=True, obj=None): in file ('django/contrib/auth', 'backends.py') is added
Function  def get_user(self, user_id): in file ('django/contrib/auth', 'backends.py') is modified
Function +def must_update_salt(salt, expected_entropy): in file ('django/contrib/auth', 'hashers.py') is added
Function  def _load_library(self): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def salt(self): in file ('django/contrib/auth', 'hashers.py') is deleted
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def encode(self, password, salt, iterations=None): in file ('django/contrib/auth', 'hashers.py') is modified
Function -def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def must_update(self, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function -def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def encode(self, password, salt): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def must_update(self, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function -def _decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function +def params(self): in file ('django/contrib/auth', 'hashers.py') is added
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def must_update(self, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function -def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def must_update(self, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function -def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def must_update(self, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function  def encode(self, password, salt): in file ('django/contrib/auth', 'hashers.py') is modified
Function +def decode(self, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function  def verify(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is modified
Function -def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function +def safe_summary(self, encoded): in file ('django/contrib/auth', 'hashers.py') is added
Function  def harden_runtime(self, password, encoded): in file ('django/contrib/auth', 'hashers.py') is deleted
Function  def process_request(self, request): in file ('django/contrib/auth', 'middleware.py') is modified
Function  def update_proxy_model_permissions(apps, schema_editor, reverse=False): in file ('django/contrib/auth/migrations', '0011_update_proxy_permissions.py') is modified
Function -def get_default_username(check_db=True): in file ('django/contrib/auth/management', '__init__.py') is modified
Function +def get_default_username(check_db=True, database=DEFAULT_DB_ALIAS): in file ('django/contrib/auth/management', '__init__.py') is added
Function  def execute(self, *args, **options): in file ('django/contrib/auth/management/commands', 'createsuperuser.py') is modified
Function  def _get_pass(self, prompt="Password: "): in file ('django/contrib/auth/management/commands', 'changepassword.py') is modified
Function +def get_inlines(self, request, obj): in file ('django/contrib/admin', 'options.py') is added
Function  def get_ordering(self, request): in file ('django/contrib/admin', 'options.py') is modified
Function  def get_inline_instances(self, request, obj=None): in file ('django/contrib/admin', 'options.py') is modified
Function  def urls(self): in file ('django/contrib/admin', 'options.py') is modified
Function +def _get_action_description(func, name): in file ('django/contrib/admin', 'options.py') is added
Function  def _get_base_actions(self): in file ('django/contrib/admin', 'options.py') is modified
Function  def _filter_actions_by_permissions(self, request, actions): in file ('django/contrib/admin', 'options.py') is modified
Function -def get_action_choices(self, request, default_choices=BLANK_CHOICE_DASH): in file ('django/contrib/admin', 'options.py') is deleted
Function +def get_action_choices(self, request, default_choices=models.BLANK_CHOICE_DASH): in file ('django/contrib/admin', 'options.py') is modified
Function  def get_list_display(self, request): in file ('django/contrib/admin', 'options.py') is modified
Function  def get_preserved_filters(self, request): in file ('django/contrib/admin', 'options.py') is modified
Function  def get_inline_formsets(self, request, formsets, inline_instances, obj=None): in file ('django/contrib/admin', 'options.py') is modified
Function -def autocomplete_view(self, request): in file ('django/contrib/admin', 'options.py') is deleted
Function  def _get_edited_object_pks(self, request, prefix): in file ('django/contrib/admin', 'options.py') is modified
Function  def _get_list_editable_queryset(self, request, prefix): in file ('django/contrib/admin', 'options.py') is modified
Function  def history_view(self, request, object_id, extra_context=None): in file ('django/contrib/admin', 'options.py') is modified
Function  def media(self): in file ('django/contrib/admin', 'options.py') is modified
Function -def _has_add_permission(self, request, obj): in file ('django/contrib/admin', 'options.py') is deleted
Function  def get_extra(self, request, obj=None, **kwargs): in file ('django/contrib/admin', 'options.py') is modified
Function -def has_add_permission(self, request, obj=None): in file ('django/contrib/admin', 'options.py') is modified
Function +def has_add_permission(self, request, obj): in file ('django/contrib/admin', 'options.py') is modified
Function  def _check_ordering_item(self, obj, field_name, label): in file ('django/contrib/admin', 'checks.py') is modified
Function  def _check_list_display_links(self, obj): in file ('django/contrib/admin', 'checks.py') is modified
Function  def _check_actions_uniqueness(self, obj): in file ('django/contrib/admin', 'checks.py') is deleted
Function  def check(self, inline_obj, **kwargs): in file ('django/contrib/admin', 'checks.py') is deleted
Function -def _check_has_add_permission(self, obj): in file ('django/contrib/admin', 'checks.py') is modified
Function  def must_be(type, option, obj, id): in file ('django/contrib/admin', 'checks.py') is modified
Function  def delete_selected(modeladmin, request, queryset): in file ('django/contrib/admin', 'actions.py') is modified
Function  def autodiscover(): in file ('django/contrib/admin', '__init__.py') is deleted
Function -def media(self): in file ('django/contrib/admin', 'widgets.py') is modified
Function  def __init__(self, verbose_name, is_stacked, attrs=None, choices=()): in file ('django/contrib/admin', 'widgets.py') is modified
Function -def __init__(self, attrs=None): in file ('django/contrib/admin', 'widgets.py') is modified
Function +def __init__(self, attrs=None, validator_class=URLValidator): in file ('django/contrib/admin', 'widgets.py') is modified
Function -def get_context(self, name, value, attrs): in file ('django/contrib/admin', 'widgets.py') is modified
Function +def get_context(self, name, value, attrs): in file ('django/contrib/admin', 'widgets.py') is added
Function -def __init__(self, rel, admin_site, attrs=None, choices=(), using=None): in file ('django/contrib/admin', 'widgets.py') is modified
Function +def __init__(self, field, admin_site, attrs=None, choices=(), using=None): in file ('django/contrib/admin', 'widgets.py') is modified
Function  def get_url(self): in file ('django/contrib/admin', 'widgets.py') is deleted
Function  def build_attrs(self, base_attrs, extra_attrs=None): in file ('django/contrib/admin', 'widgets.py') is modified
Function  def confirm_login_allowed(self, user): in file ('django/contrib/admin', 'forms.py') is modified
Function  def flatten(fields): in file ('django/contrib/admin', 'utils.py') is modified
Function -def related_objects(self, related, objs): in file ('django/contrib/admin', 'utils.py') is deleted
Function +def related_objects(self, related_model, related_fields, objs): in file ('django/contrib/admin', 'utils.py') is added
Function  def _nested(self, obj, seen, format_callback): in file ('django/contrib/admin', 'utils.py') is modified
Function +def _get_changed_field_labels_from_form(form, changed_data): in file ('django/contrib/admin', 'utils.py') is added
Function  def __init__(self, name='admin'): in file ('django/contrib/admin', 'sites.py') is modified
Function -def empty_value_display(self): in file ('django/contrib/admin', 'sites.py') is deleted
Function -def empty_value_display(self, empty_value_display): in file ('django/contrib/admin', 'sites.py') is modified
Function  def has_permission(self, request): in file ('django/contrib/admin', 'sites.py') is modified
Function  def get_urls(self): in file ('django/contrib/admin', 'sites.py') is modified
Function  def wrap(view, cacheable=False): in file ('django/contrib/admin', 'sites.py') is modified
Function  def wrapper(*args, **kwargs): in file ('django/contrib/admin', 'sites.py') is modified
Function  def password_change(self, request, extra_context=None): in file ('django/contrib/admin', 'sites.py') is modified
Function +def autocomplete_view(self, request): in file ('django/contrib/admin', 'sites.py') is added
Function +def catch_all_view(self, request, url): in file ('django/contrib/admin', 'sites.py') is added
Function  def _build_app_dict(self, request, label=None): in file ('django/contrib/admin', 'sites.py') is modified
Function  def process_response(self, request, response): in file ('django/contrib/admin', 'tests.py') is modified
Function -def wait_for_popup(self, num_windows=2, timeout=10): in file ('django/contrib/admin', 'tests.py') is modified
Function +def wait_for_and_switch_to_popup(self, num_windows=2, timeout=10): in file ('django/contrib/admin', 'tests.py') is modified
Function  def wait_for(self, css_selector, timeout=10): in file ('django/contrib/admin', 'tests.py') is modified
Function -def wait_page_loaded(self): in file ('django/contrib/admin', 'tests.py') is modified
Function +def wait_page_ready(self, timeout=10): in file ('django/contrib/admin', 'tests.py') is modified
Function +def wait_page_loaded(self, timeout=10): in file ('django/contrib/admin', 'tests.py') is modified
Function  def admin_login(self, username, password, login_url='/admin/'): in file ('django/contrib/admin', 'tests.py') is modified
Function -def get_css_value(self, selector, attribute): in file ('django/contrib/admin', 'tests.py') is modified
Function +def select_option(self, selector, value): in file ('django/contrib/admin', 'tests.py') is modified
Function -def get_select_option(self, selector, value): in file ('django/contrib/admin', 'tests.py') is modified
Function +def deselect_option(self, selector, value): in file ('django/contrib/admin', 'tests.py') is added
Function  def media(self): in file ('django/contrib/admin', 'helpers.py') is deleted
Function  def __iter__(self): in file ('django/contrib/admin', 'helpers.py') is modified
Function +def get_admin_url(self, remote_field, remote_obj): in file ('django/contrib/admin', 'helpers.py') is added
Function  def contents(self): in file ('django/contrib/admin', 'helpers.py') is modified
Function -def field_choices(self, field, request, model_admin): in file ('django/contrib/admin', 'filters.py') is modified
Function +def field_admin_ordering(self, field, request, model_admin): in file ('django/contrib/admin', 'filters.py') is modified
Function +def field_choices(self, field, request, model_admin): in file ('django/contrib/admin', 'filters.py') is added
Function  def choices(self, changelist): in file ('django/contrib/admin', 'filters.py') is modified
Function  def choices(self, changelist): in file ('django/contrib/admin', 'filters.py') is modified
Function +def __init__(self, field, request, params, model, model_admin, field_path): in file ('django/contrib/admin', 'filters.py') is added
Function +def queryset(self, request, queryset): in file ('django/contrib/admin', 'filters.py') is added
Function +def expected_parameters(self): in file ('django/contrib/admin', 'filters.py') is added
Function +def choices(self, changelist): in file ('django/contrib/admin', 'filters.py') is added
Function +def action(function=None, *, permissions=None, description=None): in file ('django/contrib/admin', 'decorators.py') is added
Function +def make_published(self, request, queryset): in file ('django/contrib/admin', 'decorators.py') is added
Function +def make_published(self, request, queryset): in file ('django/contrib/admin', 'decorators.py') is added
Function +def decorator(func): in file ('django/contrib/admin', 'decorators.py') is added
Function +def display(function=None, *, boolean=None, ordering=None, description=None, empty_value=None): in file ('django/contrib/admin', 'decorators.py') is modified
Function +def is_published(self, obj): in file ('django/contrib/admin', 'decorators.py') is added
Function +def is_published(self, obj): in file ('django/contrib/admin', 'decorators.py') is added
Function +def decorator(func): in file ('django/contrib/admin', 'decorators.py') is added
Function  def register(*models, site=None): in file ('django/contrib/admin', 'decorators.py') is modified
Function  def paginator_number(cl, i): in file ('django/contrib/admin/templatetags', 'admin_list.py') is deleted
Function  def get(self, request, *args, **kwargs): in file ('django/contrib/admin/views', 'autocomplete.py') is modified
Function  def get_queryset(self): in file ('django/contrib/admin/views', 'autocomplete.py') is added
Function +def process_request(self, request): in file ('django/contrib/admin/views', 'autocomplete.py') is added
Function +def __init__(self, *args, **kwargs): in file ('django/contrib/admin/views', 'main.py') is modified
Function  def get_filters(self, request): in file ('django/contrib/admin/views', 'main.py') is modified
Function  def get_ordering(self, request, queryset): in file ('django/contrib/admin/views', 'main.py') is modified
Function  def get_ordering_field_columns(self): in file ('django/contrib/admin/views', 'main.py') is modified
Function  def get_queryset(self, request): in file ('django/contrib/admin/views', 'main.py') is modified
Function  def apply_select_related(self, qs): in file ('django/contrib/admin/views', 'main.py') is modified
Function -def __init__(self, application): in file ('django/contrib/staticfiles', 'handlers.py') is modified
Function  def load_middleware(self): in file ('django/contrib/staticfiles', 'handlers.py') is modified
Function  def get_response(self, request): in file ('django/contrib/staticfiles', 'handlers.py') is modified
Function +def get_response_async(self, request): in file ('django/contrib/staticfiles', 'handlers.py') is added
Function +def __init__(self, application): in file ('django/contrib/staticfiles', 'handlers.py') is added
Function +def __init__(self, application): in file ('django/contrib/staticfiles', 'handlers.py') is added
Function +def __call__(self, scope, receive, send): in file ('django/contrib/staticfiles', 'handlers.py') is added
Function  def ready(self): in file ('django/contrib/staticfiles', 'apps.py') is deleted
Function -def matches_patterns(path, patterns=None): in file ('django/contrib/staticfiles', 'utils.py') is modified
Function +def matches_patterns(path, patterns): in file ('django/contrib/staticfiles', 'utils.py') is added
Function  def __init__(self, *args, **kwargs): in file ('django/contrib/staticfiles', 'storage.py') is modified
Function  def post_process(self, paths, dry_run=False, **options): in file ('django/contrib/staticfiles', 'storage.py') is modified
Function  def __init__(self, *args, **kwargs): in file ('django/contrib/staticfiles', 'storage.py') is modified
Function  def post_process(self, *args, **kwargs): in file ('django/contrib/staticfiles', 'storage.py') is modified
Function  def save_manifest(self): in file ('django/contrib/staticfiles', 'storage.py') is modified
Function -def __init__(self, cache): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def __setitem__(self, key, value): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def __getitem__(self, key): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def clear(self): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def update(self, data): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def get(self, key, default=None): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def __init__(self, *args, **kwargs): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def hash_key(self, name): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function -def __init__(self, *args, **kwargs): in file ('django/contrib/staticfiles', 'storage.py') is deleted
Function  def __init__(self, *args, **kwargs): in file ('django/contrib/staticfiles/management/commands', 'collectstatic.py') is modified
Function  def collect(self): in file ('django/contrib/staticfiles/management/commands', 'collectstatic.py') is modified
Function  def handle(self, **options): in file ('django/contrib/staticfiles/management/commands', 'collectstatic.py') is modified
Function  def log(self, msg, level=2): in file ('django/contrib/staticfiles/management/commands', 'collectstatic.py') is modified
Function  def get_absolute_url(self): in file ('django/contrib/flatpages', 'models.py') is added
Function  def _trailing_slash_required(self): in file ('django/contrib/flatpages', 'forms.py') is modified
Function  def clean_url(self): in file ('django/contrib/flatpages', 'forms.py') is modified
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres', 'lookups.py') is modified
Function  def process_lhs(self, qn, connection): in file ('django/contrib/postgres', 'lookups.py') is modified
Function -def process_rhs(self, compiler, connection): in file ('django/contrib/postgres', 'lookups.py') is deleted
Function  def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is deleted
Function  def database_backwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is modified
Function +def extension_exists(self, schema_editor, extension): in file ('django/contrib/postgres', 'operations.py') is added
Function +def migration_name_fragment(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def __init__(self): in file ('django/contrib/postgres', 'operations.py') is modified
Function  def __init__(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def _ensure_not_in_transaction(self, schema_editor): in file ('django/contrib/postgres', 'operations.py') is added
Function +def describe(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_backwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def describe(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_backwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def __init__(self, name, locale, *, provider='libc', deterministic=True): in file ('django/contrib/postgres', 'operations.py') is added
Function +def state_forwards(self, app_label, state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def deconstruct(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def create_collation(self, schema_editor): in file ('django/contrib/postgres', 'operations.py') is modified
Function +def remove_collation(self, schema_editor): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_backwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def describe(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def migration_name_fragment(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def database_backwards(self, app_label, schema_editor, from_state, to_state): in file ('django/contrib/postgres', 'operations.py') is added
Function +def describe(self): in file ('django/contrib/postgres', 'operations.py') is added
Function +def migration_name_fragment(self): in file ('django/contrib/postgres', 'operations.py') is added
Function -def create_sql(self, model, schema_editor, using=''): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def create_sql(self, model, schema_editor, using='', **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, length=None, columns=(), **kwargs): in file ('django/contrib/postgres', 'indexes.py') is added
Function +def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is added
Function +def get_with_params(self): in file ('django/contrib/postgres', 'indexes.py') is added
Function -def __init__(self, *, autosummarize=None, pages_per_range=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, autosummarize=None, pages_per_range=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def check_supported(self, schema_editor): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def __init__(self, *, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def __init__(self, *, fastupdate=None, gin_pending_list_limit=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, fastupdate=None, gin_pending_list_limit=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def check_supported(self, schema_editor): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def get_with_params(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def __init__(self, *, buffering=None, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, buffering=None, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def check_supported(self, schema_editor): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def __init__(self, *, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def __init__(self, *expressions, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function  def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def __init__(self, *, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function -def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is deleted
Function -def get_with_params(self): in file ('django/contrib/postgres', 'indexes.py') is deleted
Function +def __init__(self, *expressions, fillfactor=None, **kwargs): in file ('django/contrib/postgres', 'indexes.py') is modified
Function +def deconstruct(self): in file ('django/contrib/postgres', 'indexes.py') is added
Function +def get_with_params(self): in file ('django/contrib/postgres', 'indexes.py') is added
Function +def __init__(self, expression, name): in file ('django/contrib/postgres', 'indexes.py') is added
Function  def process_rhs(self, qn, connection): in file ('django/contrib/postgres', 'search.py') is modified
Function +def __init__(self, config): in file ('django/contrib/postgres', 'search.py') is added
Function +def from_parameter(cls, config): in file ('django/contrib/postgres', 'search.py') is added
Function +def get_source_expressions(self): in file ('django/contrib/postgres', 'search.py') is added
Function +def set_source_expressions(self, exprs): in file ('django/contrib/postgres', 'search.py') is added
Function +def as_sql(self, compiler, connection): in file ('django/contrib/postgres', 'search.py') is added
Function  def _combine(self, other, connector, reversed): in file ('django/contrib/postgres', 'search.py') is modified
Function -def __init__(self, *expressions, **extra): in file ('django/contrib/postgres', 'search.py') is modified
Function +def __init__(self, *expressions, config=None, weight=None): in file ('django/contrib/postgres', 'search.py') is modified
Function  def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/contrib/postgres', 'search.py') is modified
Function  def as_sql(self, compiler, connection, function=None, template=None): in file ('django/contrib/postgres', 'search.py') is modified
Function  def _combine(self, other, connector, reversed): in file ('django/contrib/postgres', 'search.py') is modified
Function  def __init__(self, value, output_field=None, *, config=None, invert=False, search_type='plain'): in file ('django/contrib/postgres', 'search.py') is modified
Function -def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/contrib/postgres', 'search.py') is deleted
Function -def as_sql(self, compiler, connection): in file ('django/contrib/postgres', 'search.py') is modified
Function +def as_sql(self, compiler, connection, function=None, template=None): in file ('django/contrib/postgres', 'search.py') is modified
Function -def _combine(self, other, connector, reversed): in file ('django/contrib/postgres', 'search.py') is deleted
Function  def __str__(self): in file ('django/contrib/postgres', 'search.py') is modified
Function -def __init__(self, vector, query, **extra): in file ('django/contrib/postgres', 'search.py') is modified
Function  def as_sql(self, compiler, connection, function=None, template=None): in file ('django/contrib/postgres', 'search.py') is modified
Function +def __init__(self, base_widget, attrs=None): in file ('django/contrib/postgres/forms', 'ranges.py') is added
Function +def decompress(self, value): in file ('django/contrib/postgres/forms', 'ranges.py') is added
Function +def __init__(self, attrs=None): in file ('django/contrib/postgres/forms', 'ranges.py') is modified
Function  def __init__(self, **kwargs): in file ('django/contrib/postgres/forms', 'ranges.py') is modified
Function -def __init__(self, **kwargs): in file ('django/contrib/postgres/forms', 'ranges.py') is modified
Function -def __init__(self, base_widget, attrs=None): in file ('django/contrib/postgres/forms', 'ranges.py') is deleted
Function -def decompress(self, value): in file ('django/contrib/postgres/forms', 'ranges.py') is deleted
Function -def to_python(self, value): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Function -def bound_data(self, data, initial): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Function -def prepare_value(self, value): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Function -def has_changed(self, initial, data): in file ('django/contrib/postgres/forms', 'jsonb.py') is deleted
Function +def __init__(self, *args, **kwargs): in file ('django/contrib/postgres/forms', 'jsonb.py') is added
Function +def _remove_trailing_nulls(self, values): in file ('django/contrib/postgres/forms', 'array.py') is added
Function +def to_python(self, value): in file ('django/contrib/postgres/forms', 'array.py') is added
Function  def clean(self, value): in file ('django/contrib/postgres/forms', 'array.py') is modified
Function +def has_changed(self, initial, data): in file ('django/contrib/postgres/forms', 'array.py') is added
Function -def __init__(self, expression, ordering=(), **extra): in file ('django/contrib/postgres/aggregates', 'mixins.py') is modified
Function +def __init__(self, *expressions, ordering=(), **extra): in file ('django/contrib/postgres/aggregates', 'mixins.py') is modified
Function  def resolve_expression(self, *args, **kwargs): in file ('django/contrib/postgres/aggregates', 'mixins.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/contrib/postgres/aggregates', 'mixins.py') is modified
Function +def set_source_expressions(self, exprs): in file ('django/contrib/postgres/aggregates', 'mixins.py') is added
Function -def get_source_fields(self): in file ('django/contrib/postgres/aggregates', 'mixins.py') is deleted
Function -def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/contrib/postgres/aggregates', 'statistics.py') is deleted
Function  def __init__(self, expression, delimiter, **extra): in file ('django/contrib/postgres/aggregates', 'general.py') is modified
Function +def __init__(self, inclusive_lower=True, inclusive_upper=False): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function +def as_sql(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function  def model(self, model): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function +def _choices_is_value(cls, value): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function  def get_prep_value(self, value): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Function -def db_type(self, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is deleted
Function  def process_rhs(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Function -def as_sql(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Function +def as_postgresql(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is modified
Function +def process_rhs(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function +def process_lhs(self, compiler, connection): in file ('django/contrib/postgres/fields', 'ranges.py') is added
Function -def __init__(self, adapted, dumps=None, encoder=None): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def dumps(self, obj): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def __init__(self, verbose_name=None, name=None, encoder=None, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def db_type(self, connection): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def deconstruct(self): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def get_transform(self, name): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def get_prep_value(self, value): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def validate(self, value, model_instance): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def value_to_string(self, obj): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def formfield(self, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function +def __init__(self, *args, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is modified
Function -def __init__(self, key_name, *args, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is modified
Function +def __init__(self, *args, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is modified
Function -def as_sql(self, compiler, connection): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def __init__(self, key_transform, *args, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def __init__(self, key_name): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function -def __call__(self, *args, **kwargs): in file ('django/contrib/postgres/fields', 'jsonb.py') is deleted
Function  def model(self, model): in file ('django/contrib/postgres/fields', 'array.py') is added
Function +def _choices_is_value(cls, value): in file ('django/contrib/postgres/fields', 'array.py') is added
Function  def check(self, **kwargs): in file ('django/contrib/postgres/fields', 'array.py') is modified
Function +def cast_db_type(self, connection): in file ('django/contrib/postgres/fields', 'array.py') is added
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Function -def as_sql(self, qn, connection): in file ('django/contrib/postgres/fields', 'array.py') is deleted
Function +def __init__(self, lhs, rhs): in file ('django/contrib/postgres/fields', 'array.py') is added
Function +def process_rhs(self, compiler, connection): in file ('django/contrib/postgres/fields', 'array.py') is added
Function  def get_prep_lookup(self): in file ('django/contrib/postgres/fields', 'array.py') is modified
Function  def output_field(self): in file ('django/contrib/postgres/fields', 'array.py') is modified
Function +def __init__(self, get_response): in file ('django/contrib/sessions', 'middleware.py') is modified
Function  def __init__(self, get_response=None): in file ('django/contrib/sessions', 'middleware.py') is modified
Function  def __init__(self, session_key=None): in file ('django/contrib/sessions/backends', 'file.py') is modified
Function  def load(self): in file ('django/contrib/sessions/backends', 'file.py') is modified
Function  def __getitem__(self, key): in file ('django/contrib/sessions/backends', 'base.py') is added
Function  def __setitem__(self, key, value): in file ('django/contrib/sessions/backends', 'base.py') is modified
Function  def __delitem__(self, key): in file ('django/contrib/sessions/backends', 'base.py') is added
Function +def key_salt(self): in file ('django/contrib/sessions/backends', 'base.py') is added
Function  def _hash(self, value): in file ('django/contrib/sessions/backends', 'base.py') is modified
Function  def encode(self, session_dict): in file ('django/contrib/sessions/backends', 'base.py') is added
Function +def decode(self, session_data): in file ('django/contrib/sessions/backends', 'base.py') is added
Function +def _legacy_encode(self, session_dict): in file ('django/contrib/sessions/backends', 'base.py') is added
Function -def decode(self, session_data): in file ('django/contrib/sessions/backends', 'base.py') is deleted
Function +def _legacy_decode(self, session_data): in file ('django/contrib/sessions/backends', 'base.py') is modified
Function +def get_session_cookie_age(self): in file ('django/contrib/sessions/backends', 'base.py') is added
Function  def get_expiry_age(self, **kwargs): in file ('django/contrib/sessions/backends', 'base.py') is modified
Function -def __get(self, name, obj, default=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function +def _get(self, name, item, default=None): in file ('django/contrib/sitemaps', '__init__.py') is added
Function +def _languages(self): in file ('django/contrib/sitemaps', '__init__.py') is added
Function +def _items(self): in file ('django/contrib/sitemaps', '__init__.py') is added
Function +def _location(self, item, force_lang_code=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function +def paginator(self): in file ('django/contrib/sitemaps', '__init__.py') is added
Function -def location(self, obj): in file ('django/contrib/sitemaps', '__init__.py') is deleted
Function -def paginator(self): in file ('django/contrib/sitemaps', '__init__.py') is deleted
Function -def get_urls(self, page=1, site=None, protocol=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function +def location(self, item): in file ('django/contrib/sitemaps', '__init__.py') is added
Function +def get_protocol(self, protocol=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function +def get_domain(self, site=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function +def get_urls(self, page=1, site=None, protocol=None): in file ('django/contrib/sitemaps', '__init__.py') is added
Function  def _urls(self, page, protocol, domain): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function  def __init__(self, info_dict, priority=None, changefreq=None, protocol=None): in file ('django/contrib/sitemaps', '__init__.py') is modified
Function  def inner(request, *args, **kwargs): in file ('django/contrib/sitemaps', 'views.py') is modified
Function -def _check_for_i18n(value, float_formatted, string_formatted): in file ('django/contrib/humanize/templatetags', 'humanize.py') is deleted
Function  def get_for_id(self, id): in file ('django/contrib/contenttypes', 'models.py') is modified
Function  def name(self): in file ('django/contrib/contenttypes', 'models.py') is modified
Function +def app_labeled_name(self): in file ('django/contrib/contenttypes', 'models.py') is added
Function  def __str__(self): in file ('django/contrib/contenttypes', 'fields.py') is deleted
Function  def handle(self, **options): in file ('django/contrib/contenttypes/management/commands', 'remove_stale_contenttypes.py') is modified
Function +def __hash__(self): in file ('django/contrib/gis', 'measure.py') is added
Function  def __lt__(self, other): in file ('django/contrib/gis', 'measure.py') is modified
Function  def __len__(self): in file ('django/contrib/gis/geos', 'linestring.py') is modified
Function  def _set_list(self, length, items): in file ('django/contrib/gis/geos', 'linestring.py') is modified
Function +def is_counterclockwise(self): in file ('django/contrib/gis/geos', 'linestring.py') is added
Function  def __str__(self): in file ('django/contrib/gis/geos', 'coordseq.py') is modified
Function +def is_counterclockwise(self): in file ('django/contrib/gis/geos', 'coordseq.py') is modified
Function  def _set_list(self, length, items): in file ('django/contrib/gis/geos', 'point.py') is added
Function -def closed(self): in file ('django/contrib/gis/geos', 'collections.py') is deleted
Function -def __init__(self, func_name, *args, restype=None, errcheck=None, argtypes=None, **kwargs): in file ('django/contrib/gis/geos', 'libgeos.py') is modified
Function +def __init__(self, func_name, *, restype=None, errcheck=None, argtypes=None): in file ('django/contrib/gis/geos', 'libgeos.py') is modified
Function -def __call__(self, *args, **kwargs): in file ('django/contrib/gis/geos', 'libgeos.py') is deleted
Function +def __call__(self, *args): in file ('django/contrib/gis/geos', 'libgeos.py') is added
Function  def as_string(self): in file ('django/contrib/gis/gdal', 'field.py') is added
Function  def as_datetime(self): in file ('django/contrib/gis/gdal', 'field.py') is added
Function +def is_set(self): in file ('django/contrib/gis/gdal', 'field.py') is added
Function  def precision(self): in file ('django/contrib/gis/gdal', 'field.py') is modified
Function  def value(self): in file ('django/contrib/gis/gdal', 'field.py') is deleted
Function  def type(self): in file ('django/contrib/gis/gdal', 'field.py') is modified
Function -def __init__(self, srs_input='', srs_type='user'): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function +def __init__(self, srs_input='', srs_type='user', axis_order=None): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function  def from_esri(self): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function  def import_proj(self, proj): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function  def import_user_input(self, user_input): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function  def proj(self): in file ('django/contrib/gis/gdal', 'srs.py') is modified
Function  def num_fields(self): in file ('django/contrib/gis/gdal', 'feature.py') is modified
Function  def num_feat(self, force=1): in file ('django/contrib/gis/gdal', 'layer.py') is modified
Function  def _from_json(geom_input): in file ('django/contrib/gis/gdal', 'geometries.py') is deleted
Function  def from_bbox(cls, bbox): in file ('django/contrib/gis/gdal', 'geometries.py') is modified
Function  def gdal_version_info(): in file ('django/contrib/gis/gdal', 'libgdal.py') is modified
Function +def bool_output(func, argtypes, errcheck=None): in file ('django/contrib/gis/gdal/prototypes', 'generation.py') is added
Function  def check_envelope(result, func, cargs, offset=-1): in file ('django/contrib/gis/gdal/prototypes', 'errcheck.py') is deleted
Function  def name(self): in file ('django/contrib/gis/gdal/raster', 'source.py') is modified
Function  def driver(self): in file ('django/contrib/gis/gdal/raster', 'source.py') is modified
Function +def clone(self, name=None): in file ('django/contrib/gis/gdal/raster', 'source.py') is added
Function  def get_field_type(self, connection, table_name, row): in file ('django/contrib/gis/management/commands', 'inspectdb.py') is modified
Function  def add_arguments(self, parser): in file ('django/contrib/gis/management/commands', 'ogrinspect.py') is modified
Function -def _fix_polygon(self, poly): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is modified
Function +def _polygon_must_be_fixed(poly): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is added
Function +def _fix_polygon(cls, poly, clone=True): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is modified
Function -def _fix_geometry_collection(self, coll): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is modified
Function +def _fix_geometry_collection(cls, coll): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is modified
Function -def _isClockwise(self, coords): in file ('django/contrib/gis/db/backends/oracle', 'adapter.py') is modified
Function  def as_sql(self, connection, lookup, template_params, sql_params): in file ('django/contrib/gis/db/backends/oracle', 'operations.py') is deleted
Function  def geo_quote_name(self, name): in file ('django/contrib/gis/db/backends/oracle', 'operations.py') is modified
Function  def geometry_columns(self): in file ('django/contrib/gis/db/backends/oracle', 'operations.py') is modified
Function  def spatial_ref_sys(self): in file ('django/contrib/gis/db/backends/oracle', 'operations.py') is modified
Function +def data_types_reverse(self): in file ('django/contrib/gis/db/backends/oracle', 'introspection.py') is added
Function -def get_geometry_type(self, table_name, geo_col): in file ('django/contrib/gis/db/backends/oracle', 'introspection.py') is modified
Function +def get_geometry_type(self, table_name, description): in file ('django/contrib/gis/db/backends/oracle', 'introspection.py') is modified
Function +def _fix_polygon(cls, poly): in file ('django/contrib/gis/db/backends/postgis', 'adapter.py') is added
Function  def function_names(self): in file ('django/contrib/gis/db/backends/postgis', 'operations.py') is modified
Function  def postgis_proj_version(self): in file ('django/contrib/gis/db/backends/postgis', 'operations.py') is modified
Function  def postgis_version(self): in file ('django/contrib/gis/db/backends/postgis', 'operations.py') is modified
Function  def proj_version_tuple(self): in file ('django/contrib/gis/db/backends/postgis', 'operations.py') is modified
Function -def get_postgis_types(self): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is deleted
Function  def get_field_type(self, data_type, description): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is modified
Function -def get_geometry_type(self, table_name, geo_col): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is modified
Function +def get_geometry_type(self, table_name, description): in file ('django/contrib/gis/db/backends/postgis', 'introspection.py') is modified
Function -def _create_index_sql(self, model, fields, **kwargs): in file ('django/contrib/gis/db/backends/postgis', 'schema.py') is deleted
Function +def _create_index_sql(self, model, *, fields=None, **kwargs): in file ('django/contrib/gis/db/backends/postgis', 'schema.py') is added
Function -def supports_empty_geometry_collection(self): in file ('django/contrib/gis/db/backends/mysql', 'features.py') is deleted
Function +def empty_intersection_returns_none(self): in file ('django/contrib/gis/db/backends/mysql', 'features.py') is added
Function +def django_test_skips(self): in file ('django/contrib/gis/db/backends/mysql', 'features.py') is added
Function +def mariadb(self): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is added
Function +def mysql(self): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is added
Function  def select(self): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is modified
Function  def gis_operators(self): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is deleted
Function  def unsupported_functions(self): in file ('django/contrib/gis/db/backends/mysql', 'operations.py') is modified
Function -def get_geometry_type(self, table_name, geo_col): in file ('django/contrib/gis/db/backends/mysql', 'introspection.py') is modified
Function +def get_geometry_type(self, table_name, description): in file ('django/contrib/gis/db/backends/mysql', 'introspection.py') is modified
Function +def django_test_skips(self): in file ('django/contrib/gis/db/backends/spatialite', 'features.py') is added
Function -def select(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is deleted
Function  def unsupported_functions(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function  def convert_extent(self, box): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function -def proj4_version(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function +def proj_version(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is added
Function  def lwgeom_version(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function  def geometry_columns(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function  def spatial_ref_sys(self): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is modified
Function  def get_geometry_converter(self, expression): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is deleted
Function -def converter(value, expression, connection): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is deleted
Function -def converter(value, expression, connection): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is deleted
Function +def converter(value, expression, connection): in file ('django/contrib/gis/db/backends/spatialite', 'operations.py') is added
Function -def get_geometry_type(self, table_name, geo_col): in file ('django/contrib/gis/db/backends/spatialite', 'introspection.py') is modified
Function +def get_geometry_type(self, table_name, description): in file ('django/contrib/gis/db/backends/spatialite', 'introspection.py') is modified
Function  def column_sql(self, model, field, include_default=False): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Function  def delete_model(self, model, **kwargs): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Function  def add_field(self, model, field): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Function  def remove_field(self, model, field): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Function  def alter_db_table(self, model, old_db_table, new_db_table, disable_constraints=True): in file ('django/contrib/gis/db/backends/spatialite', 'schema.py') is modified
Function +def _fix_polygon(cls, poly): in file ('django/contrib/gis/db/backends/base', 'adapter.py') is added
Function  def supports_bbcontains_lookup(self): in file ('django/contrib/gis/db/backends/base', 'features.py') is modified
Function  def __getattr__(self, name): in file ('django/contrib/gis/db/backends/base', 'features.py') is modified
Function  def as_sql(self, compiler, connection, function=None, **extra_context): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Function  def as_sqlite(self, compiler, connection, **extra_context): in file ('django/contrib/gis/db/models', 'functions.py') is deleted
Function  def as_oracle(self, compiler, connection, **extra_context): in file ('django/contrib/gis/db/models', 'functions.py') is deleted
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/contrib/gis/db/models', 'functions.py') is added
Function -def as_sqlite(self, compiler, connection, **extra_context): in file ('django/contrib/gis/db/models', 'functions.py') is deleted
Function +def __init__(self, expression, precision=8, **extra): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Function  def __init__(self, expression, num_seg=48, **extra): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Function -def __init__(self, *args, **kwargs): in file ('django/contrib/gis/db/models', 'functions.py') is modified
Function  def get_raster_prep_value(self, value, is_candidate): in file ('django/contrib/gis/db/models', 'fields.py') is modified
Function  def __get__(self, instance, cls=None): in file ('django/contrib/gis/db/models', 'proxy.py') is modified
Function  def __set__(self, instance, value): in file ('django/contrib/gis/db/models', 'proxy.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Function  def process_rhs(self, compiler, connection): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Function +def process_distance(self, compiler, connection): in file ('django/contrib/gis/db/models', 'lookups.py') is added
Function  def process_rhs(self, compiler, connection): in file ('django/contrib/gis/db/models', 'lookups.py') is modified
Function  def as_oracle(self, compiler, connection, **extra_context): in file ('django/contrib/gis/db/models', 'aggregates.py') is deleted
Function -def IE_sanitize(self, filename): in file ('django/http', 'multipartparser.py') is deleted
Function +def sanitize_file_name(self, file_name): in file ('django/http', 'multipartparser.py') is added
Function  def _close_files(self): in file ('django/http', 'multipartparser.py') is modified
Function  def __next__(self): in file ('django/http', 'multipartparser.py') is modified
Function  def parse_boundary_stream(stream, max_header_size): in file ('django/http', 'multipartparser.py') is modified
Function +def accepted_types(self): in file ('django/http', 'request.py') is added
Function +def accepts(self, media_type): in file ('django/http', 'request.py') is added
Function +def _set_content_type_params(self, meta): in file ('django/http', 'request.py') is modified
Function  def _get_raw_host(self): in file ('django/http', 'request.py') is modified
Function  def scheme(self): in file ('django/http', 'request.py') is modified
Function  def is_ajax(self): in file ('django/http', 'request.py') is added
Function  def close(self): in file ('django/http', 'request.py') is modified
Function -def xreadlines(self): in file ('django/http', 'request.py') is deleted
Function +def __getitem__(self, key): in file ('django/http', 'request.py') is added
Function  def parse_header_name(cls, header): in file ('django/http', 'request.py') is modified
Function +def __init__(self, media_type_raw_line): in file ('django/http', 'request.py') is added
Function +def __str__(self): in file ('django/http', 'request.py') is added
Function +def __repr__(self): in file ('django/http', 'request.py') is added
Function +def is_all_types(self): in file ('django/http', 'request.py') is added
Function +def match(self, other): in file ('django/http', 'request.py') is added
Function  def bytes_to_text(s, encoding): in file ('django/http', 'request.py') is modified
Function +def parse_accept_header(header): in file ('django/http', 'request.py') is added
Function -def __init__(self, content_type=None, status=None, reason=None, charset=None): in file ('django/http', 'response.py') is deleted
Function -def reason_phrase(self): in file ('django/http', 'response.py') is deleted
Function -def reason_phrase(self, value): in file ('django/http', 'response.py') is deleted
Function -def charset(self): in file ('django/http', 'response.py') is deleted
Function -def charset(self, value): in file ('django/http', 'response.py') is deleted
Function -def serialize_headers(self): in file ('django/http', 'response.py') is deleted
Function -def to_bytes(val, encoding): in file ('django/http', 'response.py') is deleted
Function -def _content_type_for_repr(self): in file ('django/http', 'response.py') is deleted
Function +def __init__(self, data): in file ('django/http', 'response.py') is modified
Function  def _convert_to_charset(self, value, charset, mime_encode=False): in file ('django/http', 'response.py') is modified
Function +def __delitem__(self, key): in file ('django/http', 'response.py') is modified
Function +def __setitem__(self, key, value): in file ('django/http', 'response.py') is modified
Function +def pop(self, key, default=None): in file ('django/http', 'response.py') is added
Function +def setdefault(self, key, value): in file ('django/http', 'response.py') is modified
Function +def __init__(self, content_type=None, status=None, reason=None, charset=None, headers=None): in file ('django/http', 'response.py') is modified
Function +def reason_phrase(self): in file ('django/http', 'response.py') is added
Function +def reason_phrase(self, value): in file ('django/http', 'response.py') is added
Function +def charset(self): in file ('django/http', 'response.py') is added
Function +def charset(self, value): in file ('django/http', 'response.py') is added
Function +def serialize_headers(self): in file ('django/http', 'response.py') is added
Function +def to_bytes(val, encoding): in file ('django/http', 'response.py') is added
Function +def _content_type_for_repr(self): in file ('django/http', 'response.py') is added
Function  def __setitem__(self, header, value): in file ('django/http', 'response.py') is modified
Function  def __delitem__(self, header): in file ('django/http', 'response.py') is modified
Function  def has_header(self, header): in file ('django/http', 'response.py') is deleted
Function  def setdefault(self, key, value): in file ('django/http', 'response.py') is modified
Function  def set_signed_cookie(self, key, value, salt='', **kwargs): in file ('django/http', 'response.py') is added
Function -def delete_cookie(self, key, path='/', domain=None): in file ('django/http', 'response.py') is modified
Function +def delete_cookie(self, key, path='/', domain=None, samesite=None): in file ('django/http', 'response.py') is modified
Function  def close(self): in file ('django/http', 'response.py') is modified
Function  def write(self, content): in file ('django/http', 'response.py') is modified
Function  def flush(self): in file ('django/http', 'response.py') is modified
Function  def tell(self): in file ('django/http', 'response.py') is modified
Function  def writelines(self, lines): in file ('django/http', 'response.py') is modified
Function  def content(self, value): in file ('django/http', 'response.py') is modified
Function -def __init__(self, func, args, kwargs, url_name=None, app_names=None, namespaces=None, route=None): in file ('django/urls', 'resolvers.py') is modified
Function +def __init__(self, func, args, kwargs, url_name=None, app_names=None, namespaces=None, route=None, tried=None): in file ('django/urls', 'resolvers.py') is modified
Function +def _get_cached_resolver(urlconf=None): in file ('django/urls', 'resolvers.py') is added
Function  def match(self, path): in file ('django/urls', 'resolvers.py') is modified
Function  def __repr__(self): in file ('django/urls', 'resolvers.py') is modified
Function +def _extend_tried(tried, pattern, sub_tried=None): in file ('django/urls', 'resolvers.py') is modified
Function  def _join_route(route1, route2): in file ('django/urls', 'resolvers.py') is modified
Function  def resolve_error_handler(self, view_type): in file ('django/urls', 'resolvers.py') is modified
Function  def resolve(path, urlconf=None): in file ('django/urls', 'base.py') is modified
Function  def clear_url_caches(): in file ('django/urls', 'base.py') is modified
Function  def is_valid_path(path, urlconf=None): in file ('django/urls', 'base.py') is modified
Function -def __init__(self, using, savepoint): in file ('django/db', 'transaction.py') is modified
Function +def __init__(self, using, savepoint, durable): in file ('django/db', 'transaction.py') is modified
Function  def __enter__(self): in file ('django/db', 'transaction.py') is modified
Function -def atomic(using=None, savepoint=True): in file ('django/db', 'transaction.py') is modified
Function +def atomic(using=None, savepoint=True, durable=False): in file ('django/db', 'transaction.py') is modified
Function -def __getattr__(self, item): in file ('django/db', '__init__.py') is deleted
Function -def __setattr__(self, name, value): in file ('django/db', '__init__.py') is deleted
Function -def __delattr__(self, name): in file ('django/db', '__init__.py') is deleted
Function -def __eq__(self, other): in file ('django/db', '__init__.py') is deleted
Function -def __init__(self, databases=None): in file ('django/db', 'utils.py') is modified
Function +def configure_settings(self, databases): in file ('django/db', 'utils.py') is added
Function  def databases(self): in file ('django/db', 'utils.py') is deleted
Function  def ensure_defaults(self, alias): in file ('django/db', 'utils.py') is modified
Function -def __getitem__(self, alias): in file ('django/db', 'utils.py') is deleted
Function +def create_connection(self, alias): in file ('django/db', 'utils.py') is modified
Function -def __setitem__(self, key, value): in file ('django/db', 'utils.py') is deleted
Function -def __delitem__(self, key): in file ('django/db', 'utils.py') is deleted
Function -def __iter__(self): in file ('django/db', 'utils.py') is deleted
Function -def all(self): in file ('django/db', 'utils.py') is deleted
Function  def ensure_schema(self): in file ('django/db/migrations', 'recorder.py') is modified
Function  def applied_migrations(self): in file ('django/db/migrations', 'recorder.py') is modified
Function  def only_relation_agnostic_fields(self, fields): in file ('django/db/migrations', 'autodetector.py') is modified
Function  def _generate_through_model_map(self): in file ('django/db/migrations', 'autodetector.py') is modified
Function  def check_dependency(self, operation, dependency): in file ('django/db/migrations', 'autodetector.py') is modified
Function  def generate_created_proxies(self): in file ('django/db/migrations', 'autodetector.py') is modified
Function -def suggest_name(cls, ops): in file ('django/db/migrations', 'autodetector.py') is deleted
Function  def parse_number(cls, name): in file ('django/db/migrations', 'autodetector.py') is modified
Function -def __init__(self, connection, load=True, ignore_no_migrations=False): in file ('django/db/migrations', 'loader.py') is modified
Function  def check_consistent_history(self, connection): in file ('django/db/migrations', 'loader.py') is modified
Function  def project_state(self, nodes=None, at_end=True): in file ('django/db/migrations', 'loader.py') is modified
Function +def collect_sql(self, plan): in file ('django/db/migrations', 'loader.py') is added
Function -def optimize(self, operations, app_label=None): in file ('django/db/migrations', 'optimizer.py') is modified
Function +def optimize(self, operations, app_label): in file ('django/db/migrations', 'optimizer.py') is modified
Function -def optimize_inner(self, operations, app_label=None): in file ('django/db/migrations', 'optimizer.py') is modified
Function +def optimize_inner(self, operations, app_label): in file ('django/db/migrations', 'optimizer.py') is modified
Function +def serialize(self): in file ('django/db/migrations', 'serializer.py') is added
Function +def serialize(self): in file ('django/db/migrations', 'serializer.py') is added
Function +def serialize(self): in file ('django/db/migrations', 'serializer.py') is added
Function +def suggest_name(self): in file ('django/db/migrations', 'migration.py') is added
Function  def _create_project_state(self, with_applied_migrations=False): in file ('django/db/migrations', 'executor.py') is modified
Function -def collect_sql(self, plan): in file ('django/db/migrations', 'executor.py') is deleted
Function  def apply_migration(self, state, migration, fake=False, fake_initial=False): in file ('django/db/migrations', 'executor.py') is modified
Function  def __init__(self, label): in file ('django/db/migrations', 'state.py') is modified
Function  def import_models(self): in file ('django/db/migrations', 'state.py') is modified
Function  def __init__(self, app_label, name, fields, options=None, bases=None, managers=None): in file ('django/db/migrations', 'state.py') is modified
Function -def get_field_by_name(self, name): in file ('django/db/migrations', 'state.py') is deleted
Function  def get_index_by_name(self, name): in file ('django/db/migrations', 'state.py') is modified
Function  def _check_for_duplicates(arg_name, objs): in file ('django/db/migrations/operations', 'models.py') is modified
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'models.py') is deleted
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'models.py') is deleted
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'models.py') is deleted
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function  def __init__(self, name, table): in file ('django/db/migrations/operations', 'models.py') is modified
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'models.py') is deleted
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'models.py') is deleted
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_field(self, model_name, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def references_field(self, model_name, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_field(self, model_name, name, app_label=None): in file ('django/db/migrations/operations', 'models.py') is modified
Function +def references_field(self, model_name, name, app_label): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'models.py') is added
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is modified
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function -def references_field(self, model_name, name, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is modified
Function +def references_field(self, model_name, name, app_label): in file ('django/db/migrations/operations', 'fields.py') is modified
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is deleted
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is deleted
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'fields.py') is added
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function  def state_forwards(self, app_label, state): in file ('django/db/migrations/operations', 'fields.py') is modified
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is deleted
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'fields.py') is added
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is deleted
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'fields.py') is added
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function  def database_forwards(self, app_label, schema_editor, from_state, to_state): in file ('django/db/migrations/operations', 'fields.py') is modified
Function -def references_field(self, model_name, name, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is modified
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'fields.py') is added
Function +def references_field(self, model_name, name, app_label): in file ('django/db/migrations/operations', 'fields.py') is modified
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'fields.py') is deleted
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'fields.py') is added
Function -def is_referenced_by_foreign_key(state, model_name_lower, field, field_name): in file ('django/db/migrations/operations', 'utils.py') is deleted
Function +def resolve_relation(model, app_label=None, model_name=None): in file ('django/db/migrations/operations', 'utils.py') is added
Function -def from_model(cls, model, app_label=None, model_name=None): in file ('django/db/migrations/operations', 'utils.py') is deleted
Function -def __eq__(self, other): in file ('django/db/migrations/operations', 'utils.py') is deleted
Function -def field_references_model(field, model_tuple): in file ('django/db/migrations/operations', 'utils.py') is modified
Function +def get_references(state, model_tuple, field_tuple=()): in file ('django/db/migrations/operations', 'utils.py') is added
Function +def field_is_referenced(state, model_tuple, field_tuple): in file ('django/db/migrations/operations', 'utils.py') is added
Function -def references_model(self, name, app_label=None): in file ('django/db/migrations/operations', 'base.py') is modified
Function +def migration_name_fragment(self): in file ('django/db/migrations/operations', 'base.py') is added
Function +def references_model(self, name, app_label): in file ('django/db/migrations/operations', 'base.py') is modified
Function -def references_field(self, model_name, name, app_label=None): in file ('django/db/migrations/operations', 'base.py') is modified
Function +def references_field(self, model_name, name, app_label): in file ('django/db/migrations/operations', 'base.py') is modified
Function -def reduce(self, operation, app_label=None): in file ('django/db/migrations/operations', 'base.py') is modified
Function +def reduce(self, operation, app_label): in file ('django/db/migrations/operations', 'base.py') is modified
Function -def _get_model_tuple(self, remote_model, app_label, model_name): in file ('django/db/migrations/operations', 'base.py') is deleted
Function  def __str__(self): in file ('django/db/backends', 'ddl_references.py') is added
Function  def col_str(column, idx): in file ('django/db/backends', 'ddl_references.py') is added
Function  def __str__(self): in file ('django/db/backends', 'ddl_references.py') is added
Function  def col_str(column, idx): in file ('django/db/backends', 'ddl_references.py') is added
Function  def __str__(self): in file ('django/db/backends', 'ddl_references.py') is added
Function +def __init__(self, table, expressions, compiler, quote_value): in file ('django/db/backends', 'ddl_references.py') is added
Function +def rename_table_references(self, old_table, new_table): in file ('django/db/backends', 'ddl_references.py') is added
Function +def rename_column_references(self, table, old_column, new_column): in file ('django/db/backends', 'ddl_references.py') is added
Function +def __str__(self): in file ('django/db/backends', 'ddl_references.py') is added
Function  def execute(self, sql, params=None): in file ('django/db/backends', 'utils.py') is modified
Function +def executemany(self, sql, param_list): in file ('django/db/backends', 'utils.py') is added
Function +def debug_sql(self, sql=None, params=None, use_last_executed_query=False, many=False): in file ('django/db/backends', 'utils.py') is added
Function -def executemany(self, sql, param_list): in file ('django/db/backends', 'utils.py') is deleted
Function  def split_identifier(identifier): in file ('django/db/backends', 'utils.py') is modified
Function  def truncate_name(identifier, length=None, hash_len=4): in file ('django/db/backends', 'utils.py') is modified
Function  def _clone_test_db(self, suffix, verbosity, keepdb=False): in file ('django/db/backends/postgresql', 'creation.py') is modified
Function -def _escape_pgpass(txt): in file ('django/db/backends/postgresql', 'client.py') is deleted
Function -def runshell_db(cls, conn_params): in file ('django/db/backends/postgresql', 'client.py') is modified
Function +def settings_to_cmd_args_env(cls, settings_dict, parameters): in file ('django/db/backends/postgresql', 'client.py') is modified
Function +def runshell(self, parameters): in file ('django/db/backends/postgresql', 'client.py') is modified
Function -def runshell(self): in file ('django/db/backends/postgresql', 'client.py') is deleted
Function -def is_postgresql_9_5(self): in file ('django/db/backends/postgresql', 'features.py') is deleted
Function +def test_collations(self): in file ('django/db/backends/postgresql', 'features.py') is added
Function -def is_postgresql_9_6(self): in file ('django/db/backends/postgresql', 'features.py') is deleted
Function +def introspected_field_types(self): in file ('django/db/backends/postgresql', 'features.py') is added
Function +def is_postgresql_11(self): in file ('django/db/backends/postgresql', 'features.py') is added
Function +def is_postgresql_12(self): in file ('django/db/backends/postgresql', 'features.py') is added
Function +def is_postgresql_13(self): in file ('django/db/backends/postgresql', 'features.py') is added
Function  def unification_cast_sql(self, output_field): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function -def date_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function +def date_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function +def _prepare_tzname_delta(self, tzname): in file ('django/db/backends/postgresql', 'operations.py') is added
Function  def _convert_field_to_tz(self, field_name, tzname): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function  def datetime_cast_date_sql(self, field_name, tzname): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function -def time_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function +def time_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/postgresql', 'operations.py') is added
Function -def fetch_returned_insert_ids(self, cursor): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function +def fetch_returned_insert_rows(self, cursor): in file ('django/db/backends/postgresql', 'operations.py') is added
Function  def lookup_cast(self, lookup_type, internal_type=None): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function -def sql_flush(self, style, tables, sequences, allow_cascade=False): in file ('django/db/backends/postgresql', 'operations.py') is deleted
Function +def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False): in file ('django/db/backends/postgresql', 'operations.py') is added
Function  def sequence_reset_by_name_sql(self, style, sequences): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function  def prep_for_iexact_query(self, x): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function  def last_executed_query(self, cursor, sql, params): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function -def return_insert_id(self): in file ('django/db/backends/postgresql', 'operations.py') is deleted
Function +def return_insert_columns(self, fields): in file ('django/db/backends/postgresql', 'operations.py') is added
Function  def bulk_insert_sql(self, fields, placeholder_rows): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function +def adapt_decimalfield_value(self, value, max_digits=None, decimal_places=None): in file ('django/db/backends/postgresql', 'operations.py') is added
Function -def window_frame_range_start_end(self, start=None, end=None): in file ('django/db/backends/postgresql', 'operations.py') is deleted
Function  def explain_query_prefix(self, format=None, **options): in file ('django/db/backends/postgresql', 'operations.py') is modified
Function  def get_table_list(self, cursor): in file ('django/db/backends/postgresql', 'introspection.py') is modified
Function  def get_sequences(self, cursor, table_name, table_fields=()): in file ('django/db/backends/postgresql', 'introspection.py') is modified
Function +def get_key_columns(self, cursor, table_name): in file ('django/db/backends/postgresql', 'introspection.py') is modified
Function -def get_key_columns(self, cursor, table_name): in file ('django/db/backends/postgresql', 'introspection.py') is modified
Function  def get_new_connection(self, conn_params): in file ('django/db/backends/postgresql', 'base.py') is modified
Function  def ensure_timezone(self): in file ('django/db/backends/postgresql', 'base.py') is modified
Function  def create_cursor(self, name=None): in file ('django/db/backends/postgresql', 'base.py') is modified
Function +def tzinfo_factory(self, offset): in file ('django/db/backends/postgresql', 'base.py') is added
Function  def chunked_cursor(self): in file ('django/db/backends/postgresql', 'base.py') is modified
Function  def is_usable(self): in file ('django/db/backends/postgresql', 'base.py') is modified
Function -def _nodb_connection(self): in file ('django/db/backends/postgresql', 'base.py') is modified
Function +def _nodb_cursor(self): in file ('django/db/backends/postgresql', 'base.py') is modified
Function +def make_debug_cursor(self, cursor): in file ('django/db/backends/postgresql', 'base.py') is added
Function +def copy_expert(self, sql, file, *args): in file ('django/db/backends/postgresql', 'base.py') is added
Function +def copy_to(self, file, table, *args, **kwargs): in file ('django/db/backends/postgresql', 'base.py') is added
Function  def quote_value(self, value): in file ('django/db/backends/postgresql', 'schema.py') is added
Function  def _field_indexes_sql(self, model, field): in file ('django/db/backends/postgresql', 'schema.py') is modified
Function +def _field_data_type(self, field): in file ('django/db/backends/postgresql', 'schema.py') is added
Function +def _field_base_data_types(self, field): in file ('django/db/backends/postgresql', 'schema.py') is modified
Function  def _create_like_index_sql(self, model, field): in file ('django/db/backends/postgresql', 'schema.py') is modified
Function  def _alter_column_type_sql(self, model, old_field, new_field, new_type): in file ('django/db/backends/postgresql', 'schema.py') is modified
Function +def add_index(self, model, index, concurrently=False): in file ('django/db/backends/postgresql', 'schema.py') is added
Function +def remove_index(self, model, index, concurrently=False): in file ('django/db/backends/postgresql', 'schema.py') is added
Function +def _delete_index_sql(self, model, name, sql=None, concurrently=False): in file ('django/db/backends/postgresql', 'schema.py') is added
Function -def runshell(self): in file ('django/db/backends/oracle', 'client.py') is modified
Function +def connect_string(settings_dict): in file ('django/db/backends/oracle', 'client.py') is added
Function +def settings_to_cmd_args_env(cls, settings_dict, parameters): in file ('django/db/backends/oracle', 'client.py') is modified
Function -def has_fetch_offset_support(self): in file ('django/db/backends/oracle', 'features.py') is deleted
Function +def introspected_field_types(self): in file ('django/db/backends/oracle', 'features.py') is added
Function -def allow_sliced_subqueries_with_in(self): in file ('django/db/backends/oracle', 'features.py') is deleted
Function +def supports_collation_on_charfield(self): in file ('django/db/backends/oracle', 'features.py') is added
Function -def supports_slicing_ordering_in_compound(self): in file ('django/db/backends/oracle', 'features.py') is deleted
Function +def has_json_object_function(self): in file ('django/db/backends/oracle', 'features.py') is added
Function -def date_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def date_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def _prepare_tzname_delta(self, tzname): in file ('django/db/backends/oracle', 'operations.py') is added
Function  def _convert_field_to_tz(self, field_name, tzname): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def datetime_cast_date_sql(self, field_name, tzname): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def time_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def time_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def get_db_converters(self, expression): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def fetch_returned_insert_id(self, cursor): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def fetch_returned_insert_columns(self, cursor, returning_params): in file ('django/db/backends/oracle', 'operations.py') is added
Function  def field_cast_sql(self, db_type, internal_type): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def last_executed_query(self, cursor, sql, params): in file ('django/db/backends/oracle', 'operations.py') is deleted
Function  def last_insert_id(self, cursor, table_name, pk_name): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def max_in_list_size(self): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def random_function_sql(self): in file ('django/db/backends/oracle', 'operations.py') is deleted
Function  def regex_lookup(self, lookup_type): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def return_insert_id(self): in file ('django/db/backends/oracle', 'operations.py') is deleted
Function +def return_insert_columns(self, fields): in file ('django/db/backends/oracle', 'operations.py') is added
Function  def __foreign_key_constraints(self, table_name, recursive): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def sql_flush(self, style, tables, sequences, allow_cascade=False): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False): in file ('django/db/backends/oracle', 'operations.py') is added
Function  def sequence_reset_by_name_sql(self, style, sequences): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def sequence_reset_sql(self, style, model_list): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def start_transaction_sql(self): in file ('django/db/backends/oracle', 'operations.py') is modified
Function +def adapt_decimalfield_value(self, value, max_digits=None, decimal_places=None): in file ('django/db/backends/oracle', 'operations.py') is added
Function  def combine_expression(self, connector, sub_expressions): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def _get_no_autofield_sequence_name(self, table): in file ('django/db/backends/oracle', 'operations.py') is modified
Function  def bulk_batch_size(self, fields, objs): in file ('django/db/backends/oracle', 'operations.py') is modified
Function -def compiler_module(self): in file ('django/db/backends/oracle', 'operations.py') is deleted
Function +def conditional_expression_supported_in_where_clause(self, expression): in file ('django/db/backends/oracle', 'operations.py') is added
Function +def __init__(self, field): in file ('django/db/backends/oracle', 'utils.py') is modified
Function  def bind_parameter(self, cursor): in file ('django/db/backends/oracle', 'utils.py') is deleted
Function +def get_value(self): in file ('django/db/backends/oracle', 'utils.py') is added
Function +def dsn(settings_dict): in file ('django/db/backends/oracle', 'utils.py') is added
Function +def data_types_reverse(self): in file ('django/db/backends/oracle', 'introspection.py') is added
Function  def get_field_type(self, data_type, description): in file ('django/db/backends/oracle', 'introspection.py') is modified
Function +def get_primary_key_column(self, cursor, table_name): in file ('django/db/backends/oracle', 'introspection.py') is added
Function -def _dsn(self): in file ('django/db/backends/oracle', 'base.py') is deleted
Function -def _connect_string(self): in file ('django/db/backends/oracle', 'base.py') is deleted
Function  def get_connection_params(self): in file ('django/db/backends/oracle', 'base.py') is modified
Function  def is_usable(self): in file ('django/db/backends/oracle', 'base.py') is modified
Function +def cx_oracle_version(self): in file ('django/db/backends/oracle', 'base.py') is added
Function  def oracle_version(self): in file ('django/db/backends/oracle', 'base.py') is modified
Function +def _alter_column_type_sql(self, model, old_field, new_field, new_type): in file ('django/db/backends/oracle', 'schema.py') is added
Function  def normalize_name(self, name): in file ('django/db/backends/oracle', 'schema.py') is modified
Function +def _get_default_collation(self, table_name): in file ('django/db/backends/oracle', 'schema.py') is added
Function +def _alter_column_collation_sql(self, model, new_field, new_type, new_collation): in file ('django/db/backends/oracle', 'schema.py') is added
Function  def _get_test_db_name(self): in file ('django/db/backends/sqlite3', 'creation.py') is modified
Function -def runshell(self): in file ('django/db/backends/sqlite3', 'client.py') is modified
Function +def settings_to_cmd_args_env(cls, settings_dict, parameters): in file ('django/db/backends/sqlite3', 'client.py') is modified
Function +def django_test_skips(self): in file ('django/db/backends/sqlite3', 'features.py') is modified
Function +def supports_atomic_references_rename(self): in file ('django/db/backends/sqlite3', 'features.py') is added
Function +def introspected_field_types(self): in file ('django/db/backends/sqlite3', 'features.py') is added
Function +def supports_json_field(self): in file ('django/db/backends/sqlite3', 'features.py') is added
Function  def check_expression_support(self, expression): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function -def date_interval_sql(self, timedelta): in file ('django/db/backends/sqlite3', 'operations.py') is deleted
Function -def date_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/sqlite3', 'operations.py') is deleted
Function -def time_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/sqlite3', 'operations.py') is deleted
Function -def _convert_tzname_to_sql(self, tzname): in file ('django/db/backends/sqlite3', 'operations.py') is deleted
Function +def date_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/sqlite3', 'operations.py') is added
Function +def time_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/sqlite3', 'operations.py') is added
Function +def _convert_tznames_to_sql(self, tzname): in file ('django/db/backends/sqlite3', 'operations.py') is added
Function  def time_extract_sql(self, lookup_type, field_name): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function -def sql_flush(self, style, tables, sequences, allow_cascade=False): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function +def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function +def sequence_reset_by_name_sql(self, style, sequences): in file ('django/db/backends/sqlite3', 'operations.py') is added
Function  def adapt_datetimefield_value(self, value): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function  def combine_duration_expression(self, connector, sub_expressions): in file ('django/db/backends/sqlite3', 'operations.py') is modified
Function  def subtract_temporals(self, internal_type, lhs, rhs): in file ('django/db/backends/sqlite3', 'operations.py') is added
Function  def get_field_type(self, data_type, description): in file ('django/db/backends/sqlite3', 'introspection.py') is modified
Function  def get_table_list(self, cursor): in file ('django/db/backends/sqlite3', 'introspection.py') is modified
Function  def get_sequences(self, cursor, table_name, table_fields=()): in file ('django/db/backends/sqlite3', 'introspection.py') is modified
Function -def _table_info(self, cursor, name): in file ('django/db/backends/sqlite3', 'introspection.py') is deleted
Function  def _get_foreign_key_constraints(self, cursor, table_name): in file ('django/db/backends/sqlite3', 'introspection.py') is modified
Function +def _get_index_columns_orders(self, sql): in file ('django/db/backends/sqlite3', 'introspection.py') is added
Function +def _get_column_collations(self, cursor, table_name): in file ('django/db/backends/sqlite3', 'introspection.py') is added
Function  def decoder(conv_func): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function  def check_sqlite_version(): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function  def get_new_connection(self, conn_params): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function  def close(self): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function  def enable_constraint_checking(self): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function  def check_constraints(self, table_names=None): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function -def _sqlite_datetime_parse(dt, tzname=None): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_datetime_parse(dt, tzname=None, conn_tzname=None): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_date_trunc(lookup_type, dt): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_date_trunc(lookup_type, dt, tzname, conn_tzname): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_time_trunc(lookup_type, dt): in file ('django/db/backends/sqlite3', 'base.py') is deleted
Function +def _sqlite_time_trunc(lookup_type, dt, tzname, conn_tzname): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_datetime_cast_date(dt, tzname): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_datetime_cast_date(dt, tzname, conn_tzname): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_datetime_cast_time(dt, tzname): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_datetime_cast_time(dt, tzname, conn_tzname): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_datetime_extract(lookup_type, dt, tzname=None): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_datetime_extract(lookup_type, dt, tzname=None, conn_tzname=None): in file ('django/db/backends/sqlite3', 'base.py') is added
Function -def _sqlite_datetime_trunc(lookup_type, dt, tzname): in file ('django/db/backends/sqlite3', 'base.py') is modified
Function +def _sqlite_datetime_trunc(lookup_type, dt, tzname, conn_tzname): in file ('django/db/backends/sqlite3', 'base.py') is added
Function  def alter_field(self, model, old_field, new_field, strict=False): in file ('django/db/backends/sqlite3', 'schema.py') is added
Function  def _alter_many_to_many(self, model, old_field, new_field, strict): in file ('django/db/backends/sqlite3', 'schema.py') is modified
Function +def _collate_sql(self, collation): in file ('django/db/backends/sqlite3', 'schema.py') is added
Function +def as_sql(self): in file ('django/db/backends/mysql', 'compiler.py') is modified
Function +def as_sql(self): in file ('django/db/backends/mysql', 'compiler.py') is modified
Function  def _clone_test_db(self, suffix, verbosity, keepdb=False): in file ('django/db/backends/mysql', 'creation.py') is modified
Function  def _clone_db(self, source_database_name, target_database_name): in file ('django/db/backends/mysql', 'creation.py') is modified
Function -def settings_to_cmd_args(cls, settings_dict): in file ('django/db/backends/mysql', 'client.py') is modified
Function +def settings_to_cmd_args_env(cls, settings_dict, parameters): in file ('django/db/backends/mysql', 'client.py') is modified
Function -def runshell(self): in file ('django/db/backends/mysql', 'client.py') is modified
Function +def django_test_skips(self): in file ('django/db/backends/mysql', 'features.py') is added
Function  def _mysql_storage_engine(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function +def allows_auto_pk_0(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def update_can_self_select(self): in file ('django/db/backends/mysql', 'features.py') is added
Function  def can_introspect_foreign_keys(self): in file ('django/db/backends/mysql', 'features.py') is modified
Function +def introspected_field_types(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def can_return_columns_from_insert(self): in file ('django/db/backends/mysql', 'features.py') is added
Function  def has_zoneinfo_database(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function  def is_sql_auto_is_null_enabled(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function +def supports_column_check_constraints(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def can_introspect_check_constraints(self): in file ('django/db/backends/mysql', 'features.py') is added
Function -def needs_explain_extended(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function +def has_select_for_update_nowait(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def has_select_for_update_of(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def supports_explain_analyze(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def supported_explain_formats(self): in file ('django/db/backends/mysql', 'features.py') is added
Function  def supports_transactions(self): in file ('django/db/backends/mysql', 'features.py') is modified
Function  def ignores_table_name_case(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function  def supports_default_in_lead_lag(self): in file ('django/db/backends/mysql', 'features.py') is deleted
Function +def supports_json_field(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def can_introspect_json_field(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def supports_index_column_ordering(self): in file ('django/db/backends/mysql', 'features.py') is added
Function +def supports_expression_indexes(self): in file ('django/db/backends/mysql', 'features.py') is added
Function -def date_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def date_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def _prepare_tzname_delta(self, tzname): in file ('django/db/backends/mysql', 'operations.py') is added
Function  def _convert_field_to_tz(self, field_name, tzname): in file ('django/db/backends/mysql', 'operations.py') is modified
Function  def datetime_cast_date_sql(self, field_name, tzname): in file ('django/db/backends/mysql', 'operations.py') is modified
Function -def time_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def time_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/mysql', 'operations.py') is modified
Function -def date_interval_sql(self, timedelta): in file ('django/db/backends/mysql', 'operations.py') is deleted
Function +def fetch_returned_insert_rows(self, cursor): in file ('django/db/backends/mysql', 'operations.py') is added
Function +def adapt_decimalfield_value(self, value, max_digits=None, decimal_places=None): in file ('django/db/backends/mysql', 'operations.py') is added
Function  def last_executed_query(self, cursor, sql, params): in file ('django/db/backends/mysql', 'operations.py') is deleted
Function  def no_limit_value(self): in file ('django/db/backends/mysql', 'operations.py') is modified
Function -def random_function_sql(self): in file ('django/db/backends/mysql', 'operations.py') is deleted
Function -def sql_flush(self, style, tables, sequences, allow_cascade=False): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def return_insert_columns(self, fields): in file ('django/db/backends/mysql', 'operations.py') is added
Function +def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False): in file ('django/db/backends/mysql', 'operations.py') is added
Function +def sequence_reset_by_name_sql(self, style, sequences): in file ('django/db/backends/mysql', 'operations.py') is added
Function  def validate_autopk_value(self, value): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def pk_default_value(self): in file ('django/db/backends/mysql', 'operations.py') is added
Function  def bulk_insert_sql(self, fields, placeholder_rows): in file ('django/db/backends/mysql', 'operations.py') is modified
Function  def explain_query_prefix(self, format=None, **options): in file ('django/db/backends/mysql', 'operations.py') is modified
Function  def regex_lookup(self, lookup_type): in file ('django/db/backends/mysql', 'operations.py') is modified
Function +def lookup_cast(self, lookup_type, internal_type=None): in file ('django/db/backends/mysql', 'operations.py') is added
Function  def get_table_list(self, cursor): in file ('django/db/backends/mysql', 'introspection.py') is modified
Function +def _parse_constraint_columns(self, check_clause, columns): in file ('django/db/backends/mysql', 'introspection.py') is modified
Function  def get_constraints(self, cursor, table_name): in file ('django/db/backends/mysql', 'introspection.py') is modified
Function  def __init__(self, cursor): in file ('django/db/backends/mysql', 'base.py') is modified
Function  def executemany(self, query, args): in file ('django/db/backends/mysql', 'base.py') is modified
Function  def __getattr__(self, attr): in file ('django/db/backends/mysql', 'base.py') is modified
Function  def init_connection_state(self): in file ('django/db/backends/mysql', 'base.py') is modified
Function  def enable_constraint_checking(self): in file ('django/db/backends/mysql', 'base.py') is modified
Function +def display_name(self): in file ('django/db/backends/mysql', 'base.py') is added
Function +def data_type_check_constraints(self): in file ('django/db/backends/mysql', 'base.py') is added
Function +def mysql_server_data(self): in file ('django/db/backends/mysql', 'base.py') is added
Function  def mysql_server_info(self): in file ('django/db/backends/mysql', 'base.py') is deleted
Function  def mysql_version(self): in file ('django/db/backends/mysql', 'base.py') is modified
Function  def mysql_is_mariadb(self): in file ('django/db/backends/mysql', 'base.py') is deleted
Function +def sql_mode(self): in file ('django/db/backends/mysql', 'base.py') is added
Function +def sql_delete_check(self): in file ('django/db/backends/mysql', 'schema.py') is added
Function +def sql_rename_column(self): in file ('django/db/backends/mysql', 'schema.py') is added
Function  def quote_value(self, value): in file ('django/db/backends/mysql', 'schema.py') is modified
Function +def skip_default_on_alter(self, field): in file ('django/db/backends/mysql', 'schema.py') is added
Function +def _supports_limited_data_type_defaults(self): in file ('django/db/backends/mysql', 'schema.py') is added
Function +def _column_default_sql(self, field): in file ('django/db/backends/mysql', 'schema.py') is added
Function  def add_field(self, model, field): in file ('django/db/backends/mysql', 'schema.py') is modified
Function  def _check_sql_mode(self, **kwargs): in file ('django/db/backends/mysql', 'validation.py') is modified
Function  def __init__(self, connection): in file ('django/db/backends/base', 'creation.py') is deleted
Function -def _nodb_connection(self): in file ('django/db/backends/base', 'creation.py') is deleted
Function +def _nodb_cursor(self): in file ('django/db/backends/base', 'creation.py') is added
Function  def log(self, msg): in file ('django/db/backends/base', 'creation.py') is modified
Function  def set_as_test_mirror(self, primary_settings_dict): in file ('django/db/backends/base', 'creation.py') is modified
Function  def get_objects(): in file ('django/db/backends/base', 'creation.py') is modified
Function  def _get_database_display_str(self, verbosity, database_name): in file ('django/db/backends/base', 'creation.py') is modified
Function +def mark_expected_failures_and_skips(self): in file ('django/db/backends/base', 'creation.py') is added
Function -def runshell(self): in file ('django/db/backends/base', 'client.py') is modified
Function +def settings_to_cmd_args_env(cls, settings_dict, parameters): in file ('django/db/backends/base', 'client.py') is added
Function +def runshell(self, parameters): in file ('django/db/backends/base', 'client.py') is added
Function  def __init__(self, connection): in file ('django/db/backends/base', 'features.py') is modified
Function +def allows_group_by_selected_pks_on_model(self, model): in file ('django/db/backends/base', 'features.py') is added
Function  def __init__(self, connection): in file ('django/db/backends/base', 'operations.py') is modified
Function -def date_interval_sql(self, timedelta): in file ('django/db/backends/base', 'operations.py') is modified
Function -def date_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/base', 'operations.py') is modified
Function +def date_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/base', 'operations.py') is added
Function -def time_trunc_sql(self, lookup_type, field_name): in file ('django/db/backends/base', 'operations.py') is modified
Function +def time_trunc_sql(self, lookup_type, field_name, tzname=None): in file ('django/db/backends/base', 'operations.py') is added
Function -def fetch_returned_insert_id(self, cursor): in file ('django/db/backends/base', 'operations.py') is modified
Function +def fetch_returned_insert_columns(self, cursor, returning_params): in file ('django/db/backends/base', 'operations.py') is added
Function  def field_cast_sql(self, db_type, internal_type): in file ('django/db/backends/base', 'operations.py') is modified
Function -def for_update_sql(self, nowait=False, skip_locked=False, of=()): in file ('django/db/backends/base', 'operations.py') is modified
Function +def for_update_sql(self, nowait=False, skip_locked=False, of=(), no_key=False): in file ('django/db/backends/base', 'operations.py') is added
Function  def last_executed_query(self, cursor, sql, params): in file ('django/db/backends/base', 'operations.py') is modified
Function -def return_insert_id(self): in file ('django/db/backends/base', 'operations.py') is deleted
Function +def return_insert_columns(self, fields): in file ('django/db/backends/base', 'operations.py') is added
Function -def random_function_sql(self): in file ('django/db/backends/base', 'operations.py') is deleted
Function  def regex_lookup(self, lookup_type): in file ('django/db/backends/base', 'operations.py') is modified
Function -def sql_flush(self, style, tables, sequences, allow_cascade=False): in file ('django/db/backends/base', 'operations.py') is modified
Function +def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False): in file ('django/db/backends/base', 'operations.py') is modified
Function -def execute_sql_flush(self, using, sql_list): in file ('django/db/backends/base', 'operations.py') is modified
Function +def execute_sql_flush(self, sql_list): in file ('django/db/backends/base', 'operations.py') is modified
Function +def conditional_expression_supported_in_where_clause(self, expression): in file ('django/db/backends/base', 'operations.py') is added
Function  def combine_expression(self, connector, sub_expressions): in file ('django/db/backends/base', 'operations.py') is modified
Function  def window_frame_start(self, start): in file ('django/db/backends/base', 'operations.py') is modified
Function +def get_table_description(self, cursor, table_name): in file ('django/db/backends/base', 'introspection.py') is modified
Function +def get_migratable_models(self): in file ('django/db/backends/base', 'introspection.py') is added
Function  def django_table_names(self, only_existing=False, include_views=True): in file ('django/db/backends/base', 'introspection.py') is modified
Function  def get_sequences(self, cursor, table_name, table_fields=()): in file ('django/db/backends/base', 'introspection.py') is modified
Function +def get_relations(self, cursor, table_name): in file ('django/db/backends/base', 'introspection.py') is added
Function  def timezone(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def connect(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def check_settings(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def ensure_connection(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def commit(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def rollback(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def close(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def savepoint(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def savepoint_rollback(self, sid): in file ('django/db/backends/base', 'base.py') is modified
Function  def savepoint_commit(self, sid): in file ('django/db/backends/base', 'base.py') is modified
Function  def clean_savepoints(self): in file ('django/db/backends/base', 'base.py') is modified
Function -def _nodb_connection(self): in file ('django/db/backends/base', 'base.py') is deleted
Function +def _nodb_cursor(self): in file ('django/db/backends/base', 'base.py') is modified
Function  def schema_editor(self, *args, **kwargs): in file ('django/db/backends/base', 'base.py') is modified
Function  def on_commit(self, func): in file ('django/db/backends/base', 'base.py') is added
Function +def _all_related_fields(model): in file ('django/db/backends/base', 'schema.py') is added
Function +def table_sql(self, model): in file ('django/db/backends/base', 'schema.py') is added
Function  def column_sql(self, model, field, include_default=False): in file ('django/db/backends/base', 'schema.py') is modified
Function +def skip_default_on_alter(self, field): in file ('django/db/backends/base', 'schema.py') is added
Function  def prepare_default(self, value): in file ('django/db/backends/base', 'schema.py') is modified
Function +def _column_default_sql(self, field): in file ('django/db/backends/base', 'schema.py') is added
Function  def _effective_default(field): in file ('django/db/backends/base', 'schema.py') is modified
Function  def add_index(self, model, index): in file ('django/db/backends/base', 'schema.py') is added
Function  def remove_index(self, model, index): in file ('django/db/backends/base', 'schema.py') is added
Function  def add_constraint(self, model, constraint): in file ('django/db/backends/base', 'schema.py') is modified
Function  def remove_constraint(self, model, constraint): in file ('django/db/backends/base', 'schema.py') is modified
Function  def _delete_composed_index(self, model, fields, constraint_kwargs, sql): in file ('django/db/backends/base', 'schema.py') is modified
Function +def _alter_column_collation_sql(self, model, new_field, new_type, new_collation): in file ('django/db/backends/base', 'schema.py') is added
Function +def _index_condition_sql(self, condition): in file ('django/db/backends/base', 'schema.py') is added
Function +def _index_include_sql(self, model, columns): in file ('django/db/backends/base', 'schema.py') is added
Function -def _delete_index_sql(self, model, name): in file ('django/db/backends/base', 'schema.py') is modified
Function +def _delete_index_sql(self, model, name, sql=None): in file ('django/db/backends/base', 'schema.py') is added
Function  def _field_indexes_sql(self, model, field): in file ('django/db/backends/base', 'schema.py') is modified
Function +def _field_should_be_altered(self, old_field, new_field): in file ('django/db/backends/base', 'schema.py') is modified
Function  def _create_fk_sql(self, model, field, suffix): in file ('django/db/backends/base', 'schema.py') is deleted
Function -def create_fk_name(*args, **kwargs): in file ('django/db/backends/base', 'schema.py') is deleted
Function +def _fk_constraint_name(self, model, field, suffix): in file ('django/db/backends/base', 'schema.py') is added
Function +def create_fk_name(*args, **kwargs): in file ('django/db/backends/base', 'schema.py') is added
Function -def _unique_sql(self, model, fields, name, condition=None): in file ('django/db/backends/base', 'schema.py') is modified
Function +def _deferrable_constraint_sql(self, deferrable): in file ('django/db/backends/base', 'schema.py') is added
Function -def _create_unique_sql(self, model, columns, name=None, condition=None): in file ('django/db/backends/base', 'schema.py') is modified
Function -def _delete_unique_sql(self, model, name, condition=None): in file ('django/db/backends/base', 'schema.py') is deleted
Function +def _collate_sql(self, collation): in file ('django/db/backends/base', 'schema.py') is added
Function +def _format_names_with_class(self, cls, objs): in file ('django/db/models', 'options.py') is added
Function +def _get_default_pk_class(self): in file ('django/db/models', 'options.py') is added
Function  def _prepare(self, model): in file ('django/db/models', 'options.py') is modified
Function  def add_manager(self, manager): in file ('django/db/models', 'options.py') is modified
Function  def can_migrate(self, connection): in file ('django/db/models', 'options.py') is modified
Function +def total_unique_constraints(self): in file ('django/db/models', 'options.py') is added
Function  def _property_names(self): in file ('django/db/models', 'options.py') is modified
Function +def db_returning_fields(self): in file ('django/db/models', 'options.py') is added
Function -def create_namedtuple_class(*names): in file ('django/db/models', 'query.py') is deleted
Function  def __iter__(self): in file ('django/db/models', 'query.py') is modified
Function +def query(self): in file ('django/db/models', 'query.py') is added
Function +def query(self, value): in file ('django/db/models', 'query.py') is modified
Function  def as_manager(cls): in file ('django/db/models', 'query.py') is modified
Function  def __setstate__(self, state): in file ('django/db/models', 'query.py') is modified
Function  def __repr__(self): in file ('django/db/models', 'query.py') is modified
Function  def __getitem__(self, k): in file ('django/db/models', 'query.py') is modified
Function +def __class_getitem__(cls, *args, **kwargs): in file ('django/db/models', 'query.py') is added
Function  def __and__(self, other): in file ('django/db/models', 'query.py') is modified
Function  def count(self): in file ('django/db/models', 'query.py') is modified
Function  def create(self, **kwargs): in file ('django/db/models', 'query.py') is modified
Function -def _populate_pk_values(self, objs): in file ('django/db/models', 'query.py') is modified
Function +def _prepare_for_bulk_create(self, objs): in file ('django/db/models', 'query.py') is added
Function  def update_or_create(self, defaults=None, **kwargs): in file ('django/db/models', 'query.py') is modified
Function -def _create_object_from_params(self, lookup, params, lock=False): in file ('django/db/models', 'query.py') is deleted
Function  def _extract_model_params(self, defaults, **kwargs): in file ('django/db/models', 'query.py') is modified
Function -def _earliest(self, *fields, field_name=None): in file ('django/db/models', 'query.py') is modified
Function +def _earliest(self, *fields): in file ('django/db/models', 'query.py') is modified
Function -def earliest(self, *fields, field_name=None): in file ('django/db/models', 'query.py') is deleted
Function -def latest(self, *fields, field_name=None): in file ('django/db/models', 'query.py') is deleted
Function +def earliest(self, *fields): in file ('django/db/models', 'query.py') is added
Function +def latest(self, *fields): in file ('django/db/models', 'query.py') is added
Function  def first(self): in file ('django/db/models', 'query.py') is modified
Function  def delete(self): in file ('django/db/models', 'query.py') is modified
Function  def update(self, **kwargs): in file ('django/db/models', 'query.py') is modified
Function -def raw(self, raw_query, params=None, translations=None, using=None): in file ('django/db/models', 'query.py') is modified
Function +def raw(self, raw_query, params=(), translations=None, using=None): in file ('django/db/models', 'query.py') is modified
Function -def datetimes(self, field_name, kind, order='ASC', tzinfo=None): in file ('django/db/models', 'query.py') is modified
Function +def datetimes(self, field_name, kind, order='ASC', tzinfo=None, is_dst=None): in file ('django/db/models', 'query.py') is modified
Function -def _filter_or_exclude(self, negate, *args, **kwargs): in file ('django/db/models', 'query.py') is modified
Function +def _filter_or_exclude(self, negate, args, kwargs): in file ('django/db/models', 'query.py') is modified
Function +def _filter_or_exclude_inplace(self, negate, args, kwargs): in file ('django/db/models', 'query.py') is modified
Function  def complex_filter(self, filter_obj): in file ('django/db/models', 'query.py') is modified
Function  def _combinator_query(self, combinator, *other_qs, all=False): in file ('django/db/models', 'query.py') is modified
Function  def intersection(self, *other_qs): in file ('django/db/models', 'query.py') is modified
Function -def select_for_update(self, nowait=False, skip_locked=False, of=()): in file ('django/db/models', 'query.py') is modified
Function +def select_for_update(self, nowait=False, skip_locked=False, of=(), no_key=False): in file ('django/db/models', 'query.py') is modified
Function  def select_related(self, *fields): in file ('django/db/models', 'query.py') is modified
Function +def alias(self, *args, **kwargs): in file ('django/db/models', 'query.py') is added
Function +def _annotate(self, args, kwargs, select=True): in file ('django/db/models', 'query.py') is modified
Function  def order_by(self, *field_names): in file ('django/db/models', 'query.py') is modified
Function  def reverse(self): in file ('django/db/models', 'query.py') is modified
Function -def _insert(self, objs, fields, return_id=False, raw=False, using=None, ignore_conflicts=False): in file ('django/db/models', 'query.py') is modified
Function +def _insert(self, objs, fields, returning_fields=None, raw=False, using=None, ignore_conflicts=False): in file ('django/db/models', 'query.py') is modified
Function  def _chain(self, **kwargs): in file ('django/db/models', 'query.py') is modified
Function +def _not_support_combined_queries(self, operation_name): in file ('django/db/models', 'query.py') is modified
Function  def __instancecheck__(self, instance): in file ('django/db/models', 'query.py') is modified
Function +def has_to_attr_attribute(instance): in file ('django/db/models', 'query.py') is added
Function +def has_cached_property(instance): in file ('django/db/models', 'query.py') is added
Function +def in_prefetched_cache(instance): in file ('django/db/models', 'query.py') is added
Function  def _combine(self, other, connector, reversed): in file ('django/db/models', 'expressions.py') is modified
Function  def __and__(self, other): in file ('django/db/models', 'expressions.py') is added
Function +def bitxor(self, other): in file ('django/db/models', 'expressions.py') is added
Function  def __or__(self, other): in file ('django/db/models', 'expressions.py') is added
Function -def _prepare(self, field): in file ('django/db/models', 'expressions.py') is deleted
Function +def conditional(self): in file ('django/db/models', 'expressions.py') is added
Function  def field(self): in file ('django/db/models', 'expressions.py') is modified
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function +def select_format(self, compiler, sql, params): in file ('django/db/models', 'expressions.py') is added
Function  def identity(self): in file ('django/db/models', 'expressions.py') is modified
Function +def _resolve_combined_type(connector, lhs_type, rhs_type): in file ('django/db/models', 'expressions.py') is added
Function  def set_source_expressions(self, exprs): in file ('django/db/models', 'expressions.py') is added
Function +def _resolve_output_field(self): in file ('django/db/models', 'expressions.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/db/models', 'expressions.py') is added
Function  def compile(self, side, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def __init__(self, name): in file ('django/db/models', 'expressions.py') is modified
Function  def as_sql(self, *args, **kwargs): in file ('django/db/models', 'expressions.py') is deleted
Function -def _prepare(self, output_field=None): in file ('django/db/models', 'expressions.py') is deleted
Function +def resolve_expression(self, *args, **kwargs): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function +def resolve_expression(self, *args, **kwargs): in file ('django/db/models', 'expressions.py') is modified
Function -def _prepare(self, output_field=None): in file ('django/db/models', 'expressions.py') is deleted
Function +def relabeled_clone(self, relabels): in file ('django/db/models', 'expressions.py') is added
Function  def __init__(self, value, output_field=None): in file ('django/db/models', 'expressions.py') is modified
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function -def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function +def _resolve_output_field(self): in file ('django/db/models', 'expressions.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function +def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/db/models', 'expressions.py') is added
Function -def __repr__(self): in file ('django/db/models', 'expressions.py') is deleted
Function -def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def __init__(self, alias, target, output_field=None): in file ('django/db/models', 'expressions.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function  def get_db_converters(self, connection): in file ('django/db/models', 'expressions.py') is modified
Function -def __init__(self, target, output_field=None): in file ('django/db/models', 'expressions.py') is deleted
Function -def __repr__(self): in file ('django/db/models', 'expressions.py') is deleted
Function -def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function -def get_db_converters(self, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function +def as_sqlite(self, compiler, connection, **extra_context): in file ('django/db/models', 'expressions.py') is added
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function  def __init__(self, condition=None, then=None, **lookups): in file ('django/db/models', 'expressions.py') is modified
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function  def __init__(self, queryset, output_field=None, **extra): in file ('django/db/models', 'expressions.py') is modified
Function +def get_source_expressions(self): in file ('django/db/models', 'expressions.py') is added
Function +def set_source_expressions(self, exprs): in file ('django/db/models', 'expressions.py') is modified
Function  def _resolve_output_field(self): in file ('django/db/models', 'expressions.py') is deleted
Function -def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/db/models', 'expressions.py') is deleted
Function -def resolve_all(child): in file ('django/db/models', 'expressions.py') is deleted
Function -def resolve(child): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_source_expressions(self): in file ('django/db/models', 'expressions.py') is deleted
Function -def relabeled_clone(self, change_map): in file ('django/db/models', 'expressions.py') is deleted
Function -def as_sql(self, compiler, connection, template=None, **extra_context): in file ('django/db/models', 'expressions.py') is modified
Function +def external_aliases(self): in file ('django/db/models', 'expressions.py') is added
Function +def get_external_cols(self): in file ('django/db/models', 'expressions.py') is added
Function +def as_sql(self, compiler, connection, template=None, query=None, **extra_context): in file ('django/db/models', 'expressions.py') is modified
Function -def _prepare(self, output_field): in file ('django/db/models', 'expressions.py') is deleted
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function -def __init__(self, *args, negated=False, **kwargs): in file ('django/db/models', 'expressions.py') is modified
Function +def __init__(self, queryset, negated=False, **kwargs): in file ('django/db/models', 'expressions.py') is modified
Function -def resolve_expression(self, query=None, *args, **kwargs): in file ('django/db/models', 'expressions.py') is deleted
Function  def as_sql(self, compiler, connection, template=None, **extra_context): in file ('django/db/models', 'expressions.py') is modified
Function -def as_oracle(self, compiler, connection, template=None, **extra_context): in file ('django/db/models', 'expressions.py') is modified
Function +def select_format(self, compiler, sql, params): in file ('django/db/models', 'expressions.py') is added
Function  def __init__(self, expression, descending=False, nulls_first=False, nulls_last=False): in file ('django/db/models', 'expressions.py') is modified
Function  def as_sql(self, compiler, connection, template=None, **extra_context): in file ('django/db/models', 'expressions.py') is modified
Function -def as_sqlite(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def as_mysql(self, compiler, connection): in file ('django/db/models', 'expressions.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def as_oracle(self, compiler, connection): in file ('django/db/models', 'expressions.py') is added
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function  def as_sql(self, compiler, connection, template=None): in file ('django/db/models', 'expressions.py') is modified
Function +def as_sqlite(self, compiler, connection): in file ('django/db/models', 'expressions.py') is added
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function -def get_group_by_cols(self): in file ('django/db/models', 'expressions.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'expressions.py') is added
Function  def get_prep_lookup(self): in file ('django/db/models', 'lookups.py') is deleted
Function -def get_group_by_cols(self): in file ('django/db/models', 'lookups.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'lookups.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function +def as_oracle(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function +def identity(self): in file ('django/db/models', 'lookups.py') is added
Function +def __eq__(self, other): in file ('django/db/models', 'lookups.py') is added
Function +def __hash__(self): in file ('django/db/models', 'lookups.py') is added
Function  def get_db_prep_lookup(self, value, connection): in file ('django/db/models', 'lookups.py') is modified
Function  def get_prep_lookup(self): in file ('django/db/models', 'lookups.py') is deleted
Function  def batch_process_rhs(self, compiler, connection, rhs=None): in file ('django/db/models', 'lookups.py') is modified
Function +def as_postgresql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function +def as_sql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is added
Function -def get_rhs_op(self, connection, rhs): in file ('django/db/models', 'lookups.py') is modified
Function +def get_direct_rhs_sql(self, connection, rhs): in file ('django/db/models', 'lookups.py') is added
Function -def get_bound(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function -def as_sql(self, compiler, connection): in file ('django/db/models', 'lookups.py') is deleted
Function -def get_bound(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function -def get_bound(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function -def get_bound(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function -def get_bound(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_direct_rhs_sql(self, connection, rhs): in file ('django/db/models', 'lookups.py') is added
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def get_bound_params(self, start, finish): in file ('django/db/models', 'lookups.py') is modified
Function +def process_rhs(self, qn, connection): in file ('django/db/models', 'lookups.py') is modified
Function -def __init__(self, *, fields=(), name=None, db_tablespace=None, opclasses=(), condition=None): in file ('django/db/models', 'indexes.py') is modified
Function -def check_name(self): in file ('django/db/models', 'indexes.py') is deleted
Function +def contains_expressions(self): in file ('django/db/models', 'indexes.py') is added
Function -def create_sql(self, model, schema_editor, using=''): in file ('django/db/models', 'indexes.py') is modified
Function +def create_sql(self, model, schema_editor, using='', **kwargs): in file ('django/db/models', 'indexes.py') is added
Function -def remove_sql(self, model, schema_editor): in file ('django/db/models', 'indexes.py') is deleted
Function +def remove_sql(self, model, schema_editor, **kwargs): in file ('django/db/models', 'indexes.py') is added
Function  def deconstruct(self): in file ('django/db/models', 'indexes.py') is modified
Function  def clone(self): in file ('django/db/models', 'indexes.py') is deleted
Function  def set_name_with_model(self, model): in file ('django/db/models', 'indexes.py') is modified
Function +def set_wrapper_classes(self, connection=None): in file ('django/db/models', 'indexes.py') is modified
Function +def register_wrappers(cls, *wrapper_classes): in file ('django/db/models', 'indexes.py') is modified
Function +def as_sqlite(self, compiler, connection, **extra_context): in file ('django/db/models', 'indexes.py') is added
Function +def resolve_callables(mapping): in file ('django/db/models', 'utils.py') is added
Function +def unpickle_named_row(names, values): in file ('django/db/models', 'utils.py') is added
Function +def create_namedtuple_class(*names): in file ('django/db/models', 'utils.py') is added
Function +def __reduce__(self): in file ('django/db/models', 'utils.py') is added
Function -def get_group_by_cols(self): in file ('django/db/models', 'aggregates.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models', 'aggregates.py') is added
Function  def as_sql(self, compiler, connection, **extra_context): in file ('django/db/models', 'aggregates.py') is modified
Function +def __init__(self, msg, restricted_objects): in file ('django/db/models', 'deletion.py') is modified
Function  def CASCADE(collector, field, sub_objs, using): in file ('django/db/models', 'deletion.py') is modified
Function +def RESTRICT(collector, field, sub_objs, using): in file ('django/db/models', 'deletion.py') is modified
Function  def SET(value): in file ('django/db/models', 'deletion.py') is modified
Function  def __init__(self, using): in file ('django/db/models', 'deletion.py') is modified
Function  def add(self, objs, source=None, nullable=False, reverse_dependency=False): in file ('django/db/models', 'deletion.py') is modified
Function +def add_dependency(self, model, dependency, reverse_dependency=False): in file ('django/db/models', 'deletion.py') is modified
Function  def add_field_update(self, field, value, objs): in file ('django/db/models', 'deletion.py') is modified
Function +def add_restricted_objects(self, field, objs): in file ('django/db/models', 'deletion.py') is modified
Function +def clear_restricted_objects_from_set(self, model, objs): in file ('django/db/models', 'deletion.py') is modified
Function +def clear_restricted_objects_from_queryset(self, model, qs): in file ('django/db/models', 'deletion.py') is added
Function +def _has_signal_listeners(self, model): in file ('django/db/models', 'deletion.py') is added
Function  def can_fast_delete(self, objs, from_field=None): in file ('django/db/models', 'deletion.py') is modified
Function -def get_del_batches(self, objs, field): in file ('django/db/models', 'deletion.py') is modified
Function +def get_del_batches(self, objs, fields): in file ('django/db/models', 'deletion.py') is modified
Function -def related_objects(self, related, objs): in file ('django/db/models', 'deletion.py') is deleted
Function +def related_objects(self, related_model, related_fields, objs): in file ('django/db/models', 'deletion.py') is added
Function  def instances_with_model(self): in file ('django/db/models', 'deletion.py') is modified
Function  def delete(self): in file ('django/db/models', 'deletion.py') is modified
Function  def __init__(self, *, check, name): in file ('django/db/models', 'constraints.py') is modified
Function  def _get_check_sql(self, model, schema_editor): in file ('django/db/models', 'constraints.py') is modified
Function  def deconstruct(self): in file ('django/db/models', 'constraints.py') is modified
Function -def __init__(self, *, fields, name, condition=None): in file ('django/db/models', 'constraints.py') is modified
Function  def constraint_sql(self, model, schema_editor): in file ('django/db/models', 'constraints.py') is added
Function  def create_sql(self, model, schema_editor): in file ('django/db/models', 'constraints.py') is added
Function  def deconstruct(self): in file ('django/db/models', 'constraints.py') is modified
Function +def __class_getitem__(cls, *args, **kwargs): in file ('django/db/models', 'manager.py') is added
Function  def deconstruct(self): in file ('django/db/models', 'manager.py') is modified
Function -def contribute_to_class(self, model, name): in file ('django/db/models', 'manager.py') is modified
Function +def contribute_to_class(self, cls, name): in file ('django/db/models', 'manager.py') is modified
Function  def _set_creation_counter(self): in file ('django/db/models', 'manager.py') is modified
Function +def _subclasses(self): in file ('django/db/models', 'query_utils.py') is added
Function +def __warn(self): in file ('django/db/models', 'query_utils.py') is added
Function +def __instancecheck__(self, instance): in file ('django/db/models', 'query_utils.py') is added
Function +def __subclasscheck__(self, subclass): in file ('django/db/models', 'query_utils.py') is added
Function -def __init__(self, sql, params): in file ('django/db/models', 'query_utils.py') is deleted
Function -def as_sql(self, compiler=None, connection=None): in file ('django/db/models', 'query_utils.py') is deleted
Function  def _combine(self, other, conn): in file ('django/db/models', 'query_utils.py') is modified
Function  def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False): in file ('django/db/models', 'query_utils.py') is modified
Function -def __init__(self, field_name): in file ('django/db/models', 'query_utils.py') is modified
Function +def __init__(self, field): in file ('django/db/models', 'query_utils.py') is modified
Function  def __get__(self, instance, cls=None): in file ('django/db/models', 'query_utils.py') is modified
Function -def _check_parent_chain(self, instance, name): in file ('django/db/models', 'query_utils.py') is modified
Function +def _check_parent_chain(self, instance): in file ('django/db/models', 'query_utils.py') is modified
Function  def __eq__(self, other): in file ('django/db/models', 'query_utils.py') is added
Function  def __reduce__(self): in file ('django/db/models', 'base.py') is modified
Function  def __setstate__(self, state): in file ('django/db/models', 'base.py') is modified
Function  def _get_pk_val(self, meta=None): in file ('django/db/models', 'base.py') is modified
Function  def _set_pk_val(self, value): in file ('django/db/models', 'base.py') is added
Function  def _do_update(self, base_qs, using, pk_val, values, update_fields, forced_update): in file ('django/db/models', 'base.py') is modified
Function -def _do_insert(self, manager, using, fields, update_pk, raw): in file ('django/db/models', 'base.py') is deleted
Function +def _do_insert(self, manager, using, fields, returning_fields, raw): in file ('django/db/models', 'base.py') is added
Function +def _prepare_related_fields_for_save(self, operation_name): in file ('django/db/models', 'base.py') is modified
Function  def delete(self, using=None, keep_parents=False): in file ('django/db/models', 'base.py') is modified
Function  def _get_FIELD_display(self, field): in file ('django/db/models', 'base.py') is added
Function  def _get_next_or_previous_by_FIELD(self, field, is_next, **kwargs): in file ('django/db/models', 'base.py') is modified
Function  def check(cls, **kwargs): in file ('django/db/models', 'base.py') is modified
Function +def _check_default_pk(cls): in file ('django/db/models', 'base.py') is added
Function  def _check_swappable(cls): in file ('django/db/models', 'base.py') is modified
Function -def _check_indexes(cls): in file ('django/db/models', 'base.py') is modified
Function +def _check_indexes(cls, databases): in file ('django/db/models', 'base.py') is modified
Function  def _check_local_fields(cls, fields, option): in file ('django/db/models', 'base.py') is modified
Function -def _check_long_column_names(cls): in file ('django/db/models', 'base.py') is modified
Function +def _check_long_column_names(cls, databases): in file ('django/db/models', 'base.py') is modified
Function -def _check_constraints(cls): in file ('django/db/models', 'base.py') is modified
Function +def _get_expr_references(cls, expr): in file ('django/db/models', 'base.py') is modified
Function +def _check_constraints(cls, databases): in file ('django/db/models', 'base.py') is modified
Function  def _resolve_output_field(self): in file ('django/db/models/functions', 'mixins.py') is modified
Function  def as_mysql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is modified
Function -def as_postgresql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is deleted
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is added
Function +def __init__(self, expression, collation): in file ('django/db/models/functions', 'comparison.py') is added
Function +def as_sql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is added
Function +def __init__(self, **fields): in file ('django/db/models/functions', 'comparison.py') is added
Function +def as_sql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is added
Function +def as_postgresql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is added
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'comparison.py') is added
Function +def join(self, args): in file ('django/db/models/functions', 'comparison.py') is added
Function -def convert_value(self, value, expression, connection): in file ('django/db/models/functions', 'text.py') is deleted
Function +def as_mysql(self, compiler, connection, **extra_content): in file ('django/db/models/functions', 'text.py') is added
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'text.py') is added
Function +def as_postgresql(self, compiler, connection, **extra_content): in file ('django/db/models/functions', 'text.py') is added
Function  def __init__(self, expression, length, **extra): in file ('django/db/models/functions', 'text.py') is modified
Function  def __init__(self, expression, length, fill_text=Value(' '), **extra): in file ('django/db/models/functions', 'text.py') is modified
Function  def __init__(self, expression, number, **extra): in file ('django/db/models/functions', 'text.py') is modified
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'text.py') is added
Function  def as_sqlite(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'math.py') is modified
Function +def as_mysql(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'math.py') is added
Function +def as_oracle(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'math.py') is added
Function +def as_sqlite(self, compiler, connection, **extra_context): in file ('django/db/models/functions', 'math.py') is added
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models/functions', 'math.py') is added
Function  def as_sql(self, compiler, connection): in file ('django/db/models/functions', 'datetime.py') is modified
Function -def __init__(self, expression, output_field=None, tzinfo=None, **extra): in file ('django/db/models/functions', 'datetime.py') is modified
Function +def __init__(self, expression, output_field=None, tzinfo=None, is_dst=None, **extra): in file ('django/db/models/functions', 'datetime.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/db/models/functions', 'datetime.py') is modified
Function -def __init__(self, expression, kind, output_field=None, tzinfo=None, **extra): in file ('django/db/models/functions', 'datetime.py') is modified
Function +def __init__(self, expression, kind, output_field=None, tzinfo=None, is_dst=None, **extra): in file ('django/db/models/functions', 'datetime.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/db/models/functions', 'datetime.py') is modified
Function  def as_sql(self, compiler, connection): in file ('django/db/models/functions', 'datetime.py') is modified
Function +def __set__(self, instance, value): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def add(self, *objs, bulk=True): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def check_and_update_obj(obj): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def _remove_prefetched_objects(self): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function -def constrained_target(self): in file ('django/db/models/fields', 'related_descriptors.py') is deleted
Function -def exists(self): in file ('django/db/models/fields', 'related_descriptors.py') is deleted
Function -def count(self): in file ('django/db/models/fields', 'related_descriptors.py') is deleted
Function  def add(self, *objs, through_defaults=None): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def remove(self, *objs): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function +def _get_target_ids(self, target_field_name, objs): in file ('django/db/models/fields', 'related_descriptors.py') is added
Function +def _get_missing_target_ids(self, source_field_name, target_field_name, db, target_ids): in file ('django/db/models/fields', 'related_descriptors.py') is added
Function +def _get_add_plan(self, db, source_field_name): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def _add_items(self, source_field_name, target_field_name, *objs, through_defaults=None): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def _remove_items(self, source_field_name, target_field_name, *objs): in file ('django/db/models/fields', 'related_descriptors.py') is modified
Function  def save(self, name, content, save=True): in file ('django/db/models/fields', 'files.py') is modified
Function  def __getstate__(self): in file ('django/db/models/fields', 'files.py') is deleted
Function +def __setstate__(self, state): in file ('django/db/models/fields', 'files.py') is modified
Function -def __init__(self, field): in file ('django/db/models/fields', 'files.py') is deleted
Function  def __set__(self, instance, value): in file ('django/db/models/fields', 'files.py') is modified
Function  def get_internal_type(self): in file ('django/db/models/fields', 'files.py') is modified
Function  def contribute_to_class(self, cls, name, **kwargs): in file ('django/db/models/fields', 'files.py') is modified
Function  def generate_filename(self, instance, filename): in file ('django/db/models/fields', 'files.py') is modified
Function  def save_form_data(self, instance, data): in file ('django/db/models/fields', 'files.py') is modified
Function  def __set__(self, instance, value): in file ('django/db/models/fields', 'files.py') is modified
Function  def delete_cached_value(self, instance): in file ('django/db/models/fields', 'mixins.py') is added
Function +def _check_default(self): in file ('django/db/models/fields', 'mixins.py') is added
Function +def check(self, **kwargs): in file ('django/db/models/fields', 'mixins.py') is added
Function  def related_fields(self): in file ('django/db/models/fields', 'related.py') is deleted
Function  def check(self, **kwargs): in file ('django/db/models/fields', 'related.py') is modified
Function +def resolve_related_fields(self): in file ('django/db/models/fields', 'related.py') is added
Function +def get_prep_value(self, value): in file ('django/db/models/fields', 'related.py') is added
Function  def contribute_to_related_class(self, cls, related): in file ('django/db/models/fields', 'related.py') is modified
Function  def db_check(self, connection): in file ('django/db/models/fields', 'related.py') is modified
Function  def _check_unique(self, **kwargs): in file ('django/db/models/fields', 'related.py') is modified
Function  def _description(self): in file ('django/db/models/fields', '__init__.py') is modified
Function  def __repr__(self): in file ('django/db/models/fields', '__init__.py') is modified
Function +def _choices_is_value(cls, value): in file ('django/db/models/fields', '__init__.py') is added
Function -def is_value(value, accept_promise=True): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def _check_backend_specific_checks(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function +def _check_backend_specific_checks(self, databases=None, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function  def _check_validators(self): in file ('django/db/models/fields', '__init__.py') is modified
Function  def __lt__(self, other): in file ('django/db/models/fields', '__init__.py') is added
Function  def __deepcopy__(self, memodict): in file ('django/db/models/fields', '__init__.py') is modified
Function +def db_returning(self): in file ('django/db/models/fields', '__init__.py') is added
Function  def set_attributes_from_name(self, name): in file ('django/db/models/fields', '__init__.py') is modified
Function  def get_filter_kwargs_for_object(self, obj): in file ('django/db/models/fields', '__init__.py') is modified
Function  def value_to_string(self, obj): in file ('django/db/models/fields', '__init__.py') is modified
Function  def _get_flatchoices(self): in file ('django/db/models/fields', '__init__.py') is added
Function -def __init__(self, *args, **kwargs): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def check(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def _check_primary_key(self): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def deconstruct(self): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def to_python(self, value): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def validate(self, value, model_instance): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def get_db_prep_value(self, value, connection, prepared=False): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def get_prep_value(self, value): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def contribute_to_class(self, cls, name, **kwargs): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is deleted
Function -def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is deleted
Function  def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function -def __init__(self, *args, **kwargs): in file ('django/db/models/fields', '__init__.py') is deleted
Function +def __init__(self, *args, db_collation=None, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function  def check(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def _check_db_collation(self, databases): in file ('django/db/models/fields', '__init__.py') is added
Function  def cast_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is modified
Function +def deconstruct(self): in file ('django/db/models/fields', '__init__.py') is added
Function  def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function +def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is added
Function  def __init__(self, *args, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function +def __init_subclass__(cls, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function  def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is modified
Function  def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function +def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function -def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is deleted
Function +def __init__(self, *args, db_collation=None, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def check(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def _check_db_collation(self, databases): in file ('django/db/models/fields', '__init__.py') is added
Function +def deconstruct(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def check(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def _check_str_default_value(self): in file ('django/db/models/fields', '__init__.py') is added
Function  def deconstruct(self): in file ('django/db/models/fields', '__init__.py') is modified
Function +def get_prep_value(self, value): in file ('django/db/models/fields', '__init__.py') is added
Function  def get_db_prep_value(self, value, connection, prepared=False): in file ('django/db/models/fields', '__init__.py') is modified
Function +def __init__(self, *args, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def check(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def _check_primary_key(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def deconstruct(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def validate(self, value, model_instance): in file ('django/db/models/fields', '__init__.py') is added
Function +def get_db_prep_value(self, value, connection, prepared=False): in file ('django/db/models/fields', '__init__.py') is added
Function +def contribute_to_class(self, cls, name, **kwargs): in file ('django/db/models/fields', '__init__.py') is modified
Function +def formfield(self, **kwargs): in file ('django/db/models/fields', '__init__.py') is added
Function +def _subclasses(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def __instancecheck__(self, instance): in file ('django/db/models/fields', '__init__.py') is added
Function +def __subclasscheck__(self, subclass): in file ('django/db/models/fields', '__init__.py') is added
Function +def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is added
Function +def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is added
Function +def get_internal_type(self): in file ('django/db/models/fields', '__init__.py') is added
Function +def rel_db_type(self, connection): in file ('django/db/models/fields', '__init__.py') is added
Function -def get_choices(self, include_blank=True, blank_choice=BLANK_CHOICE_DASH, ordering=()): in file ('django/db/models/fields', 'reverse_related.py') is modified
Function +def identity(self): in file ('django/db/models/fields', 'reverse_related.py') is added
Function +def __eq__(self, other): in file ('django/db/models/fields', 'reverse_related.py') is added
Function +def __hash__(self): in file ('django/db/models/fields', 'reverse_related.py') is added
Function  def is_hidden(self): in file ('django/db/models/fields', 'reverse_related.py') is modified
Function +def identity(self): in file ('django/db/models/fields', 'reverse_related.py') is added
Function  def get_related_field(self): in file ('django/db/models/fields', 'reverse_related.py') is modified
Function +def identity(self): in file ('django/db/models/fields', 'reverse_related.py') is added
Function  def get_related_field(self): in file ('django/db/models/fields', 'reverse_related.py') is modified
Function  def get_prep_lookup(self): in file ('django/db/models/fields', 'related_lookups.py') is modified
Function  def __init__(self, query, connection, using): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def setup_query(self): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def collapse_group_by(self, expressions, having): in file ('django/db/models/sql', 'compiler.py') is modified
Function -def compile(self, node, select_format=False): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def compile(self, node): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def get_combinator_sql(self, combinator, all): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def local_setter(obj, from_obj): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def remote_setter(name, obj, from_obj): in file ('django/db/models/sql', 'compiler.py') is modified
Function -def local_setter(obj, from_obj): in file ('django/db/models/sql', 'compiler.py') is modified
Function -def remote_setter(obj, from_obj): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def _get_parent_klass_info(klass_info): in file ('django/db/models/sql', 'compiler.py') is added
Function +def _get_first_selected_col_from_model(klass_info): in file ('django/db/models/sql', 'compiler.py') is added
Function  def _get_field_choices(): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def apply_converters(self, rows, converters): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def execute_sql(self, result_type=MULTI, chunked_fetch=False, chunk_size=GET_ITERATOR_CHUNK_SIZE): in file ('django/db/models/sql', 'compiler.py') is modified
Function  def field_as_sql(self, field, val): in file ('django/db/models/sql', 'compiler.py') is modified
Function -def execute_sql(self, return_id=False): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def execute_sql(self, returning_fields=None): in file ('django/db/models/sql', 'compiler.py') is added
Function -def as_sql(self): in file ('django/db/models/sql', 'compiler.py') is modified
Function +def single_alias(self): in file ('django/db/models/sql', 'compiler.py') is added
Function +def _expr_refs_base_model(cls, expr, base_model): in file ('django/db/models/sql', 'compiler.py') is added
Function +def contains_self_reference_subquery(self): in file ('django/db/models/sql', 'compiler.py') is added
Function +def _as_sql(self, query): in file ('django/db/models/sql', 'compiler.py') is added
Function +def as_sql(self): in file ('django/db/models/sql', 'compiler.py') is added
Function  def get_field_names_from_opts(opts): in file ('django/db/models/sql', 'query.py') is modified
Function -def _get_col(target, field, alias, simple_col): in file ('django/db/models/sql', 'query.py') is deleted
Function -def __init__(self, sql, using, params=None): in file ('django/db/models/sql', 'query.py') is modified
Function +def __init__(self, sql, using, params=()): in file ('django/db/models/sql', 'query.py') is modified
Function  def params_type(self): in file ('django/db/models/sql', 'query.py') is added
Function  def __str__(self): in file ('django/db/models/sql', 'query.py') is added
Function  def _execute_query(self): in file ('django/db/models/sql', 'query.py') is modified
Function -def __init__(self, model, where=WhereNode): in file ('django/db/models/sql', 'query.py') is modified
Function +def __init__(self, model, where=WhereNode, alias_cols=True): in file ('django/db/models/sql', 'query.py') is modified
Function -def extra(self): in file ('django/db/models/sql', 'query.py') is deleted
Function -def annotations(self): in file ('django/db/models/sql', 'query.py') is deleted
Function +def output_field(self): in file ('django/db/models/sql', 'query.py') is added
Function  def has_select_fields(self): in file ('django/db/models/sql', 'query.py') is modified
Function -def _prepare(self, field): in file ('django/db/models/sql', 'query.py') is deleted
Function  def get_compiler(self, using=None, connection=None): in file ('django/db/models/sql', 'query.py') is modified
Function +def _get_col(self, target, field, alias): in file ('django/db/models/sql', 'query.py') is added
Function  def rewrite_cols(self, annotation, col_cnt): in file ('django/db/models/sql', 'query.py') is modified
Function -def has_results(self, using): in file ('django/db/models/sql', 'query.py') is modified
Function +def exists(self, using, limit=True): in file ('django/db/models/sql', 'query.py') is modified
Function +def has_results(self, using): in file ('django/db/models/sql', 'query.py') is added
Function  def explain(self, using, format=None, **options): in file ('django/db/models/sql', 'query.py') is modified
Function  def bump_prefix(self, outer_query): in file ('django/db/models/sql', 'query.py') is modified
Function  def get_initial_alias(self): in file ('django/db/models/sql', 'query.py') is modified
Function -def add_annotation(self, annotation, alias, is_summary=False): in file ('django/db/models/sql', 'query.py') is modified
Function +def check_alias(self, alias): in file ('django/db/models/sql', 'query.py') is modified
Function +def add_annotation(self, annotation, alias, is_summary=False, select=True): in file ('django/db/models/sql', 'query.py') is modified
Function  def resolve_expression(self, query, *args, **kwargs): in file ('django/db/models/sql', 'query.py') is modified
Function +def get_external_cols(self): in file ('django/db/models/sql', 'query.py') is added
Function -def resolve_lookup_value(self, value, can_reuse, allow_joins, simple_col): in file ('django/db/models/sql', 'query.py') is modified
Function +def resolve_lookup_value(self, value, can_reuse, allow_joins): in file ('django/db/models/sql', 'query.py') is modified
Function  def solve_lookup_type(self, lookup): in file ('django/db/models/sql', 'query.py') is modified
Function +def check_filterable(self, expression): in file ('django/db/models/sql', 'query.py') is modified
Function  def build_lookup(self, lookups, lhs, rhs): in file ('django/db/models/sql', 'query.py') is modified
Function  def add_filter(self, filter_clause): in file ('django/db/models/sql', 'query.py') is modified
Function -def build_where(self, q_object): in file ('django/db/models/sql', 'query.py') is deleted
Function +def build_where(self, filter_expr): in file ('django/db/models/sql', 'query.py') is added
Function  def add_filtered_relation(self, filtered_relation, alias): in file ('django/db/models/sql', 'query.py') is modified
Function  def names_to_path(self, names, opts, allow_many=True, fail_on_missing=False): in file ('django/db/models/sql', 'query.py') is modified
Function  def final_transformer(field, alias): in file ('django/db/models/sql', 'query.py') is added
Function -def resolve_ref(self, name, allow_joins=True, reuse=None, summarize=False, simple_col=False): in file ('django/db/models/sql', 'query.py') is modified
Function +def _gen_cols(cls, exprs, include_external=False): in file ('django/db/models/sql', 'query.py') is added
Function +def _gen_col_aliases(cls, exprs): in file ('django/db/models/sql', 'query.py') is added
Function +def resolve_ref(self, name, allow_joins=True, reuse=None, summarize=False): in file ('django/db/models/sql', 'query.py') is added
Function  def split_exclude(self, filter_expr, can_reuse, names_with_path): in file ('django/db/models/sql', 'query.py') is modified
Function  def set_empty(self): in file ('django/db/models/sql', 'query.py') is added
Function +def is_sliced(self): in file ('django/db/models/sql', 'query.py') is added
Function  def clear_select_clause(self): in file ('django/db/models/sql', 'query.py') is modified
Function +def add_select_col(self, col, name): in file ('django/db/models/sql', 'query.py') is modified
Function  def set_select(self, cols): in file ('django/db/models/sql', 'query.py') is modified
Function -def set_group_by(self): in file ('django/db/models/sql', 'query.py') is modified
Function +def set_group_by(self, allow_aliases=True): in file ('django/db/models/sql', 'query.py') is modified
Function  def add_select_related(self, fields): in file ('django/db/models/sql', 'query.py') is modified
Function  def annotation_select(self): in file ('django/db/models/sql', 'query.py') is modified
Function  def delete_batch(self, pk_list, using): in file ('django/db/models/sql', 'subqueries.py') is modified
Function -def delete_qs(self, query, using): in file ('django/db/models/sql', 'subqueries.py') is deleted
Function -def add_subquery(self, query, using): in file ('django/db/models/sql', 'subqueries.py') is modified
Function +def __init__(self, model, inner_query): in file ('django/db/models/sql', 'subqueries.py') is added
Function -def get_group_by_cols(self): in file ('django/db/models/sql', 'where.py') is modified
Function +def get_group_by_cols(self, alias=None): in file ('django/db/models/sql', 'where.py') is modified
Function +def copy(self): in file ('django/db/models/sql', 'where.py') is added
Function  def _contains_aggregate(cls, obj): in file ('django/db/models/sql', 'where.py') is modified
Function +def _resolve_leaf(expr, query, *args, **kwargs): in file ('django/db/models/sql', 'where.py') is added
Function +def _resolve_node(cls, node, query, *args, **kwargs): in file ('django/db/models/sql', 'where.py') is added
Function  def resolve_expression(self, *args, **kwargs): in file ('django/db/models/sql', 'where.py') is added
Function -def equals(self, other, with_filtered_relation): in file ('django/db/models/sql', 'datastructures.py') is modified
Function +def identity(self): in file ('django/db/models/sql', 'datastructures.py') is added
Function +def __hash__(self): in file ('django/db/models/sql', 'datastructures.py') is added
Function +def equals(self, other, with_filtered_relation): in file ('django/db/models/sql', 'datastructures.py') is added
Function  def demote(self): in file ('django/db/models/sql', 'datastructures.py') is modified
Function +def identity(self): in file ('django/db/models/sql', 'datastructures.py') is added
Function +def __eq__(self, other): in file ('django/db/models/sql', 'datastructures.py') is added
Function +def __hash__(self): in file ('django/db/models/sql', 'datastructures.py') is added
Function -def cleanse_setting(key, value): in file ('django/views', 'debug.py') is deleted
Function -def get_safe_settings(): in file ('django/views', 'debug.py') is deleted
Function -def get_post_parameters(self, request): in file ('django/views', 'debug.py') is deleted
Function -def get_traceback_frame_variables(self, request, tb_frame): in file ('django/views', 'debug.py') is deleted
Function +def get_exception_reporter_class(request): in file ('django/views', 'debug.py') is added
Function +def cleanse_setting(self, key, value): in file ('django/views', 'debug.py') is added
Function +def get_safe_settings(self): in file ('django/views', 'debug.py') is added
Function +def get_safe_request_meta(self, request): in file ('django/views', 'debug.py') is added
Function  def is_active(self, request): in file ('django/views', 'debug.py') is modified
Function  def get_post_parameters(self, request): in file ('django/views', 'debug.py') is modified
Function +def html_template_path(self): in file ('django/views', 'debug.py') is added
Function +def text_template_path(self): in file ('django/views', 'debug.py') is added
Function  def __init__(self, request, exc_type, exc_value, tb, is_email=False): in file ('django/views', 'debug.py') is modified
Function  def get_traceback_html(self): in file ('django/views', 'debug.py') is modified
Function  def get_traceback_text(self): in file ('django/views', 'debug.py') is modified
Function -def _get_lines_from_file(self, filename, lineno, context_lines, loader=None, module_name=None): in file ('django/views', 'debug.py') is modified
Function +def _get_source(self, filename, loader, module_name): in file ('django/views', 'debug.py') is modified
Function +def _get_lines_from_file(self, filename, lineno, context_lines, loader=None, module_name=None): in file ('django/views', 'debug.py') is added
Function +def _get_explicit_or_implicit_cause(self, exc_value): in file ('django/views', 'debug.py') is added
Function  def get_traceback_frames(self): in file ('django/views', 'debug.py') is deleted
Function -def explicit_or_implicit_cause(exc_value): in file ('django/views', 'debug.py') is deleted
Function +def get_exception_traceback_frames(self, exc_value, tb): in file ('django/views', 'debug.py') is modified
Function  def technical_404_response(request, exception): in file ('django/views', 'debug.py') is modified
Function  def default_urlconf(request): in file ('django/views', 'debug.py') is modified
Function  def decorator(func): in file ('django/views/decorators', 'debug.py') is modified
Function  def sensitive_variables_wrapper(*func_args, **func_kwargs): in file ('django/views/decorators', 'debug.py') is modified
Function  def view(request, *args, **kwargs): in file ('django/views/generic', 'base.py') is modified
Function  def setup(self, request, *args, **kwargs): in file ('django/views/generic', 'base.py') is modified
Function  def options(self, request, *args, **kwargs): in file ('django/views/generic', 'base.py') is modified
Function +def _add_script_prefix(value): in file ('django/conf', '__init__.py') is added
Function  def configured(self): in file ('django/conf', '__init__.py') is modified
Function -def DEFAULT_CONTENT_TYPE(self): in file ('django/conf', '__init__.py') is modified
Function +def PASSWORD_RESET_TIMEOUT_DAYS(self): in file ('django/conf', '__init__.py') is modified
Function -def FILE_CHARSET(self): in file ('django/conf', '__init__.py') is deleted
Function  def __getattr__(self, name): in file ('django/conf', '__init__.py') is modified
Function  def __setattr__(self, name, value): in file ('django/conf', '__init__.py') is modified
Function  def url(regex, view, kwargs=None, name=None): in file ('django/conf/urls', '__init__.py') is added
Function +def default_auto_field(self): in file ('django/apps', 'config.py') is added
Function +def _is_default_auto_field_overridden(self): in file ('django/apps', 'config.py') is added
Function  def _path_from_module(self, module): in file ('django/apps', 'config.py') is modified
Function  def unset_available_apps(self): in file ('django/apps', 'registry.py') is modified
Modified functions: 1127
Added functions: 637
Deleted functions: 322
Module file ('', 'setup.cfg') is modified
Module file ('django', '__init__.py') is modified
Module file ('django/middleware', 'gzip.py') is modified
Module file ('django/middleware', 'locale.py') is modified
Module file ('django/core', 'signals.py') is modified
Module file ('django/core/mail', '__init__.py') is modified
Module file ('django/core/mail/backends', 'filebased.py') is modified
Module file ('django/core/mail/backends', 'smtp.py') is modified
Module file ('django/core/checks', '__init__.py') is modified
Module file ('django/core/management/commands', 'sqlmigrate.py') is modified
Module file ('django/core/management/commands', 'dumpdata.py') is modified
Module file ('django/core/management/commands', 'flush.py') is modified
Module file ('django/core/management/commands', 'runserver.py') is modified
Module file ('django/core/management/commands', 'showmigrations.py') is modified
Module file ('django/core/management/commands', 'sqlsequencereset.py') is modified
Module file ('django/core/management/commands', 'startproject.py') is modified
Module file ('django/core/serializers', 'xml_serializer.py') is modified
Module file ('django/core/files', 'uploadedfile.py') is modified
Module file ('django/core/files', 'temp.py') is modified
Module file ('django/core/files', 'move.py') is modified
Module file ('django/core/handlers', 'wsgi.py') is modified
Module file ('django/bin', 'django-admin.py') is modified
Module file ('django/template', '__init__.py') is modified
Module file ('django/template', 'context_processors.py') is modified
Module file ('django/template', 'context.py') is modified
Module file ('django/template', 'utils.py') is modified
Module file ('django/template', 'loader_tags.py') is modified
Module file ('django/template/backends', 'django.py') is modified
Module file ('django/template/backends', 'jinja2.py') is modified
Module file ('django/template/backends', 'dummy.py') is modified
Module file ('django/template/loaders', 'base.py') is modified
Module file ('django/utils', 'termcolors.py') is modified
Module file ('django/utils', 'tree.py') is modified
Module file ('django/utils', 'numberformat.py') is modified
Module file ('django/utils', 'formats.py') is modified
Module file ('django/utils', 'module_loading.py') is modified
Module file ('django/utils', 'dateparse.py') is modified
Module file ('django/contrib/syndication', '__init__.py') is modified
Module file ('django/contrib/messages', '__init__.py') is modified
Module file ('django/contrib/auth', 'signals.py') is modified
Module file ('django/contrib/auth', 'validators.py') is modified
Module file ('django/contrib/auth', 'checks.py') is modified
Module file ('django/contrib/auth', 'apps.py') is modified
Module file ('django/contrib/auth', 'urls.py') is modified
Module file ('django/contrib/auth', 'views.py') is modified
Module file ('django/contrib/auth/migrations', '0001_initial.py') is modified
Module file ('django/contrib/admin/templatetags', 'admin_modify.py') is modified
Module file ('django/contrib/admin/templatetags', 'base.py') is modified
Module file ('django/contrib/admin/migrations', '0001_initial.py') is modified
Module file ('django/contrib/staticfiles', 'finders.py') is modified
Module file ('django/contrib/staticfiles', '__init__.py') is modified
Module file ('django/contrib/staticfiles', 'views.py') is modified
Module file ('django/contrib/staticfiles/management/commands', 'findstatic.py') is modified
Module file ('django/contrib/flatpages', '__init__.py') is modified
Module file ('django/contrib/flatpages', 'apps.py') is modified
Module file ('django/contrib/flatpages', 'views.py') is modified
Module file ('django/contrib/flatpages/migrations', '0001_initial.py') is modified
Module file ('django/contrib/sites', '__init__.py') is modified
Module file ('django/contrib/sites/migrations', '0001_initial.py') is modified
Module file ('django/contrib/postgres', '__init__.py') is modified
Module file ('django/contrib/postgres', 'apps.py') is modified
Module file ('django/contrib/redirects', '__init__.py') is modified
Module file ('django/contrib/redirects', 'apps.py') is modified
Module file ('django/contrib/redirects/migrations', '0001_initial.py') is modified
Module file ('django/contrib/sessions', '__init__.py') is modified
Module file ('django/contrib/sessions', 'exceptions.py') is modified
Module file ('django/contrib/sessions/backends', 'signed_cookies.py') is modified
Module file ('django/contrib/sessions/management/commands', 'clearsessions.py') is modified
Module file ('django/contrib/sitemaps', 'apps.py') is modified
Module file ('django/contrib/sitemaps/templates', 'sitemap.xml') is modified
Module file ('django/contrib/humanize', '__init__.py') is modified
Module file ('django/contrib/contenttypes', '__init__.py') is modified
Module file ('django/contrib/contenttypes', 'apps.py') is modified
Module file ('django/contrib/contenttypes', 'forms.py') is modified
Module file ('django/contrib/contenttypes', 'admin.py') is modified
Module file ('django/contrib/contenttypes', 'views.py') is modified
Module file ('django/contrib/contenttypes/management', '__init__.py') is modified
Module file ('django/contrib/gis', '__init__.py') is modified
Module file ('django/contrib/gis', 'apps.py') is modified
Module file ('django/contrib/gis', 'geometry.py') is modified
Module file ('django/contrib/gis', 'views.py') is modified
Module file ('django/contrib/gis/geos', 'geometry.py') is modified
Module file ('django/contrib/gis/geos/prototypes', 'geom.py') is modified
Module file ('django/contrib/gis/geos/prototypes', '__init__.py') is modified
Module file ('django/contrib/gis/geos/prototypes', 'coordseq.py') is modified
Module file ('django/contrib/gis/forms', 'fields.py') is modified
Module file ('django/contrib/gis/forms', 'widgets.py') is modified
Module file ('django/contrib/gis/gdal', 'error.py') is modified
Module file ('django/contrib/gis/gdal', '__init__.py') is modified
Module file ('django/contrib/gis/gdal', 'driver.py') is modified
Module file ('django/contrib/gis/gdal', 'envelope.py') is modified
Module file ('django/contrib/gis/gdal/prototypes', 'srs.py') is modified
Module file ('django/contrib/gis/gdal/prototypes', 'ds.py') is modified
Module file ('django/contrib/gis/gdal/prototypes', 'raster.py') is modified
Module file ('django/contrib/gis/gdal/raster', 'const.py') is modified
Module file ('django/contrib/gis/admin', '__init__.py') is modified
Module file ('django/contrib/gis/utils', 'ogrinspect.py') is modified
Module file ('django/contrib/gis/utils', '__init__.py') is modified
Module file ('django/contrib/gis/utils', 'layermapping.py') is modified
Module file ('django/contrib/gis/sitemaps', 'kml.py') is modified
Module file ('django/contrib/gis/sitemaps', 'views.py') is modified
Module file ('django/contrib/gis/db/backends/oracle', 'features.py') is modified
Module file ('django/contrib/gis/db/backends/oracle', 'schema.py') is modified
Module file ('django/contrib/gis/db/backends/postgis', 'pgraster.py') is modified
Module file ('django/contrib/gis/db/backends/postgis', 'features.py') is modified
Module file ('django/contrib/gis/db/backends/postgis', 'const.py') is modified
Module file ('django/contrib/gis/geoip2', 'resources.py') is modified
Module file ('django/contrib/gis/geoip2', 'base.py') is modified
Module file ('django/db/migrations', 'questioner.py') is modified
Module file ('django/db/migrations', 'exceptions.py') is modified
Module file ('django/db/migrations', 'writer.py') is modified
Module file ('django/db/backends', 'signals.py') is modified
Module file ('django/db/models', 'signals.py') is modified
Module file ('django/db/models', '__init__.py') is modified
Module file ('django/db/models/functions', '__init__.py') is modified
Module file ('django/db/models/sql', 'constants.py') is modified
Module file ('django/db/models/sql', '__init__.py') is modified
Module file ('django/views', 'csrf.py') is modified
Module file ('django/views', 'static.py') is modified
Module file ('django/views', 'defaults.py') is modified
Module file ('django/views', 'i18n.py') is modified
Module file ('django/views/decorators', 'cache.py') is modified
Module file ('django/views/decorators', 'http.py') is modified
Module file ('django/views/generic', 'list.py') is modified
Module file ('django/views/generic', 'dates.py') is modified
Module file ('django/conf', 'global_settings.py') is modified
Module file ('django/conf/locale', '__init__.py') is modified
Module file ('django/conf/locale/sl', 'formats.py') is modified
Module file ('django/conf/locale/sk', 'formats.py') is modified
Module file ('django/conf/locale/pl', 'formats.py') is modified
Module file ('django/conf/locale/de_CH', 'formats.py') is modified
Module file ('django/conf/locale/sv', 'formats.py') is modified
Module file ('django/conf/locale/nn', 'formats.py') is modified
Module file ('django/conf/locale/pt_BR', 'formats.py') is modified
Module file ('django/conf/locale/el', 'formats.py') is modified
Module file ('django/conf/locale/lv', 'formats.py') is modified
Module file ('django/conf/locale/it', 'formats.py') is modified
Module file ('django/conf/locale/cs', 'formats.py') is modified
Module file ('django/conf/locale/ru', 'formats.py') is modified
Module file ('django/conf/locale/pt', 'formats.py') is modified
Module file ('django/conf/locale/uk', 'formats.py') is modified
Module file ('django/conf/locale/sr', 'formats.py') is modified
Module file ('django/conf/locale/en_AU', 'formats.py') is modified
Module file ('django/conf/locale/en_GB', 'formats.py') is modified
Module file ('django/conf/locale/ml', 'formats.py') is modified
Module file ('django/conf/locale/mk', 'formats.py') is modified
Module file ('django/conf/locale/hr', 'formats.py') is modified
Module file ('django/conf/locale/hu', 'formats.py') is modified
Module file ('django/conf/locale/nl', 'formats.py') is modified
Module file ('django/conf/locale/nb', 'formats.py') is modified
Module file ('django/conf/locale/ka', 'formats.py') is modified
Module file ('django/conf/locale/de', 'formats.py') is modified
Module file ('django/conf/locale/az', 'formats.py') is modified
Module file ('django/conf/locale/ko', 'formats.py') is modified
Module file ('django/conf/locale/fi', 'formats.py') is modified
Module file ('django/conf/locale/sr_Latn', 'formats.py') is modified
Module file ('django/conf/locale/eo', 'formats.py') is modified
Module file ('django/conf/locale/id', 'formats.py') is modified
Module file ('django/conf/locale/fr', 'formats.py') is modified
Module file ('django/conf/locale/en', 'formats.py') is modified
Module file ('django/conf/locale/lt', 'formats.py') is modified
Module file ('django/conf/locale/cy', 'formats.py') is modified
Module file ('django/conf/locale/tr', 'formats.py') is modified
Module file ('extras', 'django_bash_completion') is modified
Modified module: 164

Process finished with exit code 0


added module 14
[('django/core', 'asgi.py'), ('django/core/checks', 'async_checks.py'), ('django/core/serializers', 'jsonl.py'), ('django/core/handlers', 'asgi.py'), ('django/template', 'autoreload.py'), ('django/utils', 'asyncio.py'), ('django/utils', 'connection.py'), ('django/contrib/auth/migrations', '0012_alter_user_first_name_max_length.py'), ('django/contrib/sites', 'checks.py'), ('django/contrib/postgres', 'constraints.py'), ('django/contrib/redirects/migrations', '0002_alter_redirect_new_path_help_text.py'), ('django/db/models', 'enums.py'), ('django/db/models/fields', 'json.py'), ('django/views/decorators', 'common.py')]
removed module 7
[('django/utils', 'six.py'), ('django/contrib/admin/templatetags', 'admin_static.py'), ('django/contrib/admin/bin', 'compress.py'), ('django/contrib/staticfiles/templatetags', 'staticfiles.py'), ('django/contrib/postgres/fields', 'mixins.py'), ('django/db/backends/postgresql', 'utils.py'), ('django/db/backends/oracle', 'compiler.py')]
moved module 0
[]